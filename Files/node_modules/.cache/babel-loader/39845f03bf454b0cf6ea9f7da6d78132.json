{"ast":null,"code":"var _jsxFileName = \"/Users/seung/Documents/work-code/Files/src/Table.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Table.css';\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from 'react-table';\n\n/**\n * Table() created a table\n * @param {object} columns the column structure\n * @param {object} data the data\n * @returns The table\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Table(_ref) {\n  _s();\n  let {\n    columns,\n    data\n  } = _ref;\n  // Table component logic and UI come here\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    state,\n    prepareRow,\n    setGlobalFilter\n  } = useTable({\n    columns,\n    data\n  }, useGlobalFilter, useSortBy);\n  const {\n    globalFilter\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: globalFilter || '',\n        onChange: e => setGlobalFilter(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n            ...column.getHeaderProps(column.getSortByToggleProps()),\n            className: column.isSorted ? column.isSortedDesc ? \"desc\" : \"asc\" : \"\",\n            children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: column.canFilter ? column.render('Filter') : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render(\"Cell\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 32\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Table, \"Ng07544PzpaNYPJKqAI6nNqvxNU=\", false, function () {\n  return [useTable];\n});\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useTable","useSortBy","useFilters","useGlobalFilter","Table","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","state","prepareRow","setGlobalFilter","globalFilter","e","target","value","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","canFilter","row","getRowProps","cells","cell","getCellProps"],"sources":["/Users/seung/Documents/work-code/Files/src/Table.js"],"sourcesContent":["import React from \"react\";\nimport './Table.css';\nimport { useTable, useSortBy, useFilters, useGlobalFilter } from 'react-table';\n\n/**\n * Table() created a table\n * @param {object} columns the column structure\n * @param {object} data the data\n * @returns The table\n */\nfunction Table({ columns, data }) {\n\n    // Table component logic and UI come here\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        state,\n        prepareRow,\n        setGlobalFilter,\n    } = useTable(\n        { columns, data }, \n        useGlobalFilter,\n        useSortBy\n    );\n    const { globalFilter } = state;\n\n    return (\n        <div>\n            <div className=\"search-container\">\n                <input\n                    type=\"text\"\n                    value={globalFilter || ''}\n                    onChange={(e) => setGlobalFilter(e.target.value)}\n                />\n            </div>\n            <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps(column.getSortByToggleProps())}\n                        className={\n                            column.isSorted ?\n                            column.isSortedDesc ?\n                            \"desc\" : \"asc\" : \"\"}>\n                        {column.render(\"Header\")}\n                        <div>\n                            {column.canFilter ? column.render('Filter') : null}\n                        </div>\n                    </th>\n                    ))}\n                </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map(row => {\n                prepareRow(row);\n                return (\n                    <tr {...row.getRowProps()}>\n                    {row.cells.map(cell => {\n                        return <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>;\n                    })}\n                    </tr>\n                );\n                })}\n            </tbody>\n            </table>\n        </div>\n    );\n }\n\nexport default Table;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,eAAe,QAAQ,aAAa;;AAE9E;AACA;AACA;AACA;AACA;AACA;AALA;AAMA,SAASC,KAAK,OAAoB;EAAA;EAAA,IAAnB;IAAEC,OAAO;IAAEC;EAAK,CAAC;EAE5B;EACA,MAAM;IACFC,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC,KAAK;IACLC,UAAU;IACVC;EACJ,CAAC,GAAGb,QAAQ,CACR;IAAEK,OAAO;IAAEC;EAAK,CAAC,EACjBH,eAAe,EACfF,SAAS,CACZ;EACD,MAAM;IAAEa;EAAa,CAAC,GAAGH,KAAK;EAE9B,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,kBAAkB;MAAA,uBAC7B;QACI,IAAI,EAAC,MAAM;QACX,KAAK,EAAEG,YAAY,IAAI,EAAG;QAC1B,QAAQ,EAAGC,CAAC,IAAKF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA;IACnD;MAAA;MAAA;MAAA;IAAA,QACA,eACN;MAAA,GAAWV,aAAa,EAAE;MAAA,wBAC1B;QAAA,UACKE,YAAY,CAACS,GAAG,CAACC,WAAW,iBAC7B;UAAA,GAAQA,WAAW,CAACC,mBAAmB,EAAE;UAAA,UACpCD,WAAW,CAACE,OAAO,CAACH,GAAG,CAACI,MAAM,iBAC/B;YAAA,GAAQA,MAAM,CAACC,cAAc,CAACD,MAAM,CAACE,oBAAoB,EAAE,CAAC;YACxD,SAAS,EACLF,MAAM,CAACG,QAAQ,GACfH,MAAM,CAACI,YAAY,GACnB,MAAM,GAAG,KAAK,GAAG,EAAG;YAAA,WACvBJ,MAAM,CAACK,MAAM,CAAC,QAAQ,CAAC,eACxB;cAAA,UACKL,MAAM,CAACM,SAAS,GAAGN,MAAM,CAACK,MAAM,CAAC,QAAQ,CAAC,GAAG;YAAI;cAAA;cAAA;cAAA;YAAA,QAChD;UAAA;YAAA;YAAA;YAAA;UAAA,QAET;QAAC;UAAA;UAAA;UAAA;QAAA,QAEL;MAAC;QAAA;QAAA;QAAA;MAAA,QACE,eACR;QAAA,GAAWnB,iBAAiB,EAAE;QAAA,UACzBE,IAAI,CAACQ,GAAG,CAACW,GAAG,IAAI;UACjBjB,UAAU,CAACiB,GAAG,CAAC;UACf,oBACI;YAAA,GAAQA,GAAG,CAACC,WAAW,EAAE;YAAA,UACxBD,GAAG,CAACE,KAAK,CAACb,GAAG,CAACc,IAAI,IAAI;cACnB,oBAAO;gBAAA,GAAQA,IAAI,CAACC,YAAY,EAAE;gBAAA,UAAGD,IAAI,CAACL,MAAM,CAAC,MAAM;cAAC;gBAAA;gBAAA;gBAAA;cAAA,QAAM;YAClE,CAAC;UAAC;YAAA;YAAA;YAAA;UAAA,QACG;QAET,CAAC;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACA;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEb;AAAC,GA7DOvB,KAAK;EAAA,QAWNJ,QAAQ;AAAA;AAAA,KAXPI,KAAK;AA+Dd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}