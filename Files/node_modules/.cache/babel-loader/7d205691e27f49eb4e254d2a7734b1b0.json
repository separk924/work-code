{"ast":null,"code":"var _jsxFileName = \"/Users/seung/Documents/work-code/Files/src/Dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport Table from './Table';\nimport './Dropdown.css';\nimport starwars from \"./APIs/starwars\";\nimport force from \"./components/force.png\";\nimport FilterForm from \"./Filter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n{/**\n    Icon() creates an svg for the dropdown menu\n */}\nconst Icon = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: \"20\",\n    width: \"20\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_c = Icon;\n{/**\n    Dropdown() waits for the user to click on an option, and renders a table for \n    that option. While it is waiting for the option, the website displays an image\n    and quote\n    @param {object} placeHolder The place holder for the Dropdown menu\n    @param {object} options The options in the menu\n */}\nconst Dropdown = _ref => {\n  _s();\n  let {\n    placeHolder,\n    options\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(null);\n  const [dataPeople, setDataPeople] = useState([]);\n  const [dataPlanet, setDataPlanet] = useState([]);\n  const [dataStarship, setDataStarship] = useState([]);\n  const [dataFilm, setDataFilm] = useState([]);\n  const [dataSpecies, setDataSpecies] = useState([]);\n  const [dataVehicle, setDataVehicle] = useState([]);\n\n  /**\n   * Waits for user to click\n   */\n  useEffect(() => {\n    const handler = () => setShowMenu(false);\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n\n  /**\n   * When the menu is clicked, the menu is closed\n   */\n  const handleInputClick = e => {\n    e.stopPropagation();\n    setShowMenu(!showMenu);\n  };\n\n  /**\n   * Displays the option that was selected\n   * @returns {object} the selected option, or placeholder if not selected\n   */\n  const getDisplay = () => {\n    if (selectedValue) {\n      return selectedValue.type;\n    }\n    return placeHolder;\n  };\n\n  /**\n   * Set selected value and stores it in selectedValue\n   * @param {object} option object in Dropdown menu\n   */\n  const onItemClick = option => {\n    setSelectedValue(option);\n  };\n\n  /**\n   * Checks whether an option has been selected\n   * @param {object} option object in Dropdown menu\n   * @returns true if the option has been selected\n   */\n  const isSelected = option => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.value === option.value;\n  };\n\n  /**\n   * Creates the table\n   * @param {object} data The JSON data that will be passed into the table\n   * @returns The column structure of the table\n   */\n  const createTable = data => {\n    var columns = [];\n    var first = data[0];\n    var Delete = {\n      Header: \" \",\n      accessor: \"delete\",\n      accessor: str => \"delete\",\n      Filter: FilterForm,\n      Cell: theRow => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          cursor: \"pointer\",\n          color: \"#8B0000\"\n        },\n        onClick: () => {\n          const dataCopy = [...theRow.data];\n          dataCopy.splice(theRow.row.index, 1);\n          if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"People\") {\n            setDataPeople(dataCopy);\n          } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Planets\") {\n            setDataPlanet(dataCopy);\n          } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Starships\") {\n            setDataStarship(dataCopy);\n          } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Films\") {\n            setDataFilm(dataCopy);\n          } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Species\") {\n            setDataSpecies(dataCopy);\n          } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Vehicles\") {\n            setDataVehicle(dataCopy);\n          }\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)\n    };\n    columns.push(Delete);\n    for (var item in first) {\n      var col = {\n        Header: item,\n        accessor: item,\n        Filter: FilterForm\n      };\n      columns.push(col);\n    }\n    return columns;\n  };\n\n  /**\n   * Sets the data and columns according to the option that was selected in the \n   * Dropdown menu.\n   */\n  useEffect(() => {\n    if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"People\") {\n      if (dataPeople.length == 0) {\n        starwars.getPeople().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataPeople));\n        setData(dataPeople);\n      }\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Planets\") {\n      if (dataPlanet.length == 0) {\n        starwars.getPlanets().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataPlanet));\n        setData(dataPlanet);\n      }\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Starships\") {\n      if (dataStarship.length == 0) {\n        starwars.getStarships().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataStarship));\n        setData(dataStarship);\n      }\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Films\") {\n      if (dataFilm.length == 0) {\n        starwars.getFilms().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataFilm));\n        setData(dataFilm);\n      }\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Species\") {\n      if (dataSpecies.length == 0) {\n        starwars.getSpecies().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataSpecies));\n        setData(dataSpecies);\n      }\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Vehicles\") {\n      if (dataVehicle.length == 0) {\n        starwars.getVehicles().then(response => {\n          setData(response);\n          if (data) {\n            setColumns(createTable(data));\n          }\n        });\n      } else {\n        setColumns(createTable(dataVehicle));\n        setData(dataVehicle);\n      }\n    }\n  }, [selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type, data, dataPeople, dataPlanet, dataFilm, dataSpecies, dataVehicle, dataStarship]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"selectCategory\",\n      children: \"Select a Category: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleInputClick,\n      className: \"dropdown-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-selected-value\",\n        children: getDisplay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-tools\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-tool\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onItemClick(option),\n          className: `dropdown-item ${isSelected(option) && \"selected\"}`,\n          children: option.type\n        }, option.type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), selectedValue && columns ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"\\\"Do. Or do not. There is no try.\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 61\n            }, this), \"-Yoda\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"force\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: force,\n            alt: \"force\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n_s(Dropdown, \"dO9Xm1BMbnZxvN8i11ewSTHyT/g=\");\n_c2 = Dropdown;\nexport default Dropdown;\nvar _c, _c2;\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","Table","starwars","force","FilterForm","Icon","Dropdown","placeHolder","options","showMenu","setShowMenu","selectedValue","setSelectedValue","data","setData","columns","setColumns","dataPeople","setDataPeople","dataPlanet","setDataPlanet","dataStarship","setDataStarship","dataFilm","setDataFilm","dataSpecies","setDataSpecies","dataVehicle","setDataVehicle","handler","window","addEventListener","removeEventListener","handleInputClick","e","stopPropagation","getDisplay","type","onItemClick","option","isSelected","value","createTable","first","Delete","Header","accessor","str","Filter","Cell","theRow","cursor","color","dataCopy","splice","row","index","push","item","col","length","getPeople","then","response","getPlanets","getStarships","getFilms","getSpecies","getVehicles","map"],"sources":["/Users/seung/Documents/work-code/Files/src/Dropdown.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport Table from './Table'\nimport './Dropdown.css';\nimport starwars from \"./APIs/starwars\";\nimport force from \"./components/force.png\";\nimport FilterForm from \"./Filter\";\n\n{/**\n    Icon() creates an svg for the dropdown menu\n*/}\nconst Icon = () => {\n    return (\n        <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n          <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n        </svg>\n      );\n};\n\n{/**\n    Dropdown() waits for the user to click on an option, and renders a table for \n    that option. While it is waiting for the option, the website displays an image\n    and quote\n    @param {object} placeHolder The place holder for the Dropdown menu\n    @param {object} options The options in the menu\n*/}\nconst Dropdown = ({ placeHolder, options}) => {\n\n    const [showMenu, setShowMenu] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(null);\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState(null);\n    const [dataPeople, setDataPeople] = useState([]);\n    const [dataPlanet, setDataPlanet] = useState([]);\n    const [dataStarship, setDataStarship] = useState([]);\n    const [dataFilm, setDataFilm] = useState([]);\n    const [dataSpecies, setDataSpecies] = useState([]);\n    const [dataVehicle, setDataVehicle] = useState([]);\n\n    /**\n     * Waits for user to click\n     */\n    useEffect(() => {\n        const handler = () => setShowMenu(false);\n\n        window.addEventListener(\"click\", handler);\n        return() => {\n            window.removeEventListener(\"click\", handler);\n        };\n    });\n\n    /**\n     * When the menu is clicked, the menu is closed\n     */\n    const handleInputClick = (e) => {\n        e.stopPropagation();\n        setShowMenu(!showMenu);\n    }\n\n    /**\n     * Displays the option that was selected\n     * @returns {object} the selected option, or placeholder if not selected\n     */\n    const getDisplay = () => {\n        if(selectedValue){\n            return selectedValue.type;\n        }\n        return placeHolder;\n    };\n\n\n    /**\n     * Set selected value and stores it in selectedValue\n     * @param {object} option object in Dropdown menu\n     */\n    const onItemClick = (option) => {\n        setSelectedValue(option);\n    }\n\n    /**\n     * Checks whether an option has been selected\n     * @param {object} option object in Dropdown menu\n     * @returns true if the option has been selected\n     */\n    const isSelected = (option) => {\n        if(!selectedValue){\n            return false;\n        }\n\n        return selectedValue.value === option.value;\n    }\n\n    /**\n     * Creates the table\n     * @param {object} data The JSON data that will be passed into the table\n     * @returns The column structure of the table\n     */\n    const createTable = (data) => {\n        var columns = [];\n        var first = data[0];\n        var Delete = {\n            Header: \" \",\n            accessor: \"delete\",\n            accessor: (str) => \"delete\",\n            Filter: FilterForm,\n\n            Cell: (theRow) => (\n                <span\n                    style={{\n                    cursor: \"pointer\",\n                    color: \"#8B0000\"\n                    }}\n                    onClick={() => {\n                    const dataCopy = [...theRow.data];\n                    dataCopy.splice(theRow.row.index, 1);\n                    if(selectedValue?.type == \"People\"){\n                        setDataPeople(dataCopy);\n                    }else if(selectedValue?.type == \"Planets\"){\n                        setDataPlanet(dataCopy);\n                    }else if(selectedValue?.type == \"Starships\"){\n                        setDataStarship(dataCopy);\n                    }else if(selectedValue?.type == \"Films\"){\n                        setDataFilm(dataCopy);\n                    }else if(selectedValue?.type == \"Species\"){\n                        setDataSpecies(dataCopy);\n                    }else if(selectedValue?.type == \"Vehicles\"){\n                        setDataVehicle(dataCopy);\n                    }\n                    }}\n                >\n                    Delete\n                </span>\n                )\n        }\n        columns.push(Delete);\n        for (var item in first){\n        var col = {\n            Header: item,\n            accessor: item,\n            Filter: FilterForm,\n        }\n        columns.push(col);\n        }\n        return columns;\n    }\n\n    /**\n     * Sets the data and columns according to the option that was selected in the \n     * Dropdown menu.\n     */\n    useEffect(() => {\n        if(selectedValue?.type == \"People\"){\n            if(dataPeople.length == 0){\n                starwars.getPeople().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataPeople));\n                setData(dataPeople);\n            }\n        }else if(selectedValue?.type == \"Planets\"){\n            if(dataPlanet.length == 0){\n                starwars.getPlanets().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataPlanet));\n                setData(dataPlanet);\n            }\n        }else if(selectedValue?.type == \"Starships\"){\n            if(dataStarship.length == 0){\n                starwars.getStarships().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataStarship));\n                setData(dataStarship);\n            }\n        }else if(selectedValue?.type == \"Films\"){\n            if(dataFilm.length == 0){\n                starwars.getFilms().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataFilm));\n                setData(dataFilm);\n            }\n        }else if(selectedValue?.type == \"Species\"){\n            if(dataSpecies.length == 0){\n                starwars.getSpecies().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataSpecies));\n                setData(dataSpecies);\n            }\n        }else if(selectedValue?.type == \"Vehicles\"){\n            if(dataVehicle.length == 0){\n                starwars.getVehicles().then((response) => {\n                    setData(response);\n                    if(data){\n                        setColumns(createTable(data))\n                    }\n                });\n            }else {\n                setColumns(createTable(dataVehicle));\n                setData(dataVehicle);\n            }\n        }\n    }, [selectedValue?.type, data, dataPeople, dataPlanet, dataFilm, dataSpecies, dataVehicle, dataStarship]);\n  \n    return (\n        <div className=\"dropdown-container\">\n            <h1 className=\"selectCategory\">Select a Category: </h1>\n            <div onClick={handleInputClick} className=\"dropdown-input\">\n                <div className=\"dropdown-selected-value\">{getDisplay()}</div>\n                <div className=\"dropdown-tools\">\n                    <div className=\"dropdown-tool\">\n                        <Icon />\n                    </div>\n                </div>\n                {showMenu && (\n                    <div className=\"dropdown-menu\">\n                        {options.map((option) => (\n                            <div \n                            onClick = {() => onItemClick(option)}\n                            key={option.type} \n                            className={`dropdown-item ${isSelected(option) && \"selected\"}`}>\n                                {option.type}\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <div>\n                <br></br>\n                {selectedValue && columns ? (\n                    <>\n                    <Table\n                        columns={columns}\n                        data={data}>\n                    </Table>\n                    </>\n                ) : \n                <>\n                    <div className=\"quote\">\n                        <i>\"Do. Or do not. There is no try.\"<br/>-Yoda</i>\n                    </div>\n                    <div className=\"force\">\n                    <img src={force} alt=\"force\" />\n                    </div>\n                </>}\n            </div>\n        </div>\n    );\n  };\n\n  export default Dropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}