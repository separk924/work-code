{"ast":null,"code":"import $iFADg$react, { useContext as $iFADg$useContext, useState as $iFADg$useState, useEffect as $iFADg$useEffect, useMemo as $iFADg$useMemo, useRef as $iFADg$useRef, useCallback as $iFADg$useCallback } from \"react\";\nimport { useIsSSR as $iFADg$useIsSSR } from \"@react-aria/ssr\";\nimport { LocalizedStringDictionary as $iFADg$LocalizedStringDictionary, LocalizedStringFormatter as $iFADg$LocalizedStringFormatter } from \"@internationalized/string\";\nimport { DateFormatter as $iFADg$DateFormatter } from \"@internationalized/date\";\nimport { NumberFormatter as $iFADg$NumberFormatter } from \"@internationalized/number\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */ /*\n       * Copyright 2020 Adobe. All rights reserved.\n       * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n       * you may not use this file except in compliance with the License. You may obtain a copy\n       * of the License at http://www.apache.org/licenses/LICENSE-2.0\n       *\n       * Unless required by applicable law or agreed to in writing, software distributed under\n       * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n       * OF ANY KIND, either express or implied. See the License for the specific language\n       * governing permissions and limitations under the License.\n       */ // https://en.wikipedia.org/wiki/Right-to-left\nconst $148a7a147e38ea7f$var$RTL_SCRIPTS = new Set([\"Arab\", \"Syrc\", \"Samr\", \"Mand\", \"Thaa\", \"Mend\", \"Nkoo\", \"Adlm\", \"Rohg\", \"Hebr\"]);\nconst $148a7a147e38ea7f$var$RTL_LANGS = new Set([\"ae\", \"ar\", \"arc\", \"bcc\", \"bqi\", \"ckb\", \"dv\", \"fa\", \"glk\", \"he\", \"ku\", \"mzn\", \"nqo\", \"pnb\", \"ps\", \"sd\", \"ug\", \"ur\", \"yi\"]);\nfunction $148a7a147e38ea7f$export$702d680b21cbd764(locale) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return $148a7a147e38ea7f$var$RTL_SCRIPTS.has(script);\n  }\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split(\"-\")[0];\n  return $148a7a147e38ea7f$var$RTL_LANGS.has(lang);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $1e5a04cdaf7d1af8$export$f09106e7c6677ec5() {\n  // @ts-ignore\n  let locale = typeof navigator !== \"undefined\" && (navigator.language || navigator.userLanguage) || \"en-US\";\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = \"en-US\";\n  }\n  return {\n    locale: locale,\n    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? \"rtl\" : \"ltr\"\n  };\n}\nlet $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\nlet $1e5a04cdaf7d1af8$var$listeners = new Set();\nfunction $1e5a04cdaf7d1af8$var$updateLocale() {\n  $1e5a04cdaf7d1af8$var$currentLocale = $1e5a04cdaf7d1af8$export$f09106e7c6677ec5();\n  for (let listener of $1e5a04cdaf7d1af8$var$listeners) listener($1e5a04cdaf7d1af8$var$currentLocale);\n}\nfunction $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a() {\n  let isSSR = (0, $iFADg$useIsSSR)();\n  let [defaultLocale, setDefaultLocale] = (0, $iFADg$useState)($1e5a04cdaf7d1af8$var$currentLocale);\n  (0, $iFADg$useEffect)(() => {\n    if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.addEventListener(\"languagechange\", $1e5a04cdaf7d1af8$var$updateLocale);\n    $1e5a04cdaf7d1af8$var$listeners.add(setDefaultLocale);\n    return () => {\n      $1e5a04cdaf7d1af8$var$listeners.delete(setDefaultLocale);\n      if ($1e5a04cdaf7d1af8$var$listeners.size === 0) window.removeEventListener(\"languagechange\", $1e5a04cdaf7d1af8$var$updateLocale);\n    };\n  }, []);\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) return {\n    locale: \"en-US\",\n    direction: \"ltr\"\n  };\n  return defaultLocale;\n}\nconst $18f2051aff69b9bf$var$I18nContext = /*#__PURE__*/(0, $iFADg$react).createContext(null);\nfunction $18f2051aff69b9bf$export$a54013f0d02a8f82(props) {\n  let {\n    locale: locale,\n    children: children\n  } = props;\n  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();\n  let value = locale ? {\n    locale: locale,\n    direction: (0, $148a7a147e38ea7f$export$702d680b21cbd764)(locale) ? \"rtl\" : \"ltr\"\n  } : defaultLocale;\n  return /*#__PURE__*/(0, $iFADg$react).createElement($18f2051aff69b9bf$var$I18nContext.Provider, {\n    value: value\n  }, children);\n}\nfunction $18f2051aff69b9bf$export$43bb16f9c6d9e3f7() {\n  let defaultLocale = (0, $1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a)();\n  let context = (0, $iFADg$useContext)($18f2051aff69b9bf$var$I18nContext);\n  return context || defaultLocale;\n}\nvar $2aa2084a6c2b6b4f$exports = {};\n\"use strict\";\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nconst $fca6afa0e843324b$var$cache = new WeakMap();\nfunction $fca6afa0e843324b$var$getCachedDictionary(strings) {\n  let dictionary = $fca6afa0e843324b$var$cache.get(strings);\n  if (!dictionary) {\n    dictionary = new (0, $iFADg$LocalizedStringDictionary)(strings);\n    $fca6afa0e843324b$var$cache.set(strings, dictionary);\n  }\n  return dictionary;\n}\nfunction $fca6afa0e843324b$export$f12b703ca79dfbb1(strings) {\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  let dictionary = (0, $iFADg$useMemo)(() => $fca6afa0e843324b$var$getCachedDictionary(strings), [strings]);\n  return (0, $iFADg$useMemo)(() => new (0, $iFADg$LocalizedStringFormatter)(locale, dictionary), [locale, dictionary]);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $33bf17300c498528$export$a2f47a3d2973640() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  // @ts-ignore\n  return (0, $iFADg$useMemo)(() => new Intl.ListFormat(locale, options), [locale, options]);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $896ba0a80a8f4d36$export$85fd5fdf27bacc79(options) {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = (0, $iFADg$useRef)(null);\n  if (options && lastOptions.current && $896ba0a80a8f4d36$var$isEqual(options, lastOptions.current)) options = lastOptions.current;\n  lastOptions.current = options;\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  return (0, $iFADg$useMemo)(() => new (0, $iFADg$DateFormatter)(locale, options), [locale, options]);\n}\nfunction $896ba0a80a8f4d36$var$isEqual(a, b) {\n  if (a === b) return true;\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) return false;\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) return false;\n  }\n  return true;\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $a916eb452884faea$export$b7a616150fdb9f44() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  return (0, $iFADg$useMemo)(() => new (0, $iFADg$NumberFormatter)(locale, options), [locale, options]);\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nlet $325a3faab7a68acd$var$cache = new Map();\nfunction $325a3faab7a68acd$export$a16aca283550c30d(options) {\n  let {\n    locale: locale\n  } = (0, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7)();\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : \"\");\n  if ($325a3faab7a68acd$var$cache.has(cacheKey)) return $325a3faab7a68acd$var$cache.get(cacheKey);\n  let formatter = new Intl.Collator(locale, options);\n  $325a3faab7a68acd$var$cache.set(cacheKey, formatter);\n  return formatter;\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $bb77f239b46e8c72$export$3274cf84b703fff(options) {\n  let collator = (0, $325a3faab7a68acd$export$a16aca283550c30d)({\n    usage: \"search\",\n    ...options\n  });\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n  let startsWith = (0, $iFADg$useCallback)((string, substring) => {\n    if (substring.length === 0) return true;\n    // Normalize both strings so we can slice safely\n    // TODO: take into account the ignorePunctuation option as well...\n    string = string.normalize(\"NFC\");\n    substring = substring.normalize(\"NFC\");\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }, [collator]);\n  let endsWith = (0, $iFADg$useCallback)((string, substring) => {\n    if (substring.length === 0) return true;\n    string = string.normalize(\"NFC\");\n    substring = substring.normalize(\"NFC\");\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }, [collator]);\n  let contains = (0, $iFADg$useCallback)((string, substring) => {\n    if (substring.length === 0) return true;\n    string = string.normalize(\"NFC\");\n    substring = substring.normalize(\"NFC\");\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) return true;\n    }\n    return false;\n  }, [collator]);\n  return (0, $iFADg$useMemo)(() => ({\n    startsWith: startsWith,\n    endsWith: endsWith,\n    contains: contains\n  }), [startsWith, endsWith, contains]);\n}\nexport { $18f2051aff69b9bf$export$a54013f0d02a8f82 as I18nProvider, $18f2051aff69b9bf$export$43bb16f9c6d9e3f7 as useLocale, $fca6afa0e843324b$export$f12b703ca79dfbb1 as useLocalizedStringFormatter, $33bf17300c498528$export$a2f47a3d2973640 as useListFormatter, $896ba0a80a8f4d36$export$85fd5fdf27bacc79 as useDateFormatter, $a916eb452884faea$export$b7a616150fdb9f44 as useNumberFormatter, $325a3faab7a68acd$export$a16aca283550c30d as useCollator, $bb77f239b46e8c72$export$3274cf84b703fff as useFilter };","map":{"version":3,"mappings":"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","names":["$148a7a147e38ea7f$var$RTL_SCRIPTS","Set","$148a7a147e38ea7f$var$RTL_LANGS","$148a7a147e38ea7f$export$702d680b21cbd764","locale","Intl","Locale","script","maximize","has","lang","split","$1e5a04cdaf7d1af8$export$f09106e7c6677ec5","navigator","language","userLanguage","DateTimeFormat","supportedLocalesOf","_err","direction","$1e5a04cdaf7d1af8$var$currentLocale","$1e5a04cdaf7d1af8$var$listeners","$1e5a04cdaf7d1af8$var$updateLocale","listener","$1e5a04cdaf7d1af8$export$188ec29ebc2bdc3a","isSSR","defaultLocale","setDefaultLocale","size","window","addEventListener","add","delete","removeEventListener","$18f2051aff69b9bf$var$I18nContext","createContext","$18f2051aff69b9bf$export$a54013f0d02a8f82","props","children","value","Provider","$18f2051aff69b9bf$export$43bb16f9c6d9e3f7","context","$fca6afa0e843324b$var$cache","WeakMap","$fca6afa0e843324b$var$getCachedDictionary","strings","dictionary","get","set","$fca6afa0e843324b$export$f12b703ca79dfbb1","$33bf17300c498528$export$a2f47a3d2973640","options","ListFormat","$896ba0a80a8f4d36$export$85fd5fdf27bacc79","lastOptions","current","$896ba0a80a8f4d36$var$isEqual","a","b","aKeys","Object","keys","bKeys","length","key","$a916eb452884faea$export$b7a616150fdb9f44","$325a3faab7a68acd$var$cache","Map","$325a3faab7a68acd$export$a16aca283550c30d","cacheKey","entries","sort","join","formatter","Collator","$bb77f239b46e8c72$export$3274cf84b703fff","collator","usage","startsWith","string","substring","normalize","compare","slice","endsWith","contains","scan","sliceLen"],"sources":["packages/@react-aria/i18n/src/index.ts","packages/@react-aria/i18n/src/context.tsx","packages/@react-aria/i18n/src/utils.ts","packages/@react-aria/i18n/src/useDefaultLocale.ts","node_modules/@parcel/node-resolver-core/lib/_empty.js","packages/@react-aria/i18n/src/useLocalizedStringFormatter.ts","packages/@react-aria/i18n/src/useListFormatter.tsx","packages/@react-aria/i18n/src/useDateFormatter.ts","packages/@react-aria/i18n/src/useNumberFormatter.ts","packages/@react-aria/i18n/src/useCollator.ts","packages/@react-aria/i18n/src/useFilter.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {I18nProvider, useLocale} from './context';\nexport {useMessageFormatter} from './useMessageFormatter';\nexport {useLocalizedStringFormatter} from './useLocalizedStringFormatter';\nexport {useListFormatter} from './useListFormatter';\nexport {useDateFormatter} from './useDateFormatter';\nexport {useNumberFormatter} from './useNumberFormatter';\nexport {useCollator} from './useCollator';\nexport {useFilter} from './useFilter';\n\nexport type {FormatMessage} from './useMessageFormatter';\nexport type {I18nProviderProps} from './context';\nexport type {Locale} from './useDefaultLocale';\nexport type {LocalizedStrings} from '@internationalized/message';\nexport type {DateFormatterOptions} from './useDateFormatter';\nexport type {DateFormatter} from '@internationalized/date';\nexport type {Filter} from './useFilter';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isRTL} from './utils';\nimport {Locale, useDefaultLocale} from './useDefaultLocale';\nimport React, {ReactNode, useContext} from 'react';\n\nexport interface I18nProviderProps {\n  /** Contents that should have the locale applied. */\n  children: ReactNode,\n  /** The locale to apply to the children. */\n  locale?: string\n}\n\nconst I18nContext = React.createContext<Locale>(null);\n\n/**\n * Provides the locale for the application to all child components.\n */\nexport function I18nProvider(props: I18nProviderProps) {\n  let {locale, children} = props;\n  let defaultLocale = useDefaultLocale();\n\n  let value: Locale = locale ? {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  } : defaultLocale;\n\n  return (\n    <I18nContext.Provider value={value}>\n      {children}\n    </I18nContext.Provider>\n  );\n}\n\n/**\n * Returns the current locale and layout direction.\n */\nexport function useLocale(): Locale {\n  let defaultLocale = useDefaultLocale();\n  let context = useContext(I18nContext);\n  return context || defaultLocale;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// https://en.wikipedia.org/wiki/Right-to-left\nconst RTL_SCRIPTS = new Set(['Arab', 'Syrc', 'Samr', 'Mand', 'Thaa', 'Mend', 'Nkoo', 'Adlm', 'Rohg', 'Hebr']);\nconst RTL_LANGS = new Set(['ae', 'ar', 'arc', 'bcc', 'bqi', 'ckb', 'dv', 'fa', 'glk', 'he', 'ku', 'mzn', 'nqo', 'pnb', 'ps', 'sd', 'ug', 'ur', 'yi']);\n\n/**\n * Determines if a locale is read right to left using [Intl.Locale]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/Locale}.\n */\nexport function isRTL(locale: string) {\n  // If the Intl.Locale API is available, use it to get the script for the locale.\n  // This is more accurate than guessing by language, since languages can be written in multiple scripts.\n  // @ts-ignore\n  if (Intl.Locale) {\n    // @ts-ignore\n    let script = new Intl.Locale(locale).maximize().script;\n    return RTL_SCRIPTS.has(script);\n  }\n\n  // If not, just guess by the language (first part of the locale)\n  let lang = locale.split('-')[0];\n  return RTL_LANGS.has(lang);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {isRTL} from './utils';\nimport {useEffect, useState} from 'react';\nimport {useIsSSR} from '@react-aria/ssr';\n\nexport interface Locale {\n  /** The [BCP47](https://www.ietf.org/rfc/bcp/bcp47.txt) language code for the locale. */\n  locale: string,\n  /** The writing direction for the locale. */\n  direction: Direction\n}\n\n/**\n * Gets the locale setting of the browser.\n */\nexport function getDefaultLocale(): Locale {\n  // @ts-ignore\n  let locale = (typeof navigator !== 'undefined' && (navigator.language || navigator.userLanguage)) || 'en-US';\n  try {\n    // @ts-ignore\n    Intl.DateTimeFormat.supportedLocalesOf([locale]);\n  } catch (_err) {\n    locale = 'en-US';\n  }\n  return {\n    locale,\n    direction: isRTL(locale) ? 'rtl' : 'ltr'\n  };\n}\n\nlet currentLocale = getDefaultLocale();\nlet listeners = new Set<(locale: Locale) => void>();\n\nfunction updateLocale() {\n  currentLocale = getDefaultLocale();\n  for (let listener of listeners) {\n    listener(currentLocale);\n  }\n}\n\n/**\n * Returns the current browser/system language, and updates when it changes.\n */\nexport function useDefaultLocale(): Locale {\n  let isSSR = useIsSSR();\n  let [defaultLocale, setDefaultLocale] = useState(currentLocale);\n\n  useEffect(() => {\n    if (listeners.size === 0) {\n      window.addEventListener('languagechange', updateLocale);\n    }\n\n    listeners.add(setDefaultLocale);\n\n    return () => {\n      listeners.delete(setDefaultLocale);\n      if (listeners.size === 0) {\n        window.removeEventListener('languagechange', updateLocale);\n      }\n    };\n  }, []);\n\n  // We cannot determine the browser's language on the server, so default to\n  // en-US. This will be updated after hydration on the client to the correct value.\n  if (isSSR) {\n    return {\n      locale: 'en-US',\n      direction: 'ltr'\n    };\n  }\n\n  return defaultLocale;\n}\n","\"use strict\";","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {LocalizedString, LocalizedStringDictionary, LocalizedStringFormatter, LocalizedStrings} from '@internationalized/string';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\nconst cache = new WeakMap();\nfunction getCachedDictionary<K extends string, T extends LocalizedString>(strings: LocalizedStrings<K, T>): LocalizedStringDictionary<K, T> {\n  let dictionary = cache.get(strings);\n  if (!dictionary) {\n    dictionary = new LocalizedStringDictionary(strings);\n    cache.set(strings, dictionary);\n  }\n\n  return dictionary;\n}\n\n/**\n * Provides localized string formatting for the current locale. Supports interpolating variables,\n * selecting the correct pluralization, and formatting numbers. Automatically updates when the locale changes.\n * @param strings - A mapping of languages to localized strings by key.\n */\nexport function useLocalizedStringFormatter<K extends string = string, T extends LocalizedString = string>(strings: LocalizedStrings<K, T>): LocalizedStringFormatter<K, T> {\n  let {locale} = useLocale();\n  let dictionary = useMemo(() => getCachedDictionary(strings), [strings]);\n  return useMemo(() => new LocalizedStringFormatter(locale, dictionary), [locale, dictionary]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized list formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the list formatter for performance.\n * @param options - Formatting options.\n */\n\n// Typescript version 4.7 supports Intl.ListFormat - TODO upgrade\n// @ts-ignore\nexport function useListFormatter(options: Intl.ListFormatOptions = {}): Intl.ListFormat {\n  let {locale} = useLocale();\n  // @ts-ignore\n  return useMemo(() => new Intl.ListFormat(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DateFormatter} from '@internationalized/date';\nimport {useLocale} from './context';\nimport {useMemo, useRef} from 'react';\n\nexport interface DateFormatterOptions extends Intl.DateTimeFormatOptions {\n  calendar?: string\n}\n\n/**\n * Provides localized date formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the date formatter for performance.\n * @param options - Formatting options.\n */\nexport function useDateFormatter(options?: DateFormatterOptions): DateFormatter {\n  // Reuse last options object if it is shallowly equal, which allows the useMemo result to also be reused.\n  let lastOptions = useRef(null);\n  if (options && lastOptions.current && isEqual(options, lastOptions.current)) {\n    options = lastOptions.current;\n  }\n\n  lastOptions.current = options;\n\n  let {locale} = useLocale();\n  return useMemo(() => new DateFormatter(locale, options), [locale, options]);\n}\n\nfunction isEqual(a: DateFormatterOptions, b: DateFormatterOptions) {\n  if (a === b) {\n    return true;\n  }\n\n  let aKeys = Object.keys(a);\n  let bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false;\n  }\n\n  for (let key of aKeys) {\n    if (b[key] !== a[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {NumberFormatOptions, NumberFormatter} from '@internationalized/number';\nimport {useLocale} from './context';\nimport {useMemo} from 'react';\n\n/**\n * Provides localized number formatting for the current locale. Automatically updates when the locale changes,\n * and handles caching of the number formatter for performance.\n * @param options - Formatting options.\n */\nexport function useNumberFormatter(options: NumberFormatOptions = {}): Intl.NumberFormat {\n  let {locale} = useLocale();\n  return useMemo(() => new NumberFormatter(locale, options), [locale, options]);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useLocale} from './context';\n\nlet cache = new Map<string, Intl.Collator>();\n\n/**\n * Provides localized string collation for the current locale. Automatically updates when the locale changes,\n * and handles caching of the collator for performance.\n * @param options - Collator options.\n */\nexport function useCollator(options?: Intl.CollatorOptions): Intl.Collator {\n  let {locale} = useLocale();\n\n  let cacheKey = locale + (options ? Object.entries(options).sort((a, b) => a[0] < b[0] ? -1 : 1).join() : '');\n  if (cache.has(cacheKey)) {\n    return cache.get(cacheKey);\n  }\n\n  let formatter = new Intl.Collator(locale, options);\n  cache.set(cacheKey, formatter);\n  return formatter;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useMemo} from 'react';\nimport {useCollator} from './useCollator';\n\nexport interface Filter {\n  /** Returns whether a string starts with a given substring. */\n  startsWith(string: string, substring: string): boolean,\n  /** Returns whether a string ends with a given substring. */\n  endsWith(string: string, substring: string): boolean,\n  /** Returns whether a string contains a given substring. */\n  contains(string: string, substring: string): boolean\n}\n\n/**\n * Provides localized string search functionality that is useful for filtering or matching items\n * in a list. Options can be provided to adjust the sensitivity to case, diacritics, and other parameters.\n */\nexport function useFilter(options?: Intl.CollatorOptions): Filter {\n  let collator = useCollator({\n    usage: 'search',\n    ...options\n  });\n\n  // TODO(later): these methods don't currently support the ignorePunctuation option.\n  let startsWith = useCallback((string, substring) => {\n    if (substring.length === 0) {\n      return true;\n    }\n\n    // Normalize both strings so we can slice safely\n    // TODO: take into account the ignorePunctuation option as well...\n    string = string.normalize('NFC');\n    substring = substring.normalize('NFC');\n    return collator.compare(string.slice(0, substring.length), substring) === 0;\n  }, [collator]);\n\n  let endsWith = useCallback((string, substring) => {\n    if (substring.length === 0) {\n      return true;\n    }\n\n    string = string.normalize('NFC');\n    substring = substring.normalize('NFC');\n    return collator.compare(string.slice(-substring.length), substring) === 0;\n  }, [collator]);\n\n  let contains = useCallback((string, substring) => {\n    if (substring.length === 0) {\n      return true;\n    }\n\n    string = string.normalize('NFC');\n    substring = substring.normalize('NFC');\n\n    let scan = 0;\n    let sliceLen = substring.length;\n    for (; scan + sliceLen <= string.length; scan++) {\n      let slice = string.slice(scan, scan + sliceLen);\n      if (collator.compare(substring, slice) === 0) {\n        return true;\n      }\n    }\n\n    return false;\n  }, [collator]);\n\n  return useMemo(() => ({\n    startsWith,\n    endsWith,\n    contains\n  }), [startsWith, endsWith, contains]);\n}\n"]},"metadata":{},"sourceType":"module"}