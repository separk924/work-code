{"ast":null,"code":"var _jsxFileName = \"/Users/seung/Documents/work-code/Files/src/Dropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Table from './Table';\nimport './Dropdown.css';\nimport starwars from \"./APIs/starwars\";\nimport force from \"./components/force.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n{/**\n    Icon() creates an svg for the dropdown menu\n */}\nconst Icon = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    height: \"20\",\n    width: \"20\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_c = Icon;\n{/**\n    Dropdown() waits for the user to click on an option, and renders a table for \n    that option. While it is waiting for the option, the website displays an image\n    and quote\n    @param {object} placeHolder The place holder for the Dropdown menu\n    @param {object} options The options in the menu\n */}\nconst Dropdown = _ref => {\n  _s();\n  let {\n    placeHolder,\n    options\n  } = _ref;\n  const [showMenu, setShowMenu] = useState(false);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const [data, setData] = useState([]);\n  const [columns, setColumns] = useState(null);\n\n  /**\n   * Waits for user to click\n   */\n  useEffect(() => {\n    const handler = () => setShowMenu(false);\n    window.addEventListener(\"click\", handler);\n    return () => {\n      window.removeEventListener(\"click\", handler);\n    };\n  });\n\n  /**\n   * When the menu is clicked, the menu is closed\n   */\n  const handleInputClick = e => {\n    e.stopPropagation();\n    setShowMenu(!showMenu);\n  };\n\n  /**\n   * Displays the option that was selected\n   * @returns {object} the selected option, or placeholder if not selected\n   */\n  const getDisplay = () => {\n    if (selectedValue) {\n      return selectedValue.type;\n    }\n    return placeHolder;\n  };\n\n  /**\n   * Set selected value and stores it in selectedValue\n   * @param {object} option object in Dropdown menu\n   */\n  const onItemClick = option => {\n    setSelectedValue(option);\n  };\n\n  /**\n   * Checks whether an option has been selected\n   * @param {object} option object in Dropdown menu\n   * @returns true if the option has been selected\n   */\n  const isSelected = option => {\n    if (!selectedValue) {\n      return false;\n    }\n    return selectedValue.value === option.value;\n  };\n\n  /**\n   * Sets the data and columns according to the option that was selected in the \n   * Dropdown menu.\n   */\n  useEffect(() => {\n    if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"People\") {\n      starwars.getPeople().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Birth Date\",\n          accessor: \"birth_year\"\n        }, {\n          Header: \"Gender\",\n          accessor: \"gender\"\n        }, {\n          Header: \"Hair Color\",\n          accessor: \"hair_color\"\n        }, {\n          Header: \"Height\",\n          accessor: \"height\"\n        }, {\n          Header: \"Weight (Kilo)\",\n          accessor: \"mass\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: () => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"#8B0000\"\n            },\n            onClick: () => {\n              let dataCopy = data;\n              console.log(data[row.index]);\n              dataCopy.splice(row.index, 1);\n              setData({\n                dataCopy\n              });\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Planets\") {\n      starwars.getPlanets().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Climate\",\n          accessor: \"climate\"\n        }, {\n          Header: \"Diameter (Kilometers)\",\n          accessor: \"diameter\"\n        }, {\n          Header: \"Gravity\",\n          accessor: \"gravity\"\n        }, {\n          Header: \"Orbital Period (days)\",\n          accessor: \"orbital_period\"\n        }, {\n          Header: \"Population\",\n          accessor: \"population\"\n        }, {\n          Header: \"Rotation Period (hrs)\",\n          accessor: \"rotation_period\"\n        }, {\n          Header: \"Surface Water (%)\",\n          accessor: \"surface_water\"\n        }, {\n          Header: \"Terrain\",\n          accessor: \"terrain\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: theRow => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"Burgundy\"\n            },\n            onClick: () => {\n              // ES6 Syntax use the rvalue if your data is an array.\n              const dataCopy = [...data];\n              console.log(...data);\n              // It should not matter what you name tableProps. It made the most sense to me.\n              dataCopy.splice(theRow.row.index, 1);\n              setData(dataCopy);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Starships\") {\n      starwars.getStarships().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Model\",\n          accessor: \"model\"\n        }, {\n          Header: \"Manufacturer\",\n          accessor: \"manufacturer\"\n        }, {\n          Header: \"Starship Class\",\n          accessor: \"starship_class\"\n        }, {\n          Header: \"Speed (# of Megalights/Hr)\",\n          accessor: \"MGLT\"\n        }, {\n          Header: \"Length (meters)\",\n          accessor: \"length\"\n        }, {\n          Header: \"Passenger Capacity (non-essential)\",\n          accessor: \"passengers\"\n        }, {\n          Header: \"Max Atmosphering Speed (n/a if not possible)\",\n          accessor: \"max_atmosphering_speed\"\n        }, {\n          Header: \"Cargo Capacity (Kilo)\",\n          accessor: \"cargo_capacity\"\n        }, {\n          Header: \"Cost (galactic credits)\",\n          accessor: \"cost_in_credits\"\n        }, {\n          Header: \"Crew\",\n          accessor: \"crew\"\n        }, {\n          Header: \"Hyperdrive Rating\",\n          accessor: \"hyperdrive_rating\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: tableProps => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"Burgundy\"\n            },\n            onClick: () => {\n              // ES6 Syntax use the rvalue if your data is an array.\n              const dataCopy = [...data];\n              console.log(...data);\n              // It should not matter what you name tableProps. It made the most sense to me.\n              dataCopy.splice(tableProps.row.index, 1);\n              setData(dataCopy);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Films\") {\n      starwars.getFilms().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Title\",\n          accessor: \"title\"\n        }, {\n          Header: \"Director\",\n          accessor: \"director\"\n        }, {\n          Header: \"Producer\",\n          accessor: \"producer\"\n        }, {\n          Header: \"Release Date\",\n          accessor: \"release_date\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: tableProps => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"Burgundy\"\n            },\n            onClick: () => {\n              // ES6 Syntax use the rvalue if your data is an array.\n              const dataCopy = [...data];\n              console.log(...data);\n              // It should not matter what you name tableProps. It made the most sense to me.\n              dataCopy.splice(tableProps.row.index, 1);\n              setData(dataCopy);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Species\") {\n      starwars.getSpecies().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Skin Color\",\n          accessor: \"skin_colors\"\n        }, {\n          Header: \"Eye Colors\",\n          accessor: \"eye_colors\"\n        }, {\n          Header: \"Hair Colors\",\n          accessor: \"hair_colors\"\n        }, {\n          Header: \"Language\",\n          accessor: \"language\"\n        }, {\n          Header: \"Designation\",\n          accessor: \"designation\"\n        }, {\n          Header: \"Classification\",\n          accessor: \"classification\"\n        }, {\n          Header: \"Average Height (centimeters)\",\n          accessor: \"average_height\"\n        }, {\n          Header: \"Average Lifespan (years)\",\n          accessor: \"average_lifespan\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: tableProps => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"Burgundy\"\n            },\n            onClick: () => {\n              // ES6 Syntax use the rvalue if your data is an array.\n              const dataCopy = [...data];\n              console.log(...data);\n              // It should not matter what you name tableProps. It made the most sense to me.\n              dataCopy.splice(tableProps.row.index, 1);\n              setData(dataCopy);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    } else if ((selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type) == \"Vehicles\") {\n      starwars.getVehicles().then(response => {\n        setData(response);\n        setColumns([{\n          Header: \"Name\",\n          accessor: \"name\"\n        }, {\n          Header: \"Model\",\n          accessor: \"model\"\n        }, {\n          Header: \"Manufacturer\",\n          accessor: \"manufacturer\"\n        }, {\n          Header: \"Vehicle Class\",\n          accessor: \"vehicle_class\"\n        }, {\n          Header: \"Cargo Capacity (kilos)\",\n          accessor: \"cargo_capacity\"\n        }, {\n          Header: \"Consumable Capacity\",\n          accessor: \"consumables\"\n        }, {\n          Header: \"Crew Size\",\n          accessor: \"crew\"\n        }, {\n          Header: \"Passenger Capacity\",\n          accessor: \"passengers\"\n        }, {\n          Header: \"Length (meters)\",\n          accessor: \"length\"\n        }, {\n          Header: \"Delete\",\n          accessor: \"delete\",\n          accessor: str => \"delete\",\n          Cell: tableProps => /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: \"pointer\",\n              color: \"Burgundy\"\n            },\n            onClick: () => {\n              // ES6 Syntax use the rvalue if your data is an array.\n              const dataCopy = [...data];\n              console.log(...data);\n              // It should not matter what you name tableProps. It made the most sense to me.\n              dataCopy.splice(tableProps.row.index, 1);\n              setData(dataCopy);\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 37\n          }, this)\n        }], []);\n      });\n    }\n  }, [selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"selectCategory\",\n      children: \"Select a Category: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleInputClick,\n      className: \"dropdown-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-selected-value\",\n        children: getDisplay()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-tools\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-tool\",\n          children: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 17\n      }, this), showMenu && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-menu\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => onItemClick(option),\n          className: `dropdown-item ${isSelected(option) && \"selected\"}`,\n          children: option.type\n        }, option.type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), selectedValue && columns ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 21\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: [\"\\\"Do. Or do not. There is no try.\\\"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 61\n            }, this), \"-Yoda\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"force\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: force,\n            alt: \"force\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 518,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 481,\n    columnNumber: 9\n  }, this);\n};\n_s(Dropdown, \"yfgsQcxEm5ekiLuZ0tCoFZvITd0=\");\n_c2 = Dropdown;\nexport default Dropdown;\nvar _c, _c2;\n$RefreshReg$(_c, \"Icon\");\n$RefreshReg$(_c2, \"Dropdown\");","map":{"version":3,"names":["React","useState","useEffect","Table","starwars","force","Icon","Dropdown","placeHolder","options","showMenu","setShowMenu","selectedValue","setSelectedValue","data","setData","columns","setColumns","handler","window","addEventListener","removeEventListener","handleInputClick","e","stopPropagation","getDisplay","type","onItemClick","option","isSelected","value","getPeople","then","response","Header","accessor","str","Cell","cursor","color","dataCopy","console","log","row","index","splice","getPlanets","theRow","getStarships","tableProps","getFilms","getSpecies","getVehicles","map"],"sources":["/Users/seung/Documents/work-code/Files/src/Dropdown.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Table from './Table'\nimport './Dropdown.css';\nimport starwars from \"./APIs/starwars\";\nimport force from \"./components/force.png\";\n\n{/**\n    Icon() creates an svg for the dropdown menu\n*/}\nconst Icon = () => {\n    return (\n        <svg height=\"20\" width=\"20\" viewBox=\"0 0 20 20\">\n          <path d=\"M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z\"></path>\n        </svg>\n      );\n};\n\n{/**\n    Dropdown() waits for the user to click on an option, and renders a table for \n    that option. While it is waiting for the option, the website displays an image\n    and quote\n    @param {object} placeHolder The place holder for the Dropdown menu\n    @param {object} options The options in the menu\n*/}\nconst Dropdown = ({ placeHolder, options}) => {\n\n    const [showMenu, setShowMenu] = useState(false);\n    const [selectedValue, setSelectedValue] = useState(null);\n    const [data, setData] = useState([]);\n    const [columns, setColumns] = useState(null);\n\n    /**\n     * Waits for user to click\n     */\n    useEffect(() => {\n        const handler = () => setShowMenu(false);\n\n        window.addEventListener(\"click\", handler);\n        return() => {\n            window.removeEventListener(\"click\", handler);\n        };\n    });\n\n    /**\n     * When the menu is clicked, the menu is closed\n     */\n    const handleInputClick = (e) => {\n        e.stopPropagation();\n        setShowMenu(!showMenu);\n    }\n\n    /**\n     * Displays the option that was selected\n     * @returns {object} the selected option, or placeholder if not selected\n     */\n    const getDisplay = () => {\n        if(selectedValue){\n            return selectedValue.type;\n        }\n        return placeHolder;\n    };\n\n\n    /**\n     * Set selected value and stores it in selectedValue\n     * @param {object} option object in Dropdown menu\n     */\n    const onItemClick = (option) => {\n        setSelectedValue(option);\n    }\n\n    /**\n     * Checks whether an option has been selected\n     * @param {object} option object in Dropdown menu\n     * @returns true if the option has been selected\n     */\n    const isSelected = (option) => {\n        if(!selectedValue){\n            return false;\n        }\n\n        return selectedValue.value === option.value;\n    }\n\n    /**\n     * Sets the data and columns according to the option that was selected in the \n     * Dropdown menu.\n     */\n    useEffect(() => {\n        if(selectedValue?.type == \"People\"){\n            starwars.getPeople().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Name\",\n                                accessor: \"name\",\n                            },\n                            {\n                                Header: \"Birth Date\",\n                                accessor: \"birth_year\",\n                            },\n                            {\n                                Header: \"Gender\",\n                                accessor: \"gender\",\n                            },\n                            {\n                                Header: \"Hair Color\",\n                                accessor: \"hair_color\",\n                            },\n                            {\n                                Header: \"Height\",\n                                accessor: \"height\",\n                            },\n                            {\n                                Header: \"Weight (Kilo)\",\n                                accessor: \"mass\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: () => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"#8B0000\"\n                                      }}\n                                      onClick={() => {\n                                        let dataCopy = data;\n                                        console.log(data[row.index]);\n                                        dataCopy.splice(row.index, 1)\n                                        setData({dataCopy})\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n        }else if(selectedValue?.type == \"Planets\"){\n            starwars.getPlanets().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Name\",\n                                accessor: \"name\",\n                            },\n                            {\n                                Header: \"Climate\",\n                                accessor: \"climate\",\n                            },\n                            {\n                                Header: \"Diameter (Kilometers)\",\n                                accessor: \"diameter\",\n                            },\n                            {\n                                Header: \"Gravity\",\n                                accessor: \"gravity\",\n                            },\n                            {\n                                Header: \"Orbital Period (days)\",\n                                accessor: \"orbital_period\",\n                            },\n                            {\n                                Header: \"Population\",\n                                accessor: \"population\",\n                            },\n                            {\n                                Header: \"Rotation Period (hrs)\",\n                                accessor: \"rotation_period\",\n                            },\n                            {\n                                Header: \"Surface Water (%)\",\n                                accessor: \"surface_water\",\n                            },\n                            {\n                                Header: \"Terrain\",\n                                accessor: \"terrain\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: (theRow) => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"Burgundy\"\n                                      }}\n                                      onClick={() => {\n                                        // ES6 Syntax use the rvalue if your data is an array.\n                                        const dataCopy = [...data];\n                                        console.log(...data);\n                                        // It should not matter what you name tableProps. It made the most sense to me.\n                                        dataCopy.splice(theRow.row.index, 1);\n                                        setData(dataCopy);\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n        }else if(selectedValue?.type == \"Starships\"){\n            starwars.getStarships().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Name\",\n                                accessor: \"name\",\n                            },\n                            {\n                                Header: \"Model\",\n                                accessor: \"model\",\n                            },\n                            {\n                                Header: \"Manufacturer\",\n                                accessor: \"manufacturer\",\n                            },\n                            {\n                                Header: \"Starship Class\",\n                                accessor: \"starship_class\",\n                            },\n                            {\n                                Header: \"Speed (# of Megalights/Hr)\",\n                                accessor: \"MGLT\",\n                            },\n                            {\n                                Header: \"Length (meters)\",\n                                accessor: \"length\",\n                            },\n                            {\n                                Header: \"Passenger Capacity (non-essential)\",\n                                accessor: \"passengers\",\n                            },\n                            {\n                                Header: \"Max Atmosphering Speed (n/a if not possible)\",\n                                accessor: \"max_atmosphering_speed\",\n                            },\n                            {\n                                Header: \"Cargo Capacity (Kilo)\",\n                                accessor: \"cargo_capacity\",\n                            },\n                            {\n                                Header: \"Cost (galactic credits)\",\n                                accessor: \"cost_in_credits\",\n                            },\n                            {\n                                Header: \"Crew\",\n                                accessor: \"crew\",\n                            },\n                            {\n                                Header: \"Hyperdrive Rating\",\n                                accessor: \"hyperdrive_rating\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: (tableProps) => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"Burgundy\"\n                                      }}\n                                      onClick={() => {\n                                        // ES6 Syntax use the rvalue if your data is an array.\n                                        const dataCopy = [...data];\n                                        console.log(...data);\n                                        // It should not matter what you name tableProps. It made the most sense to me.\n                                        dataCopy.splice(tableProps.row.index, 1);\n                                        setData(dataCopy);\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n        }else if(selectedValue?.type == \"Films\"){\n            starwars.getFilms().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Title\",\n                                accessor: \"title\",\n                            },\n                            {\n                                Header: \"Director\",\n                                accessor: \"director\",\n                            },\n                            {\n                                Header: \"Producer\",\n                                accessor: \"producer\",\n                            },\n                            {\n                                Header: \"Release Date\",\n                                accessor: \"release_date\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: (tableProps) => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"Burgundy\"\n                                      }}\n                                      onClick={() => {\n                                        // ES6 Syntax use the rvalue if your data is an array.\n                                        const dataCopy = [...data];\n                                        console.log(...data);\n                                        // It should not matter what you name tableProps. It made the most sense to me.\n                                        dataCopy.splice(tableProps.row.index, 1);\n                                        setData(dataCopy);\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n        }else if(selectedValue?.type == \"Species\"){\n            starwars.getSpecies().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Name\",\n                                accessor: \"name\",\n                            },\n                            {\n                                Header: \"Skin Color\",\n                                accessor: \"skin_colors\",\n                            },\n                            {\n                                Header: \"Eye Colors\",\n                                accessor: \"eye_colors\",\n                            },\n                            {\n                                Header: \"Hair Colors\",\n                                accessor: \"hair_colors\",\n                            },\n                            {\n                                Header: \"Language\",\n                                accessor: \"language\",\n                            },\n                            {\n                                Header: \"Designation\",\n                                accessor: \"designation\",\n                            },\n                            {\n                                Header: \"Classification\",\n                                accessor: \"classification\",\n                            },\n                            {\n                                Header: \"Average Height (centimeters)\",\n                                accessor: \"average_height\",\n                            },\n                            {\n                                Header: \"Average Lifespan (years)\",\n                                accessor: \"average_lifespan\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: (tableProps) => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"Burgundy\"\n                                      }}\n                                      onClick={() => {\n                                        // ES6 Syntax use the rvalue if your data is an array.\n                                        const dataCopy = [...data];\n                                        console.log(...data);\n                                        // It should not matter what you name tableProps. It made the most sense to me.\n                                        dataCopy.splice(tableProps.row.index, 1);\n                                        setData(dataCopy);\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n    \n        }else if(selectedValue?.type == \"Vehicles\"){\n            starwars.getVehicles().then((response) => {\n                setData(response);\n                setColumns(\n                    [\n                            {\n                                Header: \"Name\",\n                                accessor: \"name\",\n                            },\n                            {\n                                Header: \"Model\",\n                                accessor: \"model\",\n                            },\n                            {\n                                Header: \"Manufacturer\",\n                                accessor: \"manufacturer\",\n                            },\n                            {\n                                Header: \"Vehicle Class\",\n                                accessor: \"vehicle_class\",\n                            },\n                            {\n                                Header: \"Cargo Capacity (kilos)\",\n                                accessor: \"cargo_capacity\",\n                            },\n                            {\n                                Header: \"Consumable Capacity\",\n                                accessor: \"consumables\",\n                            },\n                            {\n                                Header: \"Crew Size\",\n                                accessor: \"crew\",\n                            },\n                            {\n                                Header: \"Passenger Capacity\",\n                                accessor: \"passengers\",\n                            },\n                            {\n                                Header: \"Length (meters)\",\n                                accessor: \"length\",\n                            },\n                            {\n                                Header: \"Delete\",\n                                accessor: \"delete\",\n                                accessor: (str) => \"delete\",\n\n                                Cell: (tableProps) => (\n                                    <span\n                                      style={{\n                                        cursor: \"pointer\",\n                                        color: \"Burgundy\"\n                                      }}\n                                      onClick={() => {\n                                        // ES6 Syntax use the rvalue if your data is an array.\n                                        const dataCopy = [...data];\n                                        console.log(...data);\n                                        // It should not matter what you name tableProps. It made the most sense to me.\n                                        dataCopy.splice(tableProps.row.index, 1);\n                                        setData(dataCopy);\n                                      }}\n                                    >\n                                      Delete\n                                    </span>\n                                  )\n                            },\n                        ], []\n                    )\n            });\n        }\n    }, [selectedValue?.type]);\n  \n    return (\n        <div className=\"dropdown-container\">\n            <h1 className=\"selectCategory\">Select a Category: </h1>\n            <div onClick={handleInputClick} className=\"dropdown-input\">\n                <div className=\"dropdown-selected-value\">{getDisplay()}</div>\n                <div className=\"dropdown-tools\">\n                    <div className=\"dropdown-tool\">\n                        <Icon />\n                    </div>\n                </div>\n                {showMenu && (\n                    <div className=\"dropdown-menu\">\n                        {options.map((option) => (\n                            <div \n                            onClick = {() => onItemClick(option)}\n                            key={option.type} \n                            className={`dropdown-item ${isSelected(option) && \"selected\"}`}>\n                                {option.type}\n                            </div>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <div>\n                <br></br>\n                {selectedValue && columns ? (\n                    <>\n                    <Table\n                        columns={columns}\n                        data={data}>\n                    </Table>\n                    </>\n                ) : \n                <>\n                    <div className=\"quote\">\n                        <i>\"Do. Or do not. There is no try.\"<br/>-Yoda</i>\n                    </div>\n                    <div className=\"force\">\n                    <img src={force} alt=\"force\" />\n                    </div>\n                </>}\n            </div>\n        </div>\n    );\n  };\n\n  export default Dropdown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}