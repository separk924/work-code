{"ast":null,"code":"import { Rect as $cVkRF$Rect } from \"@react-stately/virtualizer\";\nimport { useId as $cVkRF$useId, filterDOMProps as $cVkRF$filterDOMProps, mergeProps as $cVkRF$mergeProps, useUpdateEffect as $cVkRF$useUpdateEffect, useDescription as $cVkRF$useDescription, scrollIntoViewport as $cVkRF$scrollIntoViewport, getScrollParent as $cVkRF$getScrollParent } from \"@react-aria/utils\";\nimport { useMemo as $cVkRF$useMemo, useRef as $cVkRF$useRef } from \"react\";\nimport { useCollator as $cVkRF$useCollator, useLocale as $cVkRF$useLocale, useLocalizedStringFormatter as $cVkRF$useLocalizedStringFormatter } from \"@react-aria/i18n\";\nimport { useSelectableCollection as $cVkRF$useSelectableCollection, useSelectableItem as $cVkRF$useSelectableItem } from \"@react-aria/selection\";\nimport { announce as $cVkRF$announce } from \"@react-aria/live-announcer\";\nimport { useInteractionModality as $cVkRF$useInteractionModality, isFocusVisible as $cVkRF$isFocusVisible } from \"@react-aria/interactions\";\nimport { getFocusableTreeWalker as $cVkRF$getFocusableTreeWalker, focusSafely as $cVkRF$focusSafely } from \"@react-aria/focus\";\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n    * Copyright 2020 Adobe. All rights reserved.\n    * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License. You may obtain a copy\n    * of the License at http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software distributed under\n    * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n    * OF ANY KIND, either express or implied. See the License for the specific language\n    * governing permissions and limitations under the License.\n    */\nclass $d1c300d9c497e402$export$de9feff04fda126e {\n  isCell(node) {\n    return node.type === \"cell\";\n  }\n  isRow(node) {\n    return node.type === \"row\" || node.type === \"item\";\n  }\n  findPreviousKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyBefore(fromKey) : this.collection.getLastKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n  findNextKey(fromKey, pred) {\n    let key = fromKey != null ? this.collection.getKeyAfter(fromKey) : this.collection.getFirstKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) return key;\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n  getKeyBelow(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) key = startItem.parentKey;\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n      // Otherwise, focus the next row\n      if (this.focusMode === \"row\") return key;\n    }\n  }\n  getKeyAbove(key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) return;\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) key = startItem.parentKey;\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n      // Otherwise, focus the previous row\n      if (this.focusMode === \"row\") return key;\n    }\n  }\n  getKeyRightOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === \"rtl\" ? children[children.length - 1].key : children[0].key;\n    }\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children1 = [...parent.childNodes];\n      let next = this.direction === \"rtl\" ? children1[item.index - 1] : children1[item.index + 1];\n      if (next) return next.key;\n      // focus row only if focusMode is set to row\n      if (this.focusMode === \"row\") return item.parentKey;\n      return this.direction === \"rtl\" ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n  getKeyLeftOf(key) {\n    let item = this.collection.getItem(key);\n    if (!item) return;\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === \"rtl\" ? children[0].key : children[children.length - 1].key;\n    }\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children1 = [...parent.childNodes];\n      let prev = this.direction === \"rtl\" ? children1[item.index + 1] : children1[item.index - 1];\n      if (prev) return prev.key;\n      // focus row only if focusMode is set to row\n      if (this.focusMode === \"row\") return item.parentKey;\n      return this.direction === \"rtl\" ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n  getFirstKey(key, global) {\n    let item;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return;\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n    // Find the first row\n    key = this.findNextKey();\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n      let item1 = this.collection.getItem(key);\n      key = [...item1.childNodes][0].key;\n    }\n    // Otherwise, focus the row itself.\n    return key;\n  }\n  getLastKey(key, global) {\n    let item;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) return;\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n    // Find the last row\n    key = this.findPreviousKey();\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if (key != null && item && this.isCell(item) && global || this.focusMode === \"cell\") {\n      let item1 = this.collection.getItem(key);\n      let children1 = [...item1.childNodes];\n      key = children1[children1.length - 1].key;\n    }\n    // Otherwise, focus the row itself.\n    return key;\n  }\n  getItem(key) {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n  getItemRect(key) {\n    var _this_layout_getLayoutInfo;\n    if (this.layout) return (_this_layout_getLayoutInfo = this.layout.getLayoutInfo(key)) === null || _this_layout_getLayoutInfo === void 0 ? void 0 : _this_layout_getLayoutInfo.rect;\n    let item = this.getItem(key);\n    if (item) return new (0, $cVkRF$Rect)(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n  }\n  getPageHeight() {\n    var _this_layout_virtualizer, _this_ref, _this_ref_current;\n    if (this.layout) return (_this_layout_virtualizer = this.layout.virtualizer) === null || _this_layout_virtualizer === void 0 ? void 0 : _this_layout_virtualizer.visibleRect.height;\n    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.offsetHeight;\n  }\n  getContentHeight() {\n    var _this_ref, _this_ref_current;\n    if (this.layout) return this.layout.getContentSize().height;\n    return (_this_ref = this.ref) === null || _this_ref === void 0 ? void 0 : (_this_ref_current = _this_ref.current) === null || _this_ref_current === void 0 ? void 0 : _this_ref_current.scrollHeight;\n  }\n  getKeyPageAbove(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n    return key;\n  }\n  getKeyPageBelow(key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) return null;\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) key = nextKey;\n    }\n    return key;\n  }\n  getKeyForSearch(search, fromKey) {\n    if (!this.collator) return null;\n    let collection = this.collection;\n    let key = fromKey !== null && fromKey !== void 0 ? fromKey : this.getFirstKey();\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === \"cell\") key = startItem.parentKey;\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === \"cell\") return [...item.childNodes][0].key;\n          return item.key;\n        }\n      }\n      key = this.findNextKey(key);\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n    return null;\n  }\n  constructor(options) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || \"row\";\n  }\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst $1af922eb41e03c8f$export$e6235c0d09b995d0 = new WeakMap();\n\n/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nvar $1dbe5ffd32adb38c$exports = {};\nvar $682989befd4f478d$exports = {};\n$682989befd4f478d$exports = {\n  \"deselectedItem\": args => `${args.item} غير المحدد`,\n  \"longPressToSelect\": `اضغط مطولًا للدخول إلى وضع التحديد.`,\n  \"select\": `تحديد`,\n  \"selectedAll\": `جميع العناصر المحددة.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `لم يتم تحديد عناصر`,\n    one: () => `${formatter.number(args.count)} عنصر محدد`,\n    other: () => `${formatter.number(args.count)} عنصر محدد`\n  })}.`,\n  \"selectedItem\": args => `${args.item} المحدد`\n};\nvar $f7fca02019afd941$exports = {};\n$f7fca02019afd941$exports = {\n  \"deselectedItem\": args => `${args.item} не е избран.`,\n  \"longPressToSelect\": `Натиснете и задръжте за да влезете в избирателен режим.`,\n  \"select\": `Изберете`,\n  \"selectedAll\": `Всички елементи са избрани.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Няма избрани елементи`,\n    one: () => `${formatter.number(args.count)} избран елемент`,\n    other: () => `${formatter.number(args.count)} избрани елементи`\n  })}.`,\n  \"selectedItem\": args => `${args.item} избран.`\n};\nvar $8f86f40be75387f1$exports = {};\n$8f86f40be75387f1$exports = {\n  \"deselectedItem\": args => `Položka ${args.item} není vybrána.`,\n  \"longPressToSelect\": `Dlouhým stisknutím přejdete do režimu výběru.`,\n  \"select\": `Vybrat`,\n  \"selectedAll\": `Vybrány všechny položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nevybrány žádné položky`,\n    one: () => `Vybrána ${formatter.number(args.count)} položka`,\n    other: () => `Vybráno ${formatter.number(args.count)} položek`\n  })}.`,\n  \"selectedItem\": args => `Vybrána položka ${args.item}.`\n};\nvar $db24ba43c8d652ee$exports = {};\n$db24ba43c8d652ee$exports = {\n  \"deselectedItem\": args => `${args.item} ikke valgt.`,\n  \"longPressToSelect\": `Lav et langt tryk for at aktivere valgtilstand.`,\n  \"select\": `Vælg`,\n  \"selectedAll\": `Alle elementer valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer valgt`,\n    one: () => `${formatter.number(args.count)} element valgt`,\n    other: () => `${formatter.number(args.count)} elementer valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valgt.`\n};\nvar $f8f1e72c8b5447d6$exports = {};\n$f8f1e72c8b5447d6$exports = {\n  \"deselectedItem\": args => `${args.item} nicht ausgewählt.`,\n  \"longPressToSelect\": `Gedrückt halten, um Auswahlmodus zu öffnen.`,\n  \"select\": `Auswählen`,\n  \"selectedAll\": `Alle Elemente ausgewählt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Keine Elemente ausgewählt`,\n    one: () => `${formatter.number(args.count)} Element ausgewählt`,\n    other: () => `${formatter.number(args.count)} Elemente ausgewählt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} ausgewählt.`\n};\nvar $9a73ed2983c3ab0b$exports = {};\n$9a73ed2983c3ab0b$exports = {\n  \"deselectedItem\": args => `Δεν επιλέχθηκε το στοιχείο ${args.item}.`,\n  \"longPressToSelect\": `Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.`,\n  \"select\": `Επιλογή`,\n  \"selectedAll\": `Επιλέχθηκαν όλα τα στοιχεία.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Δεν επιλέχθηκαν στοιχεία`,\n    one: () => `Επιλέχθηκε ${formatter.number(args.count)} στοιχείο`,\n    other: () => `Επιλέχθηκαν ${formatter.number(args.count)} στοιχεία`\n  })}.`,\n  \"selectedItem\": args => `Επιλέχθηκε το στοιχείο ${args.item}.`\n};\nvar $583de0b3587601b9$exports = {};\n$583de0b3587601b9$exports = {\n  \"deselectedItem\": args => `${args.item} not selected.`,\n  \"select\": `Select`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `No items selected`,\n    one: () => `${formatter.number(args.count)} item selected`,\n    other: () => `${formatter.number(args.count)} items selected`\n  })}.`,\n  \"selectedAll\": `All items selected.`,\n  \"selectedItem\": args => `${args.item} selected.`,\n  \"longPressToSelect\": `Long press to enter selection mode.`\n};\nvar $147159c978043442$exports = {};\n$147159c978043442$exports = {\n  \"deselectedItem\": args => `${args.item} no seleccionado.`,\n  \"longPressToSelect\": `Mantenga pulsado para abrir el modo de selección.`,\n  \"select\": `Seleccionar`,\n  \"selectedAll\": `Todos los elementos seleccionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ningún elemento seleccionado`,\n    one: () => `${formatter.number(args.count)} elemento seleccionado`,\n    other: () => `${formatter.number(args.count)} elementos seleccionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seleccionado.`\n};\nvar $5cbb62c8a19173ac$exports = {};\n$5cbb62c8a19173ac$exports = {\n  \"deselectedItem\": args => `${args.item} pole valitud.`,\n  \"longPressToSelect\": `Valikurežiimi sisenemiseks vajutage pikalt.`,\n  \"select\": `Vali`,\n  \"selectedAll\": `Kõik üksused valitud.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Üksusi pole valitud`,\n    one: () => `${formatter.number(args.count)} üksus valitud`,\n    other: () => `${formatter.number(args.count)} üksust valitud`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valitud.`\n};\nvar $a33d71dc804cc59e$exports = {};\n$a33d71dc804cc59e$exports = {\n  \"deselectedItem\": args => `Kohdetta ${args.item} ei valittu.`,\n  \"longPressToSelect\": `Siirry valintatilaan painamalla pitkään.`,\n  \"select\": `Valitse`,\n  \"selectedAll\": `Kaikki kohteet valittu.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ei yhtään kohdetta valittu`,\n    one: () => `${formatter.number(args.count)} kohde valittu`,\n    other: () => `${formatter.number(args.count)} kohdetta valittu`\n  })}.`,\n  \"selectedItem\": args => `${args.item} valittu.`\n};\nvar $92d800447793d084$exports = {};\n$92d800447793d084$exports = {\n  \"deselectedItem\": args => `${args.item} non sélectionné.`,\n  \"longPressToSelect\": `Appuyez de manière prolongée pour passer en mode de sélection.`,\n  \"select\": `Sélectionner`,\n  \"selectedAll\": `Tous les éléments sélectionnés.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Aucun élément sélectionné`,\n    one: () => `${formatter.number(args.count)} élément sélectionné`,\n    other: () => `${formatter.number(args.count)} éléments sélectionnés`\n  })}.`,\n  \"selectedItem\": args => `${args.item} sélectionné.`\n};\nvar $fe732cdb32124ea8$exports = {};\n$fe732cdb32124ea8$exports = {\n  \"deselectedItem\": args => `${args.item} לא נבחר.`,\n  \"longPressToSelect\": `הקשה ארוכה לכניסה למצב בחירה.`,\n  \"select\": `בחר`,\n  \"selectedAll\": `כל הפריטים נבחרו.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `לא נבחרו פריטים`,\n    one: () => `פריט ${formatter.number(args.count)} נבחר`,\n    other: () => `${formatter.number(args.count)} פריטים נבחרו`\n  })}.`,\n  \"selectedItem\": args => `${args.item} נבחר.`\n};\nvar $e41234e934efb4f5$exports = {};\n$e41234e934efb4f5$exports = {\n  \"deselectedItem\": args => `Stavka ${args.item} nije odabrana.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u način odabira.`,\n  \"select\": `Odaberite`,\n  \"selectedAll\": `Odabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije odabrana nijedna stavka`,\n    one: () => `Odabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Odabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `Stavka ${args.item} je odabrana.`\n};\nvar $1b0393182473bf9e$exports = {};\n$1b0393182473bf9e$exports = {\n  \"deselectedItem\": args => `${args.item} nincs kijelölve.`,\n  \"longPressToSelect\": `Nyomja hosszan a kijelöléshez.`,\n  \"select\": `Kijelölés`,\n  \"selectedAll\": `Az összes elem kijelölve.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Egy elem sincs kijelölve`,\n    one: () => `${formatter.number(args.count)} elem kijelölve`,\n    other: () => `${formatter.number(args.count)} elem kijelölve`\n  })}.`,\n  \"selectedItem\": args => `${args.item} kijelölve.`\n};\nvar $2eed782c1c110ce7$exports = {};\n$2eed782c1c110ce7$exports = {\n  \"deselectedItem\": args => `${args.item} non selezionato.`,\n  \"longPressToSelect\": `Premi a lungo per passare alla modalità di selezione.`,\n  \"select\": `Seleziona`,\n  \"selectedAll\": `Tutti gli elementi selezionati.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nessun elemento selezionato`,\n    one: () => `${formatter.number(args.count)} elemento selezionato`,\n    other: () => `${formatter.number(args.count)} elementi selezionati`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selezionato.`\n};\nvar $8b5d459f86e9b23c$exports = {};\n$8b5d459f86e9b23c$exports = {\n  \"deselectedItem\": args => `${args.item} が選択されていません。`,\n  \"longPressToSelect\": `長押しして選択モードを開きます。`,\n  \"select\": `選択`,\n  \"selectedAll\": `すべての項目を選択しました。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `項目が選択されていません`,\n    one: () => `${formatter.number(args.count)} 項目を選択しました`,\n    other: () => `${formatter.number(args.count)} 項目を選択しました`\n  })}。`,\n  \"selectedItem\": args => `${args.item} を選択しました。`\n};\nvar $1949c3ad17295fd4$exports = {};\n$1949c3ad17295fd4$exports = {\n  \"deselectedItem\": args => `${args.item}이(가) 선택되지 않았습니다.`,\n  \"longPressToSelect\": `선택 모드로 들어가려면 길게 누르십시오.`,\n  \"select\": `선택`,\n  \"selectedAll\": `모든 항목이 선택되었습니다.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `선택된 항목이 없습니다`,\n    one: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`,\n    other: () => `${formatter.number(args.count)}개 항목이 선택되었습니다`\n  })}.`,\n  \"selectedItem\": args => `${args.item}이(가) 선택되었습니다.`\n};\nvar $f5e3df4dc8aa7b54$exports = {};\n$f5e3df4dc8aa7b54$exports = {\n  \"deselectedItem\": args => `${args.item} nepasirinkta.`,\n  \"longPressToSelect\": `Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.`,\n  \"select\": `Pasirinkti`,\n  \"selectedAll\": `Pasirinkti visi elementai.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nepasirinktas nė vienas elementas`,\n    one: () => `Pasirinktas ${formatter.number(args.count)} elementas`,\n    other: () => `Pasirinkta elementų: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Pasirinkta: ${args.item}.`\n};\nvar $9dd86690a5c2b2c5$exports = {};\n$9dd86690a5c2b2c5$exports = {\n  \"deselectedItem\": args => `Vienums ${args.item} nav atlasīts.`,\n  \"longPressToSelect\": `Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.`,\n  \"select\": `Atlasīt`,\n  \"selectedAll\": `Atlasīti visi vienumi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nav atlasīts neviens vienums`,\n    one: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`,\n    other: () => `Atlasīto vienumu skaits: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Atlasīts vienums ${args.item}.`\n};\nvar $843964c3bf9a7d24$exports = {};\n$843964c3bf9a7d24$exports = {\n  \"deselectedItem\": args => `${args.item} er ikke valgt.`,\n  \"longPressToSelect\": `Bruk et langt trykk for å gå inn i valgmodus.`,\n  \"select\": `Velg`,\n  \"selectedAll\": `Alle elementer er valgt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Ingen elementer er valgt`,\n    one: () => `${formatter.number(args.count)} element er valgt`,\n    other: () => `${formatter.number(args.count)} elementer er valgt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} er valgt.`\n};\nvar $73f50e845f9ef3b4$exports = {};\n$73f50e845f9ef3b4$exports = {\n  \"deselectedItem\": args => `${args.item} niet geselecteerd.`,\n  \"longPressToSelect\": `Druk lang om de selectiemodus te openen.`,\n  \"select\": `Selecteren`,\n  \"selectedAll\": `Alle items geselecteerd.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Geen items geselecteerd`,\n    one: () => `${formatter.number(args.count)} item geselecteerd`,\n    other: () => `${formatter.number(args.count)} items geselecteerd`\n  })}.`,\n  \"selectedItem\": args => `${args.item} geselecteerd.`\n};\nvar $87f92a7e077514b2$exports = {};\n$87f92a7e077514b2$exports = {\n  \"deselectedItem\": args => `Nie zaznaczono ${args.item}.`,\n  \"longPressToSelect\": `Naciśnij i przytrzymaj, aby wejść do trybu wyboru.`,\n  \"select\": `Zaznacz`,\n  \"selectedAll\": `Wszystkie zaznaczone elementy.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nie zaznaczono żadnych elementów`,\n    one: () => `${formatter.number(args.count)} zaznaczony element`,\n    other: () => `${formatter.number(args.count)} zaznaczonych elementów`\n  })}.`,\n  \"selectedItem\": args => `Zaznaczono ${args.item}.`\n};\nvar $c28c98d58ee9ff6f$exports = {};\n$c28c98d58ee9ff6f$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Mantenha pressionado para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $b6b1503b17b2254d$exports = {};\n$b6b1503b17b2254d$exports = {\n  \"deselectedItem\": args => `${args.item} não selecionado.`,\n  \"longPressToSelect\": `Prima continuamente para entrar no modo de seleção.`,\n  \"select\": `Selecionar`,\n  \"selectedAll\": `Todos os itens selecionados.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nenhum item selecionado`,\n    one: () => `${formatter.number(args.count)} item selecionado`,\n    other: () => `${formatter.number(args.count)} itens selecionados`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selecionado.`\n};\nvar $8bdaeb71e50c3e1a$exports = {};\n$8bdaeb71e50c3e1a$exports = {\n  \"deselectedItem\": args => `${args.item} neselectat.`,\n  \"longPressToSelect\": `Apăsați lung pentru a intra în modul de selectare.`,\n  \"select\": `Selectare`,\n  \"selectedAll\": `Toate elementele selectate.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Niciun element selectat`,\n    one: () => `${formatter.number(args.count)} element selectat`,\n    other: () => `${formatter.number(args.count)} elemente selectate`\n  })}.`,\n  \"selectedItem\": args => `${args.item} selectat.`\n};\nvar $ec2b852dd7c3d1f2$exports = {};\n$ec2b852dd7c3d1f2$exports = {\n  \"deselectedItem\": args => `${args.item} не выбрано.`,\n  \"longPressToSelect\": `Нажмите и удерживайте для входа в режим выбора.`,\n  \"select\": `Выбрать`,\n  \"selectedAll\": `Выбраны все элементы.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Нет выбранных элементов`,\n    one: () => `${formatter.number(args.count)} элемент выбран`,\n    other: () => `${formatter.number(args.count)} элементов выбрано`\n  })}.`,\n  \"selectedItem\": args => `${args.item} выбрано.`\n};\nvar $79e6d900d6a4f82d$exports = {};\n$79e6d900d6a4f82d$exports = {\n  \"deselectedItem\": args => `Nevybraté položky: ${args.item}.`,\n  \"longPressToSelect\": `Dlhším stlačením prejdite do režimu výberu.`,\n  \"select\": `Vybrať`,\n  \"selectedAll\": `Všetky vybraté položky.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Žiadne vybraté položky`,\n    one: () => `${formatter.number(args.count)} vybratá položka`,\n    other: () => `Počet vybratých položiek:${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `Vybraté položky: ${args.item}.`\n};\nvar $f4c1f0d5d4d03d80$exports = {};\n$f4c1f0d5d4d03d80$exports = {\n  \"deselectedItem\": args => `Element ${args.item} ni izbran.`,\n  \"longPressToSelect\": `Za izbirni način pritisnite in dlje časa držite.`,\n  \"select\": `Izberite`,\n  \"selectedAll\": `Vsi elementi so izbrani.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Noben element ni izbran`,\n    one: () => `${formatter.number(args.count)} element je izbran`,\n    other: () => `${formatter.number(args.count)} elementov je izbranih`\n  })}.`,\n  \"selectedItem\": args => `Element ${args.item} je izbran.`\n};\nvar $46252cd87269b10b$exports = {};\n$46252cd87269b10b$exports = {\n  \"deselectedItem\": args => `${args.item} nije izabrano.`,\n  \"longPressToSelect\": `Dugo pritisnite za ulazak u režim biranja.`,\n  \"select\": `Izaberite`,\n  \"selectedAll\": `Izabrane su sve stavke.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Nije izabrana nijedna stavka`,\n    one: () => `Izabrana je ${formatter.number(args.count)} stavka`,\n    other: () => `Izabrano je ${formatter.number(args.count)} stavki`\n  })}.`,\n  \"selectedItem\": args => `${args.item} je izabrano.`\n};\nvar $d4d5d8dab362555c$exports = {};\n$d4d5d8dab362555c$exports = {\n  \"deselectedItem\": args => `${args.item} ej markerat.`,\n  \"longPressToSelect\": `Tryck länge när du vill öppna väljarläge.`,\n  \"select\": `Markera`,\n  \"selectedAll\": `Alla markerade objekt.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Inga markerade objekt`,\n    one: () => `${formatter.number(args.count)} markerat objekt`,\n    other: () => `${formatter.number(args.count)} markerade objekt`\n  })}.`,\n  \"selectedItem\": args => `${args.item} markerat.`\n};\nvar $3d55d1f97c377e83$exports = {};\n$3d55d1f97c377e83$exports = {\n  \"deselectedItem\": args => `${args.item} seçilmedi.`,\n  \"longPressToSelect\": `Seçim moduna girmek için uzun basın.`,\n  \"select\": `Seç`,\n  \"selectedAll\": `Tüm ögeler seçildi.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Hiçbir öge seçilmedi`,\n    one: () => `${formatter.number(args.count)} öge seçildi`,\n    other: () => `${formatter.number(args.count)} öge seçildi`\n  })}.`,\n  \"selectedItem\": args => `${args.item} seçildi.`\n};\nvar $5368512f1c703a3f$exports = {};\n$5368512f1c703a3f$exports = {\n  \"deselectedItem\": args => `${args.item} не вибрано.`,\n  \"longPressToSelect\": `Виконайте довге натиснення, щоб перейти в режим вибору.`,\n  \"select\": `Вибрати`,\n  \"selectedAll\": `Усі елементи вибрано.`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `Жодних елементів не вибрано`,\n    one: () => `${formatter.number(args.count)} елемент вибрано`,\n    other: () => `Вибрано елементів: ${formatter.number(args.count)}`\n  })}.`,\n  \"selectedItem\": args => `${args.item} вибрано.`\n};\nvar $f1316b1074463583$exports = {};\n$f1316b1074463583$exports = {\n  \"deselectedItem\": args => `未选择 ${args.item}。`,\n  \"longPressToSelect\": `长按以进入选择模式。`,\n  \"select\": `选择`,\n  \"selectedAll\": `已选择所有项目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未选择项目`,\n    one: () => `已选择 ${formatter.number(args.count)} 个项目`,\n    other: () => `已选择 ${formatter.number(args.count)} 个项目`\n  })}。`,\n  \"selectedItem\": args => `已选择 ${args.item}。`\n};\nvar $7e60654723031b6f$exports = {};\n$7e60654723031b6f$exports = {\n  \"deselectedItem\": args => `未選取「${args.item}」。`,\n  \"longPressToSelect\": `長按以進入選擇模式。`,\n  \"select\": `選取`,\n  \"selectedAll\": `已選取所有項目。`,\n  \"selectedCount\": (args, formatter) => `${formatter.plural(args.count, {\n    \"=0\": `未選取任何項目`,\n    one: () => `已選取 ${formatter.number(args.count)} 個項目`,\n    other: () => `已選取 ${formatter.number(args.count)} 個項目`\n  })}。`,\n  \"selectedItem\": args => `已選取「${args.item}」。`\n};\n$1dbe5ffd32adb38c$exports = {\n  \"ar-AE\": $682989befd4f478d$exports,\n  \"bg-BG\": $f7fca02019afd941$exports,\n  \"cs-CZ\": $8f86f40be75387f1$exports,\n  \"da-DK\": $db24ba43c8d652ee$exports,\n  \"de-DE\": $f8f1e72c8b5447d6$exports,\n  \"el-GR\": $9a73ed2983c3ab0b$exports,\n  \"en-US\": $583de0b3587601b9$exports,\n  \"es-ES\": $147159c978043442$exports,\n  \"et-EE\": $5cbb62c8a19173ac$exports,\n  \"fi-FI\": $a33d71dc804cc59e$exports,\n  \"fr-FR\": $92d800447793d084$exports,\n  \"he-IL\": $fe732cdb32124ea8$exports,\n  \"hr-HR\": $e41234e934efb4f5$exports,\n  \"hu-HU\": $1b0393182473bf9e$exports,\n  \"it-IT\": $2eed782c1c110ce7$exports,\n  \"ja-JP\": $8b5d459f86e9b23c$exports,\n  \"ko-KR\": $1949c3ad17295fd4$exports,\n  \"lt-LT\": $f5e3df4dc8aa7b54$exports,\n  \"lv-LV\": $9dd86690a5c2b2c5$exports,\n  \"nb-NO\": $843964c3bf9a7d24$exports,\n  \"nl-NL\": $73f50e845f9ef3b4$exports,\n  \"pl-PL\": $87f92a7e077514b2$exports,\n  \"pt-BR\": $c28c98d58ee9ff6f$exports,\n  \"pt-PT\": $b6b1503b17b2254d$exports,\n  \"ro-RO\": $8bdaeb71e50c3e1a$exports,\n  \"ru-RU\": $ec2b852dd7c3d1f2$exports,\n  \"sk-SK\": $79e6d900d6a4f82d$exports,\n  \"sl-SI\": $f4c1f0d5d4d03d80$exports,\n  \"sr-SP\": $46252cd87269b10b$exports,\n  \"sv-SE\": $d4d5d8dab362555c$exports,\n  \"tr-TR\": $3d55d1f97c377e83$exports,\n  \"uk-UA\": $5368512f1c703a3f$exports,\n  \"zh-CN\": $f1316b1074463583$exports,\n  \"zh-TW\": $7e60654723031b6f$exports\n};\nfunction $92599c3fd427b763$export$137e594ef3218a10(props, state) {\n  let {\n    getRowText = key => {\n      var _state_collection_getItem;\n      return (_state_collection_getItem = state.collection.getItem(key)) === null || _state_collection_getItem === void 0 ? void 0 : _state_collection_getItem.textValue;\n    }\n  } = props;\n  let stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)));\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = (0, $cVkRF$useRef)(selection);\n  (0, $cVkRF$useUpdateEffect)(() => {\n    var _lastSelection_current;\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n      return;\n    }\n    let addedKeys = $92599c3fd427b763$var$diffSelection(selection, lastSelection.current);\n    let removedKeys = $92599c3fd427b763$var$diffSelection(lastSelection.current, selection);\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === \"replace\";\n    let messages = [];\n    if (state.selectionManager.selectedKeys.size === 1 && isReplace) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) messages.push(stringFormatter.format(\"selectedItem\", {\n          item: currentSelectionText\n        }));\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) messages.push(stringFormatter.format(\"selectedItem\", {\n        item: addedText\n      }));\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) messages.push(stringFormatter.format(\"deselectedItem\", {\n          item: removedText\n        }));\n      }\n    }\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === \"multiple\") {\n      if (messages.length === 0 || selection === \"all\" || selection.size > 1 || lastSelection.current === \"all\" || ((_lastSelection_current = lastSelection.current) === null || _lastSelection_current === void 0 ? void 0 : _lastSelection_current.size) > 1) messages.push(selection === \"all\" ? stringFormatter.format(\"selectedAll\") : stringFormatter.format(\"selectedCount\", {\n        count: selection.size\n      }));\n    }\n    if (messages.length > 0) (0, $cVkRF$announce)(messages.join(\" \"));\n    lastSelection.current = selection;\n  }, [selection]);\n}\nfunction $92599c3fd427b763$var$diffSelection(a, b) {\n  let res = new Set();\n  if (a === \"all\" || b === \"all\") return res;\n  for (let key of a.keys()) if (!b.has(key)) res.add(key);\n  return res;\n}\n\n/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $5b9b5b5723db6ae1$export$be42ebdab07ae4c2(props) {\n  let stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)));\n  let modality = (0, $cVkRF$useInteractionModality)();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === \"pointer\" || modality === \"virtual\" || modality == null) && typeof window !== \"undefined\" && \"ontouchstart\" in window;\n  let interactionDescription = (0, $cVkRF$useMemo)(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n    let message = undefined;\n    if (shouldLongPress) message = stringFormatter.format(\"longPressToSelect\");\n    return selectionBehavior === \"replace\" && selectionMode !== \"none\" && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n  let descriptionProps = (0, $cVkRF$useDescription)(interactionDescription);\n  return descriptionProps;\n}\nfunction $83c6e2eafa584c67$export$f6b86a04e5d66d90(props, state, ref) {\n  let {\n    isVirtualized: isVirtualized,\n    keyboardDelegate: keyboardDelegate,\n    focusMode: focusMode,\n    scrollRef: scrollRef,\n    getRowText: getRowText,\n    onRowAction: onRowAction,\n    onCellAction: onCellAction\n  } = props;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\");\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = (0, $cVkRF$useCollator)({\n    usage: \"search\",\n    sensitivity: \"base\"\n  });\n  let {\n    direction: direction\n  } = (0, $cVkRF$useLocale)();\n  let delegate = (0, $cVkRF$useMemo)(() => keyboardDelegate || new (0, $d1c300d9c497e402$export$de9feff04fda126e)({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref: ref,\n    direction: direction,\n    collator: collator,\n    focusMode: focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n  let {\n    collectionProps: collectionProps\n  } = (0, $cVkRF$useSelectableCollection)({\n    ref: ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized: isVirtualized,\n    scrollRef: scrollRef\n  });\n  let id = (0, $cVkRF$useId)(props.id);\n  (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).set(state, {\n    keyboardDelegate: delegate,\n    actions: {\n      onRowAction: onRowAction,\n      onCellAction: onCellAction\n    }\n  });\n  let descriptionProps = (0, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2)({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n  let domProps = (0, $cVkRF$filterDOMProps)(props, {\n    labelable: true\n  });\n  let gridProps = (0, $cVkRF$mergeProps)(domProps, {\n    role: \"grid\",\n    id: id,\n    \"aria-multiselectable\": state.selectionManager.selectionMode === \"multiple\" ? \"true\" : undefined\n  }, state.isKeyboardNavigationDisabled ? {} : collectionProps, descriptionProps);\n  if (isVirtualized) {\n    gridProps[\"aria-rowcount\"] = state.collection.size;\n    gridProps[\"aria-colcount\"] = state.collection.columnCount;\n  }\n  (0, $92599c3fd427b763$export$137e594ef3218a10)({\n    getRowText: getRowText\n  }, state);\n  return {\n    gridProps: gridProps\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nfunction $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf() {\n  return {\n    rowGroupProps: {\n      role: \"rowgroup\"\n    }\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $4159a7a9cbb0cc18$export$96357d5a73f686fa(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    actions: {\n      onRowAction: onRowAction\n    }\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $cVkRF$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n  let isSelected = state.selectionManager.isSelected(node.key);\n  let rowProps = {\n    role: \"row\",\n    \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined,\n    ...itemProps\n  };\n  if (isVirtualized) rowProps[\"aria-rowindex\"] = node.index + 1; // aria-rowindex is 1 based\n  return {\n    rowProps: rowProps,\n    isPressed: isPressed\n  };\n}\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c(props, state, ref) {\n  let {\n    node: node,\n    isVirtualized: isVirtualized,\n    focusMode = \"child\",\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onAction\n  } = props;\n  let {\n    direction: direction\n  } = (0, $cVkRF$useLocale)();\n  let {\n    keyboardDelegate: keyboardDelegate,\n    actions: {\n      onCellAction: onCellAction\n    }\n  } = (0, $1af922eb41e03c8f$export$e6235c0d09b995d0).get(state);\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n    if (focusMode === \"child\") {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) return;\n      let focusable = state.selectionManager.childFocusStrategy === \"last\" ? $ab90dcbc1b5466d0$var$last(treeWalker) : treeWalker.firstChild();\n      if (focusable) {\n        (0, $cVkRF$focusSafely)(focusable);\n        return;\n      }\n    }\n    if (!ref.current.contains(document.activeElement)) (0, $cVkRF$focusSafely)(ref.current);\n  };\n  let {\n    itemProps: itemProps,\n    isPressed: isPressed\n  } = (0, $cVkRF$useSelectableItem)({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref: ref,\n    isVirtualized: isVirtualized,\n    focus: focus,\n    shouldSelectOnPressUp: shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n  let onKeyDownCapture = e => {\n    if (!e.currentTarget.contains(e.target) || state.isKeyboardNavigationDisabled) return;\n    let walker = (0, $cVkRF$getFocusableTreeWalker)(ref.current);\n    walker.currentNode = document.activeElement;\n    switch (e.key) {\n      case \"ArrowLeft\":\n        {\n          // Find the next focusable element within the cell.\n          let focusable = direction === \"rtl\" ? walker.nextNode() : walker.previousNode();\n          // Don't focus the cell itself if focusMode is \"child\"\n          if (focusMode === \"child\" && focusable === ref.current) focusable = null;\n          if (focusable) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(focusable);\n            (0, $cVkRF$scrollIntoViewport)(focusable, {\n              containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n            });\n          } else {\n            // If there is no next focusable child, then move to the next cell to the left of this one.\n            // This will be handled by useSelectableCollection. However, if there is no cell to the left\n            // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n            // same as this one. In that case we need to handle focusing either the cell or the first/last\n            // child, depending on the focus mode.\n            let prev = keyboardDelegate.getKeyLeftOf(node.key);\n            if (prev !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"rtl\") {\n              (0, $cVkRF$focusSafely)(ref.current);\n              (0, $cVkRF$scrollIntoViewport)(ref.current, {\n                containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n              });\n            } else {\n              walker.currentNode = ref.current;\n              focusable = direction === \"rtl\" ? walker.firstChild() : $ab90dcbc1b5466d0$var$last(walker);\n              if (focusable) {\n                (0, $cVkRF$focusSafely)(focusable);\n                (0, $cVkRF$scrollIntoViewport)(focusable, {\n                  containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n                });\n              }\n            }\n          }\n          break;\n        }\n      case \"ArrowRight\":\n        {\n          let focusable1 = direction === \"rtl\" ? walker.previousNode() : walker.nextNode();\n          if (focusMode === \"child\" && focusable1 === ref.current) focusable1 = null;\n          if (focusable1) {\n            e.preventDefault();\n            e.stopPropagation();\n            (0, $cVkRF$focusSafely)(focusable1);\n            (0, $cVkRF$scrollIntoViewport)(focusable1, {\n              containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n            });\n          } else {\n            let next = keyboardDelegate.getKeyRightOf(node.key);\n            if (next !== node.key) break;\n            e.preventDefault();\n            e.stopPropagation();\n            if (focusMode === \"cell\" && direction === \"ltr\") {\n              (0, $cVkRF$focusSafely)(ref.current);\n              (0, $cVkRF$scrollIntoViewport)(ref.current, {\n                containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n              });\n            } else {\n              walker.currentNode = ref.current;\n              focusable1 = direction === \"rtl\" ? $ab90dcbc1b5466d0$var$last(walker) : walker.firstChild();\n              if (focusable1) {\n                (0, $cVkRF$focusSafely)(focusable1);\n                (0, $cVkRF$scrollIntoViewport)(focusable1, {\n                  containingElement: (0, $cVkRF$getScrollParent)(ref.current)\n                });\n              }\n            }\n          }\n          break;\n        }\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(new KeyboardEvent(e.nativeEvent.type, e.nativeEvent));\n        }\n        break;\n    }\n  };\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = e => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!(0, $cVkRF$isFocusVisible)()) state.selectionManager.setFocusedKey(node.key);\n      return;\n    }\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === \"child\" && document.activeElement === ref.current) focus();\n    });\n  };\n  let gridCellProps = (0, $cVkRF$mergeProps)(itemProps, {\n    role: \"gridcell\",\n    onKeyDownCapture: onKeyDownCapture,\n    onFocus: onFocus\n  });\n  var _node_colIndex;\n  if (isVirtualized) gridCellProps[\"aria-colindex\"] = ((_node_colIndex = node.colIndex) !== null && _node_colIndex !== void 0 ? _node_colIndex : node.index) + 1; // aria-colindex is 1-based\n  return {\n    gridCellProps: gridCellProps,\n    isPressed: isPressed\n  };\n}\nfunction $ab90dcbc1b5466d0$var$last(walker) {\n  let next;\n  let last;\n  do {\n    last = walker.lastChild();\n    if (last) next = last;\n  } while (last);\n  return next;\n}\nfunction $7cb39d07f245a780$export$70e2eed1a92976ad(props, state) {\n  let {\n    key: key\n  } = props;\n  let manager = state.selectionManager;\n  let checkboxId = (0, $cVkRF$useId)();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n  let onChange = () => manager.select(key);\n  const stringFormatter = (0, $cVkRF$useLocalizedStringFormatter)((0, /*@__PURE__*/$parcel$interopDefault($1dbe5ffd32adb38c$exports)));\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      \"aria-label\": stringFormatter.format(\"select\"),\n      isSelected: isSelected,\n      isDisabled: isDisabled,\n      onChange: onChange\n    }\n  };\n}\nexport { $d1c300d9c497e402$export$de9feff04fda126e as GridKeyboardDelegate, $83c6e2eafa584c67$export$f6b86a04e5d66d90 as useGrid, $e45487f8ba1cbdbf$export$d3037f5d3f3e51bf as useGridRowGroup, $4159a7a9cbb0cc18$export$96357d5a73f686fa as useGridRow, $ab90dcbc1b5466d0$export$c7e10bfc0c59f67c as useGridCell, $7cb39d07f245a780$export$70e2eed1a92976ad as useGridSelectionCheckbox, $5b9b5b5723db6ae1$export$be42ebdab07ae4c2 as useHighlightSelectionDescription, $92599c3fd427b763$export$137e594ef3218a10 as useGridSelectionAnnouncement };","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;ACAA,GDAA,CCAA;;;;;;;;;;;AA2BO,MAAMA;EAmBDC,OAAOC,IAAa,EAAE;IAC9B,OAAOA,KAAKC,IAAI,KAAK;EACvB;EAEUC,MAAMF,IAAa,EAAE;IAC7B,OAAOA,KAAKC,IAAI,KAAK,SAASD,KAAKC,IAAI,KAAK;EAC9C;EAEUE,gBAAgBC,OAAa,EAAEC,IAAiC,EAAE;IAC1E,IAAIC,MAAMF,WAAW,IAAI,GACrB,IAAI,CAACG,UAAU,CAACC,YAAY,CAACJ,WAC7B,IAAI,CAACG,UAAU,CAACE,UAAU,EAAE;IAEhC,OAAOH,OAAO,IAAI,EAAE;MAClB,IAAII,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;MACnC,IAAI,CAACD,QAAQA,KAAKK,OAChB,OAAOJ;MAGTA,MAAM,IAAI,CAACC,UAAU,CAACC,YAAY,CAACF;IACrC;EACF;EAEUM,YAAYR,OAAa,EAAEC,IAAiC,EAAE;IACtE,IAAIC,MAAMF,WAAW,IAAI,GACrB,IAAI,CAACG,UAAU,CAACM,WAAW,CAACT,WAC5B,IAAI,CAACG,UAAU,CAACO,WAAW,EAAE;IAEjC,OAAOR,OAAO,IAAI,EAAE;MAClB,IAAII,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;MACnC,IAAI,CAACD,QAAQA,KAAKK,OAChB,OAAOJ;MAGTA,MAAM,IAAI,CAACC,UAAU,CAACM,WAAW,CAACP;IACpC;EACF;EAEAS,YAAYT,GAAQ,EAAE;IACpB,IAAIU,YAAY,IAAI,CAACT,UAAU,CAACI,OAAO,CAACL;IACxC,IAAI,CAACU,WACH;IAGF;IACA,IAAI,IAAI,CAACjB,MAAM,CAACiB,YACdV,MAAMU,UAAUC,SAAS;IAG3B;IACAX,MAAM,IAAI,CAACM,WAAW,CAACN;IACvB,IAAIA,OAAO,IAAI,EAAE;MACf;MACA,IAAI,IAAI,CAACP,MAAM,CAACiB,YAAY;QAC1B,IAAIN,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;QACnC,OAAO,IAAII,KAAKQ,UAAU,CAAC,CAACF,UAAUG,KAAK,CAAC,CAACb,GAAG;MAClD;MAEA;MACA,IAAI,IAAI,CAACc,SAAS,KAAK,OACrB,OAAOd;IAEX;EACF;EAEAe,YAAYf,GAAQ,EAAE;IACpB,IAAIU,YAAY,IAAI,CAACT,UAAU,CAACI,OAAO,CAACL;IACxC,IAAI,CAACU,WACH;IAGF;IACA,IAAI,IAAI,CAACjB,MAAM,CAACiB,YACdV,MAAMU,UAAUC,SAAS;IAG3B;IACAX,MAAM,IAAI,CAACH,eAAe,CAACG;IAC3B,IAAIA,OAAO,IAAI,EAAE;MACf;MACA,IAAI,IAAI,CAACP,MAAM,CAACiB,YAAY;QAC1B,IAAIN,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;QACnC,OAAO,IAAII,KAAKQ,UAAU,CAAC,CAACF,UAAUG,KAAK,CAAC,CAACb,GAAG;MAClD;MAEA;MACA,IAAI,IAAI,CAACc,SAAS,KAAK,OACrB,OAAOd;IAEX;EACF;EAEAgB,cAAchB,GAAQ,EAAE;IACtB,IAAII,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;IACnC,IAAI,CAACI,MACH;IAGF;IACA,IAAI,IAAI,CAACR,KAAK,CAACQ,OAAO;MACpB,IAAIa,WAAW,IAAIb,KAAKQ,UAAU,CAAC;MACnC,OAAO,IAAI,CAACM,SAAS,KAAK,QACtBD,QAAQ,CAACA,SAASE,MAAM,GAAG,EAAE,CAACnB,GAAG,GACjCiB,QAAQ,CAAC,EAAE,CAACjB,GAAG;IACrB;IAEA;IACA;IACA,IAAI,IAAI,CAACP,MAAM,CAACW,OAAO;MACrB,IAAIgB,SAAS,IAAI,CAACnB,UAAU,CAACI,OAAO,CAACD,KAAKO,SAAS;MACnD,IAAIU,YAAW,IAAID,OAAOR,UAAU,CAAC;MACrC,IAAIU,OAAO,IAAI,CAACJ,SAAS,KAAK,QAC1BG,SAAQ,CAACjB,KAAKS,KAAK,GAAG,EAAE,GACxBQ,SAAQ,CAACjB,KAAKS,KAAK,GAAG,EAAE;MAE5B,IAAIS,MACF,OAAOA,KAAKtB,GAAG;MAGjB;MACA,IAAI,IAAI,CAACc,SAAS,KAAK,OACrB,OAAOV,KAAKO,SAAS;MAGvB,OAAO,IAAI,CAACO,SAAS,KAAK,QAAQ,IAAI,CAACV,WAAW,CAACR,OAAO,IAAI,CAACG,UAAU,CAACH,IAAI;IAChF;EACF;EAEAuB,aAAavB,GAAQ,EAAE;IACrB,IAAII,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;IACnC,IAAI,CAACI,MACH;IAGF;IACA,IAAI,IAAI,CAACR,KAAK,CAACQ,OAAO;MACpB,IAAIa,WAAW,IAAIb,KAAKQ,UAAU,CAAC;MACnC,OAAO,IAAI,CAACM,SAAS,KAAK,QACtBD,QAAQ,CAAC,EAAE,CAACjB,GAAG,GACfiB,QAAQ,CAACA,SAASE,MAAM,GAAG,EAAE,CAACnB,GAAG;IACvC;IAEA;IACA;IACA,IAAI,IAAI,CAACP,MAAM,CAACW,OAAO;MACrB,IAAIgB,SAAS,IAAI,CAACnB,UAAU,CAACI,OAAO,CAACD,KAAKO,SAAS;MACnD,IAAIU,YAAW,IAAID,OAAOR,UAAU,CAAC;MACrC,IAAIY,OAAO,IAAI,CAACN,SAAS,KAAK,QAC1BG,SAAQ,CAACjB,KAAKS,KAAK,GAAG,EAAE,GACxBQ,SAAQ,CAACjB,KAAKS,KAAK,GAAG,EAAE;MAE5B,IAAIW,MACF,OAAOA,KAAKxB,GAAG;MAGjB;MACA,IAAI,IAAI,CAACc,SAAS,KAAK,OACrB,OAAOV,KAAKO,SAAS;MAGvB,OAAO,IAAI,CAACO,SAAS,KAAK,QAAQ,IAAI,CAACf,UAAU,CAACH,OAAO,IAAI,CAACQ,WAAW,CAACR,IAAI;IAChF;EACF;EAEAQ,YAAYR,GAAS,EAAEyB,MAAgB,EAAE;IACvC,IAAIrB;IACJ,IAAIJ,OAAO,IAAI,EAAE;MACfI,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;MAC/B,IAAI,CAACI,MACH;MAGF;MACA;MACA,IAAI,IAAI,CAACX,MAAM,CAACW,SAAS,CAACqB,QAAQ;QAChC,IAAIL,SAAS,IAAI,CAACnB,UAAU,CAACI,OAAO,CAACD,KAAKO,SAAS;QACnD,OAAO,IAAIS,OAAOR,UAAU,CAAC,CAAC,EAAE,CAACZ,GAAG;MACtC;IACF;IAEA;IACAA,MAAM,IAAI,CAACM,WAAW;IAEtB;IACA,IAAIN,GAAC,IAAO,IAAI,IAAII,QAAQ,IAAI,CAACX,MAAM,CAACW,SAASqB,UAAW,IAAI,CAACX,SAAS,KAAK,QAAQ;MACrF,IAAIY,QAAO,IAAI,CAACzB,UAAU,CAACI,OAAO,CAACL;MACnCA,MAAM,IAAI0B,MAAKd,UAAU,CAAC,CAAC,EAAE,CAACZ,GAAG;IACnC;IAEA;IACA,OAAOA;EACT;EAEAG,WAAWH,GAAS,EAAEyB,MAAgB,EAAE;IACtC,IAAIrB;IACJ,IAAIJ,OAAO,IAAI,EAAE;MACfI,OAAO,IAAI,CAACH,UAAU,CAACI,OAAO,CAACL;MAC/B,IAAI,CAACI,MACH;MAGF;MACA;MACA,IAAI,IAAI,CAACX,MAAM,CAACW,SAAS,CAACqB,QAAQ;QAChC,IAAIL,SAAS,IAAI,CAACnB,UAAU,CAACI,OAAO,CAACD,KAAKO,SAAS;QACnD,IAAIM,WAAW,IAAIG,OAAOR,UAAU,CAAC;QACrC,OAAOK,QAAQ,CAACA,SAASE,MAAM,GAAG,EAAE,CAACnB,GAAG;MAC1C;IACF;IAEA;IACAA,MAAM,IAAI,CAACH,eAAe;IAE1B;IACA,IAAIG,GAAC,IAAO,IAAI,IAAII,QAAQ,IAAI,CAACX,MAAM,CAACW,SAASqB,UAAW,IAAI,CAACX,SAAS,KAAK,QAAQ;MACrF,IAAIY,QAAO,IAAI,CAACzB,UAAU,CAACI,OAAO,CAACL;MACnC,IAAIqB,YAAW,IAAIK,MAAKd,UAAU,CAAC;MACnCZ,MAAMqB,SAAQ,CAACA,UAASF,MAAM,GAAG,EAAE,CAACnB,GAAG;IACzC;IAEA;IACA,OAAOA;EACT;EAEQK,QAAQL,GAAQ,EAAe;IACrC,OAAO,IAAI,CAAC2B,GAAG,CAACC,OAAO,CAACC,aAAa,CAAE,cAAa7B,GAAI,IAAG;EAC7D;EAEQ8B,YAAY9B,GAAQ,EAAQ;QAEzB+B;IADT,IAAI,IAAI,CAACC,MAAM,EACb,OAAO,kCAAI,CAACA,MAAM,CAACC,aAAa,CAACjC,kBAA1B+B,4EAAgCG,IAAI;IAG7C,IAAI9B,OAAO,IAAI,CAACC,OAAO,CAACL;IACxB,IAAII,MACF,OAAO,KAAI,cAAG,EAAEA,KAAK+B,UAAU,EAAE/B,KAAKgC,SAAS,EAAEhC,KAAKiC,WAAW,EAAEjC,KAAKkC,YAAY;EAExF;EAEQC,gBAAwB;QAErBC,0BAGFC;IAJP,IAAI,IAAI,CAACT,MAAM,EACb,OAAO,gCAAI,CAACA,MAAM,CAACU,WAAW,cAAvBF,wEAAyBG,YAAYC,MAAM;IAGpD,OAAO,iBAAI,CAACjB,GAAG,cAARc,+DAAUb,oDAAV,2BAAmBU,YAAF;EAC1B;EAEQO,mBAA2B;QAK1BJ;IAJP,IAAI,IAAI,CAACT,MAAM,EACb,OAAO,IAAI,CAACA,MAAM,CAACc,cAAc,GAAGF,MAAM;IAG5C,OAAO,iBAAI,CAACjB,GAAG,cAARc,+DAAUb,oDAAV,2BAAmBmB,YAAF;EAC1B;EAEAC,gBAAgBhD,GAAQ,EAAE;IACxB,IAAIiD,WAAW,IAAI,CAACnB,WAAW,CAAC9B;IAChC,IAAI,CAACiD,UACH,OAAO,IAAI;IAGb,IAAIC,QAAQC,KAAKC,GAAG,CAAC,GAAGH,SAASI,IAAI,GAAG,IAAI,CAACd,aAAa;IAE1D,OAAOU,YAAYA,SAASK,CAAC,GAAGJ,OAAO;MACrClD,MAAM,IAAI,CAACe,WAAW,CAACf;MACvBiD,WAAW,IAAI,CAACnB,WAAW,CAAC9B;IAC9B;IAEA,OAAOA;EACT;EAEAuD,gBAAgBvD,GAAQ,EAAE;IACxB,IAAIiD,WAAW,IAAI,CAACnB,WAAW,CAAC9B;IAEhC,IAAI,CAACiD,UACH,OAAO,IAAI;IAGb,IAAIO,aAAa,IAAI,CAACjB,aAAa;IACnC,IAAIW,QAAQC,KAAKM,GAAG,CAAC,IAAI,CAACZ,gBAAgB,IAAII,SAASK,CAAC,GAAGE;IAE3D,OAAOP,YAAYA,SAASI,IAAI,GAAGH,OAAO;MACxC,IAAIQ,UAAU,IAAI,CAACjD,WAAW,CAACT;MAC/BiD,WAAW,IAAI,CAACnB,WAAW,CAAC4B;MAE5B;MACA;MACA,IAAIA,WAAW,IAAI,EACjB1D,MAAM0D;IAEV;IAEA,OAAO1D;EACT;EAEA2D,gBAAgBC,MAAc,EAAE9D,OAAa,EAAE;IAC7C,IAAI,CAAC,IAAI,CAAC+D,QAAQ,EAChB,OAAO,IAAI;IAGb,IAAI5D,aAAa,IAAI,CAACA,UAAU;IAChC,IAAID,MAAMF,mDAAW,IAAI,CAACU,WAAW,EAAE;IAEvC;IACA,IAAIE,YAAYT,WAAWI,OAAO,CAACL;IACnC,IAAIU,UAAUf,IAAI,KAAK,QACrBK,MAAMU,UAAUC,SAAS;IAG3B,IAAImD,aAAa,KAAK;IACtB,OAAO9D,OAAO,IAAI,EAAE;MAClB,IAAII,OAAOH,WAAWI,OAAO,CAACL;MAE9B;MACA,IAAII,KAAK2D,SAAS,EAAE;QAClB,IAAIC,YAAY5D,KAAK2D,SAAS,CAACE,KAAK,CAAC,GAAGL,OAAOzC,MAAM;QACrD,IAAI,IAAI,CAAC0C,QAAQ,CAACK,OAAO,CAACF,WAAWJ,YAAY,GAAG;UAClD,IAAI,IAAI,CAAChE,KAAK,CAACQ,SAAS,IAAI,CAACU,SAAS,KAAK,QACzC,OAAO,IAAIV,KAAKQ,UAAU,CAAC,CAAC,EAAE,CAACZ,GAAG;UAGpC,OAAOI,KAAKJ,GAAG;QACjB;MACF;MAEAA,MAAM,IAAI,CAACM,WAAW,CAACN;MAEvB;MACA,IAAIA,OAAO,IAAI,IAAI,CAAC8D,YAAY;QAC9B9D,MAAM,IAAI,CAACQ,WAAW;QACtBsD,aAAa,IAAI;MACnB;IACF;IAEA,OAAO,IAAI;EACb;EAzVAK,YAAYC,OAA0C,EAAE;IACtD,IAAI,CAACnE,UAAU,GAAGmE,QAAQnE,UAAU;IACpC,IAAI,CAACoE,YAAY,GAAGD,QAAQC,YAAY;IACxC,IAAI,CAAC1C,GAAG,GAAGyC,QAAQzC,GAAG;IACtB,IAAI,CAACT,SAAS,GAAGkD,QAAQlD,SAAS;IAClC,IAAI,CAAC2C,QAAQ,GAAGO,QAAQP,QAAQ;IAChC,IAAI,CAAC7B,MAAM,GAAGoC,QAAQpC,MAAM;IAC5B,IAAI,CAAClB,SAAS,GAAGsD,QAAQtD,SAAS,IAAI;EACxC;AAkVF;;AC9XA;;;;;;;;;;;;ACAA;;;;;;;;;;;AAYA,MAgBawD,4CAAU,IAAIC;;AC5B3B;;;;;;;;;;;;;ACAAC,4BAAiB;EAAG,kBAAmBC,QAAU,GAAEA,KAAKrE,IAAK,aAAY;EACvE,qBAAsB,qCAAoC;EAC1D,UAAW,OAAM;EACjB,eAAgB,uBAAsB;EACtC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,oBAAmB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,YAAW;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAW,EAAG,GAAE;EACxN,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA4E,4BAAiB;EAAG,kBAAmBP,QAAU,GAAEA,KAAKrE,IAAK,eAAc;EACzE,qBAAsB,yDAAwD;EAC9E,UAAW,UAAS;EACpB,eAAgB,6BAA4B;EAC5C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,uBAAsB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,iBAAgB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAkB,EAAG,GAAE;EACvO,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA6E,4BAAiB;EAAG,kBAAmBR,QAAU,WAAUA,KAAKrE,IAAK,gBAAe;EAClF,qBAAsB,+CAA8C;EACpE,UAAW,QAAO;EAClB,eAAgB,0BAAyB;EACzC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,WAAUH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,UAAS;IAAEG,OAAO,MAAO,WAAUL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAS,EAAG,GAAE;EACzO,gBAAiBH,QAAU,mBAAkBA,KAAKrE,IAAK;AACzD;;ACNA8E,4BAAiB;EAAG,kBAAmBT,QAAU,GAAEA,KAAKrE,IAAK,cAAa;EACxE,qBAAsB,iDAAgD;EACtE,UAAW,MAAK;EAChB,eAAgB,uBAAsB;EACtC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,uBAAsB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,gBAAe;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAiB,EAAG,GAAE;EACrO,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA+E,4BAAiB;EAAG,kBAAmBV,QAAU,GAAEA,KAAKrE,IAAK,oBAAmB;EAC9E,qBAAsB,6CAA4C;EAClE,UAAW,WAAU;EACrB,eAAgB,2BAA0B;EAC1C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,2BAA0B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,qBAAoB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAqB,EAAG,GAAE;EAClP,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAgF,4BAAiB;EAAG,kBAAmBX,QAAU,8BAA6BA,KAAKrE,IAAK,GAAE;EACxF,qBAAsB,4DAA2D;EACjF,UAAW,SAAQ;EACnB,eAAgB,8BAA6B;EAC7C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,0BAAyB;IAAEC,KAAK,MAAO,cAAaH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,WAAU;IAAEG,OAAO,MAAO,eAAcL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAU,EAAG,GAAE;EACnP,gBAAiBH,QAAU,0BAAyBA,KAAKrE,IAAK;AAChE;;ACNAiF,4BAAiB;EAAG,kBAAmBZ,QAAU,GAAEA,KAAKrE,IAAK,gBAAe;EAC1E,UAAW,QAAO;EAClB,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,mBAAkB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,gBAAe;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAgB,EAAG,GAAE;EAChO,eAAgB,qBAAoB;EACpC,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK,YAAW;EAClD,qBAAsB;AACxB;;ACNAkF,4BAAiB;EAAG,kBAAmBb,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,mDAAkD;EACxE,UAAW,aAAY;EACvB,eAAgB,oCAAmC;EACnD,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,8BAA6B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,wBAAuB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAyB,EAAG,GAAE;EAC5P,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAmF,4BAAiB;EAAG,kBAAmBd,QAAU,GAAEA,KAAKrE,IAAK,gBAAe;EAC1E,qBAAsB,6CAA4C;EAClE,UAAW,MAAK;EAChB,eAAgB,uBAAsB;EACtC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,qBAAoB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,gBAAe;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAgB,EAAG,GAAE;EAClO,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAoF,4BAAiB;EAAG,kBAAmBf,QAAU,YAAWA,KAAKrE,IAAK,cAAa;EACjF,qBAAsB,0CAAyC;EAC/D,UAAW,SAAQ;EACnB,eAAgB,yBAAwB;EACxC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,4BAA2B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,gBAAe;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAkB,EAAG,GAAE;EAC3O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAqF,4BAAiB;EAAG,kBAAmBhB,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,gEAA+D;EACrF,UAAW,cAAa;EACxB,eAAgB,iCAAgC;EAChD,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,2BAA0B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,sBAAqB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAuB,EAAG,GAAE;EACrP,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAsF,4BAAiB;EAAG,kBAAmBjB,QAAU,GAAEA,KAAKrE,IAAK,WAAU;EACrE,qBAAsB,+BAA8B;EACpD,UAAW,KAAI;EACf,eAAgB,mBAAkB;EAClC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,iBAAgB;IAAEC,KAAK,MAAO,QAAOH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,OAAM;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAc,EAAG,GAAE;EACxN,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAuF,4BAAiB;EAAG,kBAAmBlB,QAAU,UAASA,KAAKrE,IAAK,iBAAgB;EAClF,qBAAsB,4CAA2C;EACjE,UAAW,WAAU;EACrB,eAAgB,yBAAwB;EACxC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,8BAA6B;IAAEC,KAAK,MAAO,eAAcH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,SAAQ;IAAEG,OAAO,MAAO,eAAcL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAQ,EAAG,GAAE;EACpP,gBAAiBH,QAAU,UAASA,KAAKrE,IAAK;AAChD;;ACNAwF,4BAAiB;EAAG,kBAAmBnB,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,gCAA+B;EACrD,UAAW,WAAU;EACrB,eAAgB,2BAA0B;EAC1C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,0BAAyB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,iBAAgB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAgB,EAAG,GAAE;EACxO,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAyF,4BAAiB;EAAG,kBAAmBpB,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,uDAAsD;EAC5E,UAAW,WAAU;EACrB,eAAgB,iCAAgC;EAChD,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,6BAA4B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,uBAAsB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAsB,EAAG,GAAE;EACvP,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA0F,4BAAiB;EAAG,kBAAmBrB,QAAU,GAAEA,KAAKrE,IAAK,cAAa;EACxE,qBAAsB,kBAAiB;EACvC,UAAW,IAAG;EACd,eAAgB,gBAAe;EAC/B,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,cAAa;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,YAAW;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAW,EAAG,GAAE;EAClN,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA2F,4BAAiB;EAAG,kBAAmBtB,QAAU,GAAEA,KAAKrE,IAAK,kBAAiB;EAC5E,qBAAsB,wBAAuB;EAC7C,UAAW,IAAG;EACd,eAAgB,iBAAgB;EAChC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,cAAa;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,eAAc;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAc,EAAG,GAAE;EACxN,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA4F,4BAAiB;EAAG,kBAAmBvB,QAAU,GAAEA,KAAKrE,IAAK,gBAAe;EAC1E,qBAAsB,kEAAiE;EACvF,UAAW,YAAW;EACtB,eAAgB,4BAA2B;EAC3C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,mCAAkC;IAAEC,KAAK,MAAO,eAAcH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,YAAW;IAAEG,OAAO,MAAO,wBAAuBL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAC,EAAG,GAAE;EAC9P,gBAAiBH,QAAU,eAAcA,KAAKrE,IAAK;AACrD;;ACNA6F,4BAAiB;EAAG,kBAAmBxB,QAAU,WAAUA,KAAKrE,IAAK,gBAAe;EAClF,qBAAsB,qDAAoD;EAC1E,UAAW,SAAQ;EACnB,eAAgB,wBAAuB;EACvC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,8BAA6B;IAAEC,KAAK,MAAO,4BAA2BH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,EAAC;IAAEG,OAAO,MAAO,4BAA2BL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAC,EAAG,GAAE;EAChQ,gBAAiBH,QAAU,oBAAmBA,KAAKrE,IAAK;AAC1D;;ACNA8F,4BAAiB;EAAG,kBAAmBzB,QAAU,GAAEA,KAAKrE,IAAK,iBAAgB;EAC3E,qBAAsB,+CAA8C;EACpE,UAAW,MAAK;EAChB,eAAgB,0BAAyB;EACzC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,0BAAyB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,mBAAkB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAoB,EAAG,GAAE;EAC9O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA+F,4BAAiB;EAAG,kBAAmB1B,QAAU,GAAEA,KAAKrE,IAAK,qBAAoB;EAC/E,qBAAsB,0CAAyC;EAC/D,UAAW,YAAW;EACtB,eAAgB,0BAAyB;EACzC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,oBAAmB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAoB,EAAG,GAAE;EAC9O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAgG,4BAAiB;EAAG,kBAAmB3B,QAAU,kBAAiBA,KAAKrE,IAAK,GAAE;EAC5E,qBAAsB,oDAAmD;EACzE,UAAW,SAAQ;EACnB,eAAgB,gCAA+B;EAC/C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,kCAAiC;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,qBAAoB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAwB,EAAG,GAAE;EAC5P,gBAAiBH,QAAU,cAAaA,KAAKrE,IAAK;AACpD;;ACNAiG,4BAAiB;EAAG,kBAAmB5B,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,sDAAqD;EAC3E,UAAW,YAAW;EACtB,eAAgB,8BAA6B;EAC7C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,mBAAkB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAoB,EAAG,GAAE;EAC7O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAkG,4BAAiB;EAAG,kBAAmB7B,QAAU,GAAEA,KAAKrE,IAAK,mBAAkB;EAC7E,qBAAsB,qDAAoD;EAC1E,UAAW,YAAW;EACtB,eAAgB,8BAA6B;EAC7C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,mBAAkB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAoB,EAAG,GAAE;EAC7O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAmG,4BAAiB;EAAG,kBAAmB9B,QAAU,GAAEA,KAAKrE,IAAK,cAAa;EACxE,qBAAsB,oDAAmD;EACzE,UAAW,WAAU;EACrB,eAAgB,6BAA4B;EAC5C,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,mBAAkB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAoB,EAAG,GAAE;EAC7O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAoG,4BAAiB;EAAG,kBAAmB/B,QAAU,GAAEA,KAAKrE,IAAK,cAAa;EACxE,qBAAsB,iDAAgD;EACtE,UAAW,SAAQ;EACnB,eAAgB,uBAAsB;EACtC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,iBAAgB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAmB,EAAG,GAAE;EAC1O,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAqG,4BAAiB;EAAG,kBAAmBhC,QAAU,sBAAqBA,KAAKrE,IAAK,GAAE;EAChF,qBAAsB,6CAA4C;EAClE,UAAW,QAAO;EAClB,eAAgB,yBAAwB;EACxC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,wBAAuB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,kBAAiB;IAAEG,OAAO,MAAO,4BAA2BL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAC,EAAG,GAAE;EACjP,gBAAiBH,QAAU,oBAAmBA,KAAKrE,IAAK;AAC1D;;ACNAsG,4BAAiB;EAAG,kBAAmBjC,QAAU,WAAUA,KAAKrE,IAAK,aAAY;EAC/E,qBAAsB,kDAAiD;EACvE,UAAW,UAAS;EACpB,eAAgB,0BAAyB;EACzC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,yBAAwB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,oBAAmB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAuB,EAAG,GAAE;EACjP,gBAAiBH,QAAU,WAAUA,KAAKrE,IAAK;AACjD;;ACNAuG,4BAAiB;EAAG,kBAAmBlC,QAAU,GAAEA,KAAKrE,IAAK,iBAAgB;EAC3E,qBAAsB,4CAA2C;EACjE,UAAW,WAAU;EACrB,eAAgB,yBAAwB;EACxC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,8BAA6B;IAAEC,KAAK,MAAO,eAAcH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,SAAQ;IAAEG,OAAO,MAAO,eAAcL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAQ,EAAG,GAAE;EACpP,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAwG,4BAAiB;EAAG,kBAAmBnC,QAAU,GAAEA,KAAKrE,IAAK,eAAc;EACzE,qBAAsB,2CAA0C;EAChE,UAAW,SAAQ;EACnB,eAAgB,wBAAuB;EACvC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,uBAAsB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,kBAAiB;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAkB,EAAG,GAAE;EACxO,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNAyG,4BAAiB;EAAG,kBAAmBpC,QAAU,GAAEA,KAAKrE,IAAK,aAAY;EACvE,qBAAsB,sCAAqC;EAC3D,UAAW,KAAI;EACf,eAAgB,qBAAoB;EACpC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,sBAAqB;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,cAAa;IAAEG,OAAO,MAAO,GAAEL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAa,EAAG,GAAE;EAC9N,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA0G,4BAAiB;EAAG,kBAAmBrC,QAAU,GAAEA,KAAKrE,IAAK,cAAa;EACxE,qBAAsB,yDAAwD;EAC9E,UAAW,SAAQ;EACnB,eAAgB,uBAAsB;EACtC,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,6BAA4B;IAAEC,KAAK,MAAO,GAAEH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,kBAAiB;IAAEG,OAAO,MAAO,sBAAqBL,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAC,EAAG,GAAE;EAChP,gBAAiBH,QAAU,GAAEA,KAAKrE,IAAK;AACzC;;ACNA2G,4BAAiB;EAAG,kBAAmBtC,QAAU,OAAMA,KAAKrE,IAAK,GAAE;EACjE,qBAAsB,YAAW;EACjC,UAAW,IAAG;EACd,eAAgB,UAAS;EACzB,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,OAAM;IAAEC,KAAK,MAAO,OAAMH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,MAAK;IAAEG,OAAO,MAAO,OAAML,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAK,EAAG,GAAE;EACvM,gBAAiBH,QAAU,OAAMA,KAAKrE,IAAK;AAC7C;;ACNA4G,4BAAiB;EAAG,kBAAmBvC,QAAU,OAAMA,KAAKrE,IAAK,IAAG;EAClE,qBAAsB,YAAW;EACjC,UAAW,IAAG;EACd,eAAgB,UAAS;EACzB,iBAAiB,CAACqE,MAAMC,cAAe,GAAEA,UAAUC,MAAM,CAACF,KAAKG,KAAK,EAAE;IAAC,MAAO,SAAQ;IAAEC,KAAK,MAAO,OAAMH,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE,MAAK;IAAEG,OAAO,MAAO,OAAML,UAAUI,MAAM,CAACL,KAAKG,KAAK,CAAE;EAAK,EAAG,GAAE;EACzM,gBAAiBH,QAAU,OAAMA,KAAKrE,IAAK;AAC7C;AC4BA6G,4BAAiB;EACf,SAASzC;EACT,SAASQ;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;EACT,SAASC;AACX;AnC/BO,SAASE,0CAAgCC,KAAqC,EAAEC,KAA4B,EAAE;EACnH,IAAI;IACFC,aAAcrH;UAAQsH;MAAA,0CAAMrH,UAAU,CAACI,OAAO,CAACL,kBAAzBsH,0EAA+BvD,SAAS;;GAC/D,GAAGoD;EACJ,IAAII,kBAAkB,sCAA0B,GAAE,gEAAY,CAAD;EAE7D;EACA;EACA,IAAIC,YAAYJ,MAAMK,gBAAgB,CAACC,YAAY;EACnD,IAAIC,gBAAgB,iBAAK,EAAEH;EAC3B,0BAAe,EAAC,MAAM;QAqC2FI;IApC/G,IAAI,CAACR,MAAMK,gBAAgB,CAACI,SAAS,EAAE;MACrCF,cAAc/F,OAAO,GAAG4F;MAExB;IACF;IAEA,IAAIM,YAAYC,oCAAcP,WAAWG,cAAc/F,OAAO;IAC9D,IAAIoG,cAAcD,oCAAcJ,cAAc/F,OAAO,EAAE4F;IAEvD;IACA,IAAIS,YAAYb,MAAMK,gBAAgB,CAACS,iBAAiB,KAAK;IAC7D,IAAIC,WAAW,EAAE;IAEjB,IAAKf,MAAMK,gBAAgB,CAACW,YAAY,CAACC,IAAI,KAAK,KAAKJ,WACrD;MAAA,IAAIb,MAAMnH,UAAU,CAACI,OAAO,CAAC+G,MAAMK,gBAAgB,CAACW,YAAY,CAACE,IAAI,GAAGhH,IAAI,GAAGiH,KAAK,GAAG;QACrF,IAAIC,uBAAuBnB,WAAWD,MAAMK,gBAAgB,CAACW,YAAY,CAACE,IAAI,GAAGhH,IAAI,GAAGiH,KAAK;QAC7F,IAAIC,sBACFL,SAASM,IAAI,CAAClB,gBAAgBmB,MAAM,CAAC,gBAAgB;UAACtI,MAAMoI;QAAoB;MAEpF;IAAA,OACK,IAAIV,UAAUO,IAAI,KAAK,KAAKL,YAAYK,IAAI,KAAK,GAAG;MACzD,IAAIM,YAAYtB,WAAWS,UAAUQ,IAAI,GAAGhH,IAAI,GAAGiH,KAAK;MACxD,IAAII,WACFR,SAASM,IAAI,CAAClB,gBAAgBmB,MAAM,CAAC,gBAAgB;QAACtI,MAAMuI;MAAS;IAEzE,OAAO,IAAIX,YAAYK,IAAI,KAAK,KAAKP,UAAUO,IAAI,KAAK,GACtD;MAAA,IAAIjB,MAAMnH,UAAU,CAACI,OAAO,CAAC2H,YAAYM,IAAI,GAAGhH,IAAI,GAAGiH,KAAK,GAAG;QAC7D,IAAIK,cAAcvB,WAAWW,YAAYM,IAAI,GAAGhH,IAAI,GAAGiH,KAAK;QAC5D,IAAIK,aACFT,SAASM,IAAI,CAAClB,gBAAgBmB,MAAM,CAAC,kBAAkB;UAACtI,MAAMwI;QAAW;MAE7E;IAAA;IAGF;IACA,IAAIxB,MAAMK,gBAAgB,CAACoB,aAAa,KAAK,YAC3C;MAAA,IAAIV,SAAShH,MAAM,KAAK,KAAKqG,cAAc,SAASA,UAAUa,IAAI,GAAG,KAAKV,cAAc/F,OAAO,KAAK,SAAS,yCAAcA,OAAO,cAArBgG,oEAAuBS,IAAI,IAAG,GACzIF,SAASM,IAAI,CAACjB,cAAc,QACxBD,gBAAgBmB,MAAM,CAAC,iBACvBnB,gBAAgBmB,MAAM,CAAC,iBAAiB;QAAC9D,OAAO4C,UAAUa;MAAI,EAAE;IAEtE;IAGF,IAAIF,SAAShH,MAAM,GAAG,GACpB,mBAAO,EAAEgH,SAASW,IAAI,CAAC;IAGzBnB,cAAc/F,OAAO,GAAG4F;EAC1B,GAAG,CAACA,UAAU;AAChB;AAEA,SAASO,oCAAcgB,CAAY,EAAEC,CAAY,EAAY;EAC3D,IAAIC,MAAM,IAAIC;EACd,IAAIH,MAAM,SAASC,MAAM,OACvB,OAAOC;EAGT,KAAK,IAAIjJ,OAAO+I,EAAET,IAAI,IACpB,IAAI,CAACU,EAAEG,GAAG,CAACnJ,MACTiJ,IAAIG,GAAG,CAACpJ;EAIZ,OAAOiJ;AACT;;AoClHA;;;;;;;;;;;;AA8BO,SAASI,0CAAiClC,KAAyC,EAAqB;EAC7G,IAAII,kBAAkB,sCAA0B,GAAE,gEAAY,CAAD;EAC7D,IAAI+B,WAAW,iCAAsB,GAAD;EACpC;EACA,IAAIC,kBAAkB,CAACD,aAAa,aAAaA,aAAa,aAAaA,YAAY,IAAI,KACtF,OAAOE,WAAW,eAAe,kBAAkBA;EAExD,IAAIC,yBAAyB,kBAAM,EAAE,MAAM;IACzC,IAAIZ,gBAAgB1B,MAAMM,gBAAgB,CAACoB,aAAa;IACxD,IAAIX,oBAAoBf,MAAMM,gBAAgB,CAACS,iBAAiB;IAEhE,IAAIwB,UAAUC;IACd,IAAIJ,iBACFG,UAAUnC,gBAAgBmB,MAAM,CAAC;IAGnC,OAAOR,sBAAsB,aAAaW,kBAAkB,UAAU1B,MAAMyC,cAAc,GAAGF,UAAUC,SAAS;EAClH,GAAG,CAACxC,MAAMM,gBAAgB,CAACoB,aAAa,EAAE1B,MAAMM,gBAAgB,CAACS,iBAAiB,EAAEf,MAAMyC,cAAc,EAAErC,iBAAiBgC,gBAAgB;EAE3I,IAAIM,mBAAmB,yBAAa,EAAEJ;EACtC,OAAOI;AACT;AtCaO,SAASC,0CAAW3C,KAAgB,EAAEC,KAAsC,EAAEzF,GAA2B,EAAY;EAC1H,IAAI;IAAAoI,eACFA;IAAaC,kBACbA;IAAgBlJ,WAChBA;IAASmJ,WACTA;IAAS5C,YACTA;IAAU6C,aACVA;IAAWC,cACXA;EAAY,CACb,GAAGhD;EAEJ,IAAI,CAACA,KAAK,CAAC,aAAa,IAAI,CAACA,KAAK,CAAC,kBAAkB,EACnDiD,QAAQC,IAAI,CAAC;EAGf;EACA;EACA,IAAIxG,WAAW,sBAAU,EAAE;IAACyG,OAAO;IAAUC,aAAa;EAAM;EAChE,IAAI;IAAArJ,WAACA;EAAS,CAAC,GAAG,oBAAS,GAAD;EAC1B,IAAIsJ,WAAW,kBAAM,EAAE,MAAMR,oBAAoB,KAAI,4CAAmB,EAAE;IACxE/J,YAAYmH,MAAMnH,UAAU;IAC5BoE,cAAc+C,MAAM/C,YAAY;SAChC1C;eACAT;cACA2C;eACA/C;EACF,IAAI,CAACkJ,kBAAkB5C,MAAMnH,UAAU,EAAEmH,MAAM/C,YAAY,EAAE1C,KAAKT,WAAW2C,UAAU/C,UAAU;EAEjG,IAAI;IAAA2J,iBAACA;EAAe,CAAC,GAAG,kCAAuB,EAAC;SAC9C9I;IACA8F,kBAAkBL,MAAMK,gBAAgB;IACxCuC,kBAAkBQ;mBAClBT;eACAE;EACF;EAEA,IAAIS,KAAK,gBAAK,EAACvD,MAAMuD,EAAE;EACvB,6CAAM,EAAEC,GAAG,CAACvD,OAAO;IAAC4C,kBAAkBQ;IAAUI,SAAS;mBAACV;oBAAaC;IAAY;EAAC;EAEpF,IAAIN,mBAAmB,6CAA+B,EAAE;IACtDpC,kBAAkBL,MAAMK,gBAAgB;IACxCmC,gBAAgB,CAAC,EAAEM,eAAeC,YAAW;EAC/C;EAEA,IAAIU,WAAW,yBAAa,EAAE1D,OAAO;IAAC2D,WAAW;EAAI;EACrD,IAAIC,YAA2B,qBAAS,EACtCF,UACA;IACEG,MAAM;QACNN;IACA,wBAAwBtD,MAAMK,gBAAgB,CAACoB,aAAa,KAAK,aAAa,SAASc;EACzF,GACAvC,MAAM6D,4BAA4B,GAAG,CAAC,IAAIR,eAAe,EACzDZ;EAGF,IAAIE,eAAe;IACjBgB,SAAS,CAAC,gBAAgB,GAAG3D,MAAMnH,UAAU,CAACoI,IAAI;IAClD0C,SAAS,CAAC,gBAAgB,GAAG3D,MAAMnH,UAAU,CAACiL,WAAW;EAC3D;EAEA,6CAA4B,EAAC;gBAAC7D;EAAU,GAAGD;EAC3C,OAAO;eACL2D;EACF;AACF;;AuCjIA;;;;;;;;;;;AAYA,SAUgBI,4CAAoC;EAClD,OAAO;IACLC,eAAe;MACbJ,MAAM;IACR;EACF;AACF;;AC5BA;;;;;;;;;;;;AA8CO,SAASK,0CAAsElE,KAAsB,EAAEC,KAAQ,EAAEzF,GAAgC,EAAe;EACrK,IAAI;IAAAjC,MACFA;IAAIqK,eACJA;IAAauB,uBACbA;IAAqBC,UACrBA;EAAQ,CACT,GAAGpE;EAEJ,IAAI;IAACyD,SAAS;MAAAV,aAACA;IAAW;EAAC,CAAC,GAAG,6CAAM,EAAEsB,GAAG,CAACpE;EAC3C,IAAI;IAAAqE,WAACA;IAASC,WAAEA;EAAS,CAAC,GAAG,4BAAiB,EAAC;IAC7CjE,kBAAkBL,MAAMK,gBAAgB;IACxCzH,KAAKN,KAAKM,GAAG;SACb2B;mBACAoI;2BACAuB;IACAC,UAAUrB,cAAc,MAAMA,YAAYxK,KAAKM,GAAG,IAAIuL,QAAQ;IAC9DI,YAAYvE,MAAMnH,UAAU,CAACoI,IAAI,KAAK;EACxC;EAEA,IAAIuD,aAAaxE,MAAMK,gBAAgB,CAACmE,UAAU,CAAClM,KAAKM,GAAG;EAE3D,IAAI6L,WAA0B;IAC5Bb,MAAM;IACN,iBAAiB5D,MAAMK,gBAAgB,CAACoB,aAAa,KAAK,SAAS+C,aAAajC,SAAS;IACzF,GAAG8B;EACL;EAEA,IAAI1B,eACF8B,QAAQ,CAAC,gBAAgB,GAAGnM,KAAKmB,KAAK,GAAG,GAAG;EAG9C,OAAO;cACLgL;eACAH;EACF;AACF;;ACjFA;;;;;;;;;;;;AAoDO,SAASI,0CAA4C3E,KAAoB,EAAEC,KAAsB,EAAEzF,GAAgC,EAAgB;EACxJ,IAAI;IAAAjC,MACFA;IAAIqK,eACJA;IACAjJ,YAAY;IAAAwK,uBACZA;IAAqBC,UACrBA;EAAQ,CACT,GAAGpE;EAEJ,IAAI;IAAAjG,WAACA;EAAS,CAAC,GAAG,oBAAS,GAAD;EAC1B,IAAI;IAAA8I,kBAACA;IAAkBY,SAAS;MAAAT,cAACA;IAAY;EAAC,CAAC,GAAG,6CAAO,EAACqB,GAAG,CAACpE;EAE9D;EACA;EACA,IAAI2E,QAAQ,MAAM;IAChB,IAAIC,aAAa,iCAAsB,EAACrK,IAAIC,OAAO;IACnD,IAAId,cAAc,SAAS;MACzB;MACA,IAAIa,IAAIC,OAAO,CAACqK,QAAQ,CAACC,SAASC,aAAa,KAAKxK,IAAIC,OAAO,KAAKsK,SAASC,aAAa,EACxF;MAGF,IAAIC,YAAYhF,MAAMK,gBAAgB,CAAC4E,kBAAkB,KAAK,SAC1DC,2BAAKN,cACLA,WAAWO,UAAU,EAAsB;MAC/C,IAAIH,WAAW;QACb,sBAAW,EAACA;QACZ;MACF;IACF;IAEA,IAAI,CAACzK,IAAIC,OAAO,CAACqK,QAAQ,CAACC,SAASC,aAAa,GAC9C,sBAAU,EAAExK,IAAIC,OAAO;EAE3B;EAEA,IAAI;IAAA6J,WAACA;IAASC,WAAEA;EAAS,CAAC,GAAG,4BAAiB,EAAC;IAC7CjE,kBAAkBL,MAAMK,gBAAgB;IACxCzH,KAAKN,KAAKM,GAAG;SACb2B;mBACAoI;WACAgC;2BACAT;IACAC,UAAUpB,eAAe,MAAMA,aAAazK,KAAKM,GAAG,IAAIuL,QAAQ;IAChEI,YAAYvE,MAAMnH,UAAU,CAACoI,IAAI,KAAK;EACxC;EAEA,IAAImE,mBAAoBC,KAA0B;IAChD,IAAI,CAACA,EAAEC,aAAa,CAACT,QAAQ,CAACQ,EAAEE,MAAM,KAAgBvF,MAAM6D,4BAA4B,EACtF;IAGF,IAAI2B,SAAS,iCAAsB,EAACjL,IAAIC,OAAO;IAC/CgL,OAAOC,WAAW,GAAGX,SAASC,aAAa;IAE3C,QAAQM,EAAEzM,GAAG;MACX,KAAK;QAAa;UAChB;UACA,IAAIoM,YAAYlL,cAAc,QAC1B0L,OAAOE,QAAQ,KACfF,OAAOG,YAAY,EAAsB;UAE7C;UACA,IAAIjM,cAAc,WAAWsL,cAAczK,IAAIC,OAAO,EACpDwK,YAAY,IAAI;UAGlB,IAAIA,WAAW;YACbK,EAAEO,cAAc;YAChBP,EAAEQ,eAAe;YACjB,sBAAW,EAACb;YACZ,6BAAkB,EAACA,WAAW;cAACc,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;YAAC;UAChF,OAAO;YACL;YACA;YACA;YACA;YACA;YACA,IAAIJ,OAAOwI,iBAAiBzI,YAAY,CAAC7B,KAAKM,GAAG;YACjD,IAAIwB,SAAS9B,KAAKM,GAAG,EACnB;YAGFyM,EAAEO,cAAc;YAChBP,EAAEQ,eAAe;YACjB,IAAInM,cAAc,UAAUI,cAAc,OAAO;cAC/C,sBAAU,EAAES,IAAIC,OAAO;cACvB,6BAAiB,EAAED,IAAIC,OAAO,EAAE;gBAACsL,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;cAAC;YAClF,OAAO;cACLgL,OAAOC,WAAW,GAAGlL,IAAIC,OAAO;cAChCwK,YAAYlL,cAAc,QACtB0L,OAAOL,UAAU,KACjBD,2BAAKM,OAAO;cAChB,IAAIR,WAAW;gBACb,sBAAW,EAACA;gBACZ,6BAAkB,EAACA,WAAW;kBAACc,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;gBAAC;cAChF;YACF;UACF;UACA;QACF;MACA,KAAK;QAAc;UACjB,IAAIuL,aAAYjM,cAAc,QAC1B0L,OAAOG,YAAY,KACnBH,OAAOE,QAAQ,EAAsB;UAEzC,IAAIhM,cAAc,WAAWqM,eAAcxL,IAAIC,OAAO,EACpDuL,aAAY,IAAI;UAGlB,IAAIA,YAAW;YACbV,EAAEO,cAAc;YAChBP,EAAEQ,eAAe;YACjB,sBAAW,EAACE;YACZ,6BAAkB,EAACA,YAAW;cAACD,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;YAAC;UAChF,OAAO;YACL,IAAIN,OAAO0I,iBAAiBhJ,aAAa,CAACtB,KAAKM,GAAG;YAClD,IAAIsB,SAAS5B,KAAKM,GAAG,EACnB;YAGFyM,EAAEO,cAAc;YAChBP,EAAEQ,eAAe;YACjB,IAAInM,cAAc,UAAUI,cAAc,OAAO;cAC/C,sBAAU,EAAES,IAAIC,OAAO;cACvB,6BAAiB,EAAED,IAAIC,OAAO,EAAE;gBAACsL,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;cAAC;YAClF,OAAO;cACLgL,OAAOC,WAAW,GAAGlL,IAAIC,OAAO;cAChCuL,aAAYjM,cAAc,QACtBoL,2BAAKM,UACLA,OAAOL,UAAU,EAAsB;cAC3C,IAAIY,YAAW;gBACb,sBAAW,EAACA;gBACZ,6BAAkB,EAACA,YAAW;kBAACD,mBAAmB,0BAAe,EAACvL,IAAIC,OAAO;gBAAC;cAChF;YACF;UACF;UACA;QACF;MACA,KAAK;MACL,KAAK;QACH;QACA;QACA;QACA,IAAI,CAAC6K,EAAEW,MAAM,IAAIzL,IAAIC,OAAO,CAACqK,QAAQ,CAACQ,EAAEE,MAAM,GAAc;UAC1DF,EAAEQ,eAAe;UACjBR,EAAEO,cAAc;UAChBrL,IAAIC,OAAO,CAACyL,aAAa,CAACC,aAAa,CACrC,IAAIC,cAAcd,EAAEe,WAAW,CAAC7N,IAAI,EAAE8M,EAAEe,WAAW;QAEvD;QACA;IAAM;EAEZ;EAEA;EACA;EACA,IAAIC,UAAWhB,KAAM;IACnB,IAAIA,EAAEE,MAAM,KAAKhL,IAAIC,OAAO,EAAE;MAC5B;MACA;MACA;MACA;MACA;MACA;MACA,IAAI,CAAC,yBAAc,GAAD,EAChBwF,MAAMK,gBAAgB,CAACiG,aAAa,CAAChO,KAAKM,GAAG;MAE/C;IACF;IAEA;IACA;IACA2N,sBAAsB,MAAM;MAC1B,IAAI7M,cAAc,WAAWoL,SAASC,aAAa,KAAKxK,IAAIC,OAAO,EACjEmK;IAEJ;EACF;EAEA,IAAI6B,gBAA+B,qBAAS,EAAEnC,WAAW;IACvDT,MAAM;sBACNwB;aACAiB;EACF;MAGoCI;EADpC,IAAI9D,eACF6D,aAAa,CAAC,gBAAgB,GAAG,CAAC,uBAAKE,QAAQ,cAAbD,6CAAiBnO,KAAKmB,KAAK,IAAI,GAAG;EAGtE,OAAO;mBACL+M;eACAlC;EACF;AACF;AAEA,SAASY,2BAAKM,MAAkB,EAAE;EAChC,IAAItL;EACJ,IAAIyM;EACJ,GAAG;IACDA,OAAOnB,OAAOoB,SAAS;IACvB,IAAID,MACFzM,OAAOyM;EAEX,SAASA;EACT,OAAOzM;AACT;ACzOO,SAAS2M,0CAAyD9G,KAAqC,EAAEC,KAAsB,EAA6B;EACjK,IAAI;IAAApH,KAACA;EAAG,CAAC,GAAGmH;EAEZ,IAAI+G,UAAU9G,MAAMK,gBAAgB;EACpC,IAAI0G,aAAa,gBAAK,GAAD;EACrB,IAAIxC,aAAa,CAACvE,MAAMK,gBAAgB,CAAC2G,aAAa,CAACpO;EACvD,IAAI4L,aAAaxE,MAAMK,gBAAgB,CAACmE,UAAU,CAAC5L;EAEnD,IAAIqO,WAAW,MAAMH,QAAQI,MAAM,CAACtO;EAEpC,MAAMuH,kBAAkB,sCAA0B,GAAE,gEAAY,CAAD;EAE/D,OAAO;IACLgH,eAAe;MACb7D,IAAIyD;MACJ,cAAc5G,gBAAgBmB,MAAM,CAAC;kBACrCkD;kBACAD;gBACA0C;IACF;EACF;AACF","names":["$d1c300d9c497e402$export$de9feff04fda126e","isCell","node","type","isRow","findPreviousKey","fromKey","pred","key","collection","getKeyBefore","getLastKey","item","getItem","findNextKey","getKeyAfter","getFirstKey","getKeyBelow","startItem","parentKey","childNodes","index","focusMode","getKeyAbove","getKeyRightOf","children","direction","length","parent","children1","next","getKeyLeftOf","prev","global","item1","ref","current","querySelector","getItemRect","_this_layout_getLayoutInfo","layout","getLayoutInfo","rect","offsetLeft","offsetTop","offsetWidth","offsetHeight","getPageHeight","_this_layout_virtualizer","_this_ref","virtualizer","visibleRect","height","getContentHeight","getContentSize","scrollHeight","getKeyPageAbove","itemRect","pageY","Math","max","maxY","y","getKeyPageBelow","pageHeight","min","nextKey","getKeyForSearch","search","collator","hasWrapped","textValue","substring","slice","compare","constructor","options","disabledKeys","$1af922eb41e03c8f$export$e6235c0d09b995d0","WeakMap","$682989befd4f478d$exports","args","formatter","plural","count","one","number","other","$f7fca02019afd941$exports","$8f86f40be75387f1$exports","$db24ba43c8d652ee$exports","$f8f1e72c8b5447d6$exports","$9a73ed2983c3ab0b$exports","$583de0b3587601b9$exports","$147159c978043442$exports","$5cbb62c8a19173ac$exports","$a33d71dc804cc59e$exports","$92d800447793d084$exports","$fe732cdb32124ea8$exports","$e41234e934efb4f5$exports","$1b0393182473bf9e$exports","$2eed782c1c110ce7$exports","$8b5d459f86e9b23c$exports","$1949c3ad17295fd4$exports","$f5e3df4dc8aa7b54$exports","$9dd86690a5c2b2c5$exports","$843964c3bf9a7d24$exports","$73f50e845f9ef3b4$exports","$87f92a7e077514b2$exports","$c28c98d58ee9ff6f$exports","$b6b1503b17b2254d$exports","$8bdaeb71e50c3e1a$exports","$ec2b852dd7c3d1f2$exports","$79e6d900d6a4f82d$exports","$f4c1f0d5d4d03d80$exports","$46252cd87269b10b$exports","$d4d5d8dab362555c$exports","$3d55d1f97c377e83$exports","$5368512f1c703a3f$exports","$f1316b1074463583$exports","$7e60654723031b6f$exports","$1dbe5ffd32adb38c$exports","$92599c3fd427b763$export$137e594ef3218a10","props","state","getRowText","_state_collection_getItem","stringFormatter","selection","selectionManager","rawSelection","lastSelection","_lastSelection_current","isFocused","addedKeys","$92599c3fd427b763$var$diffSelection","removedKeys","isReplace","selectionBehavior","messages","selectedKeys","size","keys","value","currentSelectionText","push","format","addedText","removedText","selectionMode","join","a","b","res","Set","has","add","$5b9b5b5723db6ae1$export$be42ebdab07ae4c2","modality","shouldLongPress","window","interactionDescription","message","undefined","hasItemActions","descriptionProps","$83c6e2eafa584c67$export$f6b86a04e5d66d90","isVirtualized","keyboardDelegate","scrollRef","onRowAction","onCellAction","console","warn","usage","sensitivity","delegate","collectionProps","id","set","actions","domProps","labelable","gridProps","role","isKeyboardNavigationDisabled","columnCount","$e45487f8ba1cbdbf$export$d3037f5d3f3e51bf","rowGroupProps","$4159a7a9cbb0cc18$export$96357d5a73f686fa","shouldSelectOnPressUp","onAction","get","itemProps","isPressed","isDisabled","isSelected","rowProps","$ab90dcbc1b5466d0$export$c7e10bfc0c59f67c","focus","treeWalker","contains","document","activeElement","focusable","childFocusStrategy","$ab90dcbc1b5466d0$var$last","firstChild","onKeyDownCapture","e","currentTarget","target","walker","currentNode","nextNode","previousNode","preventDefault","stopPropagation","containingElement","focusable1","altKey","parentElement","dispatchEvent","KeyboardEvent","nativeEvent","onFocus","setFocusedKey","requestAnimationFrame","gridCellProps","_node_colIndex","colIndex","last","lastChild","$7cb39d07f245a780$export$70e2eed1a92976ad","manager","checkboxId","canSelectItem","onChange","select","checkboxProps"],"sources":["packages/@react-aria/grid/src/index.ts","packages/@react-aria/grid/src/GridKeyboardDelegate.ts","packages/@react-aria/grid/src/useGrid.ts","packages/@react-aria/grid/src/utils.ts","packages/@react-aria/grid/src/useGridSelectionAnnouncement.ts","packages/@react-aria/grid/intl/ar-AE.json","packages/@react-aria/grid/intl/bg-BG.json","packages/@react-aria/grid/intl/cs-CZ.json","packages/@react-aria/grid/intl/da-DK.json","packages/@react-aria/grid/intl/de-DE.json","packages/@react-aria/grid/intl/el-GR.json","packages/@react-aria/grid/intl/en-US.json","packages/@react-aria/grid/intl/es-ES.json","packages/@react-aria/grid/intl/et-EE.json","packages/@react-aria/grid/intl/fi-FI.json","packages/@react-aria/grid/intl/fr-FR.json","packages/@react-aria/grid/intl/he-IL.json","packages/@react-aria/grid/intl/hr-HR.json","packages/@react-aria/grid/intl/hu-HU.json","packages/@react-aria/grid/intl/it-IT.json","packages/@react-aria/grid/intl/ja-JP.json","packages/@react-aria/grid/intl/ko-KR.json","packages/@react-aria/grid/intl/lt-LT.json","packages/@react-aria/grid/intl/lv-LV.json","packages/@react-aria/grid/intl/nb-NO.json","packages/@react-aria/grid/intl/nl-NL.json","packages/@react-aria/grid/intl/pl-PL.json","packages/@react-aria/grid/intl/pt-BR.json","packages/@react-aria/grid/intl/pt-PT.json","packages/@react-aria/grid/intl/ro-RO.json","packages/@react-aria/grid/intl/ru-RU.json","packages/@react-aria/grid/intl/sk-SK.json","packages/@react-aria/grid/intl/sl-SI.json","packages/@react-aria/grid/intl/sr-SP.json","packages/@react-aria/grid/intl/sv-SE.json","packages/@react-aria/grid/intl/tr-TR.json","packages/@react-aria/grid/intl/uk-UA.json","packages/@react-aria/grid/intl/zh-CN.json","packages/@react-aria/grid/intl/zh-TW.json","packages/@react-aria/grid/intl/*.js","packages/@react-aria/grid/src/useHighlightSelectionDescription.ts","packages/@react-aria/grid/src/useGridRowGroup.ts","packages/@react-aria/grid/src/useGridRow.ts","packages/@react-aria/grid/src/useGridCell.ts","packages/@react-aria/grid/src/useGridSelectionCheckbox.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nexport {useGrid} from './useGrid';\nexport {useGridRowGroup} from './useGridRowGroup';\nexport {useGridRow} from './useGridRow';\nexport {useGridCell} from './useGridCell';\nexport {useGridSelectionCheckbox} from './useGridSelectionCheckbox';\nexport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nexport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\n\nexport type {GridProps, GridAria} from './useGrid';\nexport type {GridCellAria, GridCellProps} from './useGridCell';\nexport type {GridRowGroupAria} from './useGridRowGroup';\nexport type {GridRowProps, GridRowAria} from './useGridRow';\nexport type {GridKeyboardDelegateOptions} from './GridKeyboardDelegate';\nexport type {AriaGridSelectionCheckboxProps, GridSelectionCheckboxAria} from './useGridSelectionCheckbox';\nexport type {HighlightSelectionDescriptionProps} from './useHighlightSelectionDescription';\nexport type {GridSelectionAnnouncementProps} from './useGridSelectionAnnouncement';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction, KeyboardDelegate, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {Key, RefObject} from 'react';\nimport {Layout, Rect} from '@react-stately/virtualizer';\n\nexport interface GridKeyboardDelegateOptions<T, C> {\n  collection: C,\n  disabledKeys: Set<Key>,\n  ref?: RefObject<HTMLElement>,\n  direction: Direction,\n  collator?: Intl.Collator,\n  layout?: Layout<Node<T>>,\n  focusMode?: 'row' | 'cell'\n}\n\nexport class GridKeyboardDelegate<T, C extends GridCollection<T>> implements KeyboardDelegate {\n  collection: C;\n  protected disabledKeys: Set<Key>;\n  protected ref: RefObject<HTMLElement>;\n  protected direction: Direction;\n  protected collator: Intl.Collator;\n  protected layout: Layout<Node<T>>;\n  protected focusMode;\n\n  constructor(options: GridKeyboardDelegateOptions<T, C>) {\n    this.collection = options.collection;\n    this.disabledKeys = options.disabledKeys;\n    this.ref = options.ref;\n    this.direction = options.direction;\n    this.collator = options.collator;\n    this.layout = options.layout;\n    this.focusMode = options.focusMode || 'row';\n  }\n\n  protected isCell(node: Node<T>) {\n    return node.type === 'cell';\n  }\n\n  protected isRow(node: Node<T>) {\n    return node.type === 'row' || node.type === 'item';\n  }\n\n  protected findPreviousKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyBefore(fromKey)\n      : this.collection.getLastKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n  }\n\n  protected findNextKey(fromKey?: Key, pred?: (item: Node<T>) => boolean) {\n    let key = fromKey != null\n      ? this.collection.getKeyAfter(fromKey)\n      : this.collection.getFirstKey();\n\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (!pred || pred(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n  }\n\n  getKeyBelow(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus was on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the next item\n    key = this.findNextKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the next row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the next row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    let startItem = this.collection.getItem(key);\n    if (!startItem) {\n      return;\n    }\n\n    // If focus is on a cell, start searching from the parent row\n    if (this.isCell(startItem)) {\n      key = startItem.parentKey;\n    }\n\n    // Find the previous item\n    key = this.findPreviousKey(key);\n    if (key != null) {\n      // If focus was on a cell, focus the cell with the same index in the previous row.\n      if (this.isCell(startItem)) {\n        let item = this.collection.getItem(key);\n        return [...item.childNodes][startItem.index].key;\n      }\n\n      // Otherwise, focus the previous row\n      if (this.focusMode === 'row') {\n        return key;\n      }\n    }\n  }\n\n  getKeyRightOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the first child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[children.length - 1].key\n        : children[0].key;\n    }\n\n    // If focus is on a cell, focus the next cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let next = this.direction === 'rtl'\n        ? children[item.index - 1]\n        : children[item.index + 1];\n\n      if (next) {\n        return next.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getFirstKey(key) : this.getLastKey(key);\n    }\n  }\n\n  getKeyLeftOf(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      return;\n    }\n\n    // If focus is on a row, focus the last child cell.\n    if (this.isRow(item)) {\n      let children = [...item.childNodes];\n      return this.direction === 'rtl'\n        ? children[0].key\n        : children[children.length - 1].key;\n    }\n\n    // If focus is on a cell, focus the previous cell if any,\n    // otherwise focus the parent row.\n    if (this.isCell(item)) {\n      let parent = this.collection.getItem(item.parentKey);\n      let children = [...parent.childNodes];\n      let prev = this.direction === 'rtl'\n        ? children[item.index + 1]\n        : children[item.index - 1];\n\n      if (prev) {\n        return prev.key;\n      }\n\n      // focus row only if focusMode is set to row\n      if (this.focusMode === 'row') {\n        return item.parentKey;\n      }\n\n      return this.direction === 'rtl' ? this.getLastKey(key) : this.getFirstKey(key);\n    }\n  }\n\n  getFirstKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the first cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        return [...parent.childNodes][0].key;\n      }\n    }\n\n    // Find the first row\n    key = this.findNextKey();\n\n    // If global flag is set (or if focus mode is cell), focus the first cell in the first row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      key = [...item.childNodes][0].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  getLastKey(key?: Key, global?: boolean) {\n    let item: Node<T>;\n    if (key != null) {\n      item = this.collection.getItem(key);\n      if (!item) {\n        return;\n      }\n\n      // If global flag is not set, and a cell is currently focused,\n      // move focus to the last cell in the parent row.\n      if (this.isCell(item) && !global) {\n        let parent = this.collection.getItem(item.parentKey);\n        let children = [...parent.childNodes];\n        return children[children.length - 1].key;\n      }\n    }\n\n    // Find the last row\n    key = this.findPreviousKey();\n\n    // If global flag is set (or if focus mode is cell), focus the last cell in the last row.\n    if ((key != null && item && this.isCell(item) && global) || this.focusMode === 'cell') {\n      let item = this.collection.getItem(key);\n      let children = [...item.childNodes];\n      key = children[children.length - 1].key;\n    }\n\n    // Otherwise, focus the row itself.\n    return key;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return this.ref.current.querySelector(`[data-key=\"${key}\"]`);\n  }\n\n  private getItemRect(key: Key): Rect {\n    if (this.layout) {\n      return this.layout.getLayoutInfo(key)?.rect;\n    }\n\n    let item = this.getItem(key);\n    if (item) {\n      return new Rect(item.offsetLeft, item.offsetTop, item.offsetWidth, item.offsetHeight);\n    }\n  }\n\n  private getPageHeight(): number {\n    if (this.layout) {\n      return this.layout.virtualizer?.visibleRect.height;\n    }\n\n    return this.ref?.current?.offsetHeight;\n  }\n\n  private getContentHeight(): number {\n    if (this.layout) {\n      return this.layout.getContentSize().height;\n    }\n\n    return this.ref?.current?.scrollHeight;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let itemRect = this.getItemRect(key);\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageY = Math.max(0, itemRect.maxY - this.getPageHeight());\n\n    while (itemRect && itemRect.y > pageY) {\n      key = this.getKeyAbove(key);\n      itemRect = this.getItemRect(key);\n    }\n\n    return key;\n  }\n\n  getKeyPageBelow(key: Key) {\n    let itemRect = this.getItemRect(key);\n\n    if (!itemRect) {\n      return null;\n    }\n\n    let pageHeight = this.getPageHeight();\n    let pageY = Math.min(this.getContentHeight(), itemRect.y + pageHeight);\n\n    while (itemRect && itemRect.maxY < pageY) {\n      let nextKey = this.getKeyBelow(key);\n      itemRect = this.getItemRect(nextKey);\n\n      // Guard against case where maxY of the last key is barely less than pageY due to rounding\n      // and thus it attempts to set key to null\n      if (nextKey != null) {\n        key = nextKey;\n      }\n    }\n\n    return key;\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey ?? this.getFirstKey();\n\n    // If the starting key is a cell, search from its parent row.\n    let startItem = collection.getItem(key);\n    if (startItem.type === 'cell') {\n      key = startItem.parentKey;\n    }\n\n    let hasWrapped = false;\n    while (key != null) {\n      let item = collection.getItem(key);\n\n      // check row text value for match\n      if (item.textValue) {\n        let substring = item.textValue.slice(0, search.length);\n        if (this.collator.compare(substring, search) === 0) {\n          if (this.isRow(item) && this.focusMode === 'cell') {\n            return [...item.childNodes][0].key;\n          }\n\n          return item.key;\n        }\n      }\n\n      key = this.findNextKey(key);\n\n      // Wrap around when reaching the end of the collection\n      if (key == null && !hasWrapped) {\n        key = this.getFirstKey();\n        hasWrapped = true;\n      }\n    }\n\n    return null;\n  }\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, KeyboardDelegate} from '@react-types/shared';\nimport {filterDOMProps, mergeProps, useId} from '@react-aria/utils';\nimport {GridCollection} from '@react-types/grid';\nimport {GridKeyboardDelegate} from './GridKeyboardDelegate';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {Key, RefObject, useMemo} from 'react';\nimport {useCollator, useLocale} from '@react-aria/i18n';\nimport {useGridSelectionAnnouncement} from './useGridSelectionAnnouncement';\nimport {useHighlightSelectionDescription} from './useHighlightSelectionDescription';\nimport {useSelectableCollection} from '@react-aria/selection';\n\nexport interface GridProps extends DOMProps, AriaLabelingProps {\n  /** Whether the grid uses virtual scrolling. */\n  isVirtualized?: boolean,\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * Whether initial grid focus should be placed on the grid row or grid cell.\n   * @default 'row'\n   */\n  focusMode?: 'row' | 'cell',\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string,\n  /**\n   * The ref attached to the scrollable body. Used to provided automatic scrolling on item focus for non-virtualized grids.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /** Handler that is called when a user performs an action on the row. */\n  onRowAction?: (key: Key) => void,\n  /** Handler that is called when a user performs an action on the cell. */\n  onCellAction?: (key: Key) => void\n}\n\nexport interface GridAria {\n  /** Props for the grid element. */\n  gridProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a grid component.\n * A grid displays data in one or more rows and columns and enables a user to navigate its contents via directional navigation keys.\n * @param props - Props for the grid.\n * @param state - State for the grid, as returned by `useGridState`.\n * @param ref - The ref attached to the grid element.\n */\nexport function useGrid<T>(props: GridProps, state: GridState<T, GridCollection<T>>, ref: RefObject<HTMLElement>): GridAria {\n  let {\n    isVirtualized,\n    keyboardDelegate,\n    focusMode,\n    scrollRef,\n    getRowText,\n    onRowAction,\n    onCellAction\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let {direction} = useLocale();\n  let delegate = useMemo(() => keyboardDelegate || new GridKeyboardDelegate({\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    ref,\n    direction,\n    collator,\n    focusMode\n  }), [keyboardDelegate, state.collection, state.disabledKeys, ref, direction, collator, focusMode]);\n\n  let {collectionProps} = useSelectableCollection({\n    ref,\n    selectionManager: state.selectionManager,\n    keyboardDelegate: delegate,\n    isVirtualized,\n    scrollRef\n  });\n\n  let id = useId(props.id);\n  gridMap.set(state, {keyboardDelegate: delegate, actions: {onRowAction, onCellAction}});\n\n  let descriptionProps = useHighlightSelectionDescription({\n    selectionManager: state.selectionManager,\n    hasItemActions: !!(onRowAction || onCellAction)\n  });\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let gridProps: DOMAttributes = mergeProps(\n    domProps,\n    {\n      role: 'grid',\n      id,\n      'aria-multiselectable': state.selectionManager.selectionMode === 'multiple' ? 'true' : undefined\n    },\n    state.isKeyboardNavigationDisabled ? {} : collectionProps,\n    descriptionProps\n  );\n\n  if (isVirtualized) {\n    gridProps['aria-rowcount'] = state.collection.size;\n    gridProps['aria-colcount'] = state.collection.columnCount;\n  }\n\n  useGridSelectionAnnouncement({getRowText}, state);\n  return {\n    gridProps\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {GridCollection} from '@react-types/grid';\nimport type {GridState} from '@react-stately/grid';\nimport {Key} from 'react';\nimport type {KeyboardDelegate} from '@react-types/shared';\n\ninterface GridMapShared {\n  keyboardDelegate: KeyboardDelegate,\n  actions: {\n    onRowAction: (key: Key) => void,\n    onCellAction: (key: Key) => void\n  }\n}\n\n// Used to share:\n// keyboard delegate between useGrid and useGridCell\n// onRowAction/onCellAction across hooks\nexport const gridMap = new WeakMap<GridState<unknown, GridCollection<unknown>>, GridMapShared>();\n","/*\n * Copyright 2022 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {announce} from '@react-aria/live-announcer';\nimport {Collection, Node, Selection} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key, useRef} from 'react';\nimport {SelectionManager} from '@react-stately/selection';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useUpdateEffect} from '@react-aria/utils';\n\nexport interface GridSelectionAnnouncementProps {\n  /**\n   * A function that returns the text that should be announced by assistive technology when a row is added or removed from selection.\n   * @default (key) => state.collection.getItem(key)?.textValue\n   */\n  getRowText?: (key: Key) => string\n}\n\ninterface GridSelectionState<T> {\n  /** A collection of items in the grid. */\n  collection: Collection<Node<T>>,\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\nexport function useGridSelectionAnnouncement<T>(props: GridSelectionAnnouncementProps, state: GridSelectionState<T>) {\n  let {\n    getRowText = (key) => state.collection.getItem(key)?.textValue\n  } = props;\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  // Many screen readers do not announce when items in a grid are selected/deselected.\n  // We do this using an ARIA live region.\n  let selection = state.selectionManager.rawSelection;\n  let lastSelection = useRef(selection);\n  useUpdateEffect(() => {\n    if (!state.selectionManager.isFocused) {\n      lastSelection.current = selection;\n\n      return;\n    }\n\n    let addedKeys = diffSelection(selection, lastSelection.current);\n    let removedKeys = diffSelection(lastSelection.current, selection);\n\n    // If adding or removing a single row from the selection, announce the name of that item.\n    let isReplace = state.selectionManager.selectionBehavior === 'replace';\n    let messages = [];\n\n    if ((state.selectionManager.selectedKeys.size === 1 && isReplace)) {\n      if (state.collection.getItem(state.selectionManager.selectedKeys.keys().next().value)) {\n        let currentSelectionText = getRowText(state.selectionManager.selectedKeys.keys().next().value);\n        if (currentSelectionText) {\n          messages.push(stringFormatter.format('selectedItem', {item: currentSelectionText}));\n        }\n      }\n    } else if (addedKeys.size === 1 && removedKeys.size === 0) {\n      let addedText = getRowText(addedKeys.keys().next().value);\n      if (addedText) {\n        messages.push(stringFormatter.format('selectedItem', {item: addedText}));\n      }\n    } else if (removedKeys.size === 1 && addedKeys.size === 0) {\n      if (state.collection.getItem(removedKeys.keys().next().value)) {\n        let removedText = getRowText(removedKeys.keys().next().value);\n        if (removedText) {\n          messages.push(stringFormatter.format('deselectedItem', {item: removedText}));\n        }\n      }\n    }\n\n    // Announce how many items are selected, except when selecting the first item.\n    if (state.selectionManager.selectionMode === 'multiple') {\n      if (messages.length === 0 || selection === 'all' || selection.size > 1 || lastSelection.current === 'all' || lastSelection.current?.size > 1) {\n        messages.push(selection === 'all'\n          ? stringFormatter.format('selectedAll')\n          : stringFormatter.format('selectedCount', {count: selection.size})\n        );\n      }\n    }\n\n    if (messages.length > 0) {\n      announce(messages.join(' '));\n    }\n\n    lastSelection.current = selection;\n  }, [selection]);\n}\n\nfunction diffSelection(a: Selection, b: Selection): Set<Key> {\n  let res = new Set<Key>();\n  if (a === 'all' || b === 'all') {\n    return res;\n  }\n\n  for (let key of a.keys()) {\n    if (!b.has(key)) {\n      res.add(key);\n    }\n  }\n\n  return res;\n}\n","{\n  \"deselectedItem\": \"{item} غير المحدد\",\n  \"longPressToSelect\": \"اضغط مطولًا للدخول إلى وضع التحديد.\",\n  \"select\": \"تحديد\",\n  \"selectedAll\": \"جميع العناصر المحددة.\",\n  \"selectedCount\": \"{count, plural, =0 {لم يتم تحديد عناصر} one {# عنصر محدد} other {# عنصر محدد}}.\",\n  \"selectedItem\": \"{item} المحدد\"\n}\n","{\n  \"deselectedItem\": \"{item} не е избран.\",\n  \"longPressToSelect\": \"Натиснете и задръжте за да влезете в избирателен режим.\",\n  \"select\": \"Изберете\",\n  \"selectedAll\": \"Всички елементи са избрани.\",\n  \"selectedCount\": \"{count, plural, =0 {Няма избрани елементи} one {# избран елемент} other {# избрани елементи}}.\",\n  \"selectedItem\": \"{item} избран.\"\n}\n","{\n  \"deselectedItem\": \"Položka {item} není vybrána.\",\n  \"longPressToSelect\": \"Dlouhým stisknutím přejdete do režimu výběru.\",\n  \"select\": \"Vybrat\",\n  \"selectedAll\": \"Vybrány všechny položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Nevybrány žádné položky} one {Vybrána # položka} other {Vybráno # položek}}.\",\n  \"selectedItem\": \"Vybrána položka {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} ikke valgt.\",\n  \"longPressToSelect\": \"Lav et langt tryk for at aktivere valgtilstand.\",\n  \"select\": \"Vælg\",\n  \"selectedAll\": \"Alle elementer valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer valgt} one {# element valgt} other {# elementer valgt}}.\",\n  \"selectedItem\": \"{item} valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} nicht ausgewählt.\",\n  \"longPressToSelect\": \"Gedrückt halten, um Auswahlmodus zu öffnen.\",\n  \"select\": \"Auswählen\",\n  \"selectedAll\": \"Alle Elemente ausgewählt.\",\n  \"selectedCount\": \"{count, plural, =0 {Keine Elemente ausgewählt} one {# Element ausgewählt} other {# Elemente ausgewählt}}.\",\n  \"selectedItem\": \"{item} ausgewählt.\"\n}\n","{\n  \"deselectedItem\": \"Δεν επιλέχθηκε το στοιχείο {item}.\",\n  \"longPressToSelect\": \"Πατήστε παρατεταμένα για να μπείτε σε λειτουργία επιλογής.\",\n  \"select\": \"Επιλογή\",\n  \"selectedAll\": \"Επιλέχθηκαν όλα τα στοιχεία.\",\n  \"selectedCount\": \"{count, plural, =0 {Δεν επιλέχθηκαν στοιχεία} one {Επιλέχθηκε # στοιχείο} other {Επιλέχθηκαν # στοιχεία}}.\",\n  \"selectedItem\": \"Επιλέχθηκε το στοιχείο {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} not selected.\",\n  \"select\": \"Select\",\n  \"selectedCount\": \"{count, plural, =0 {No items selected} one {# item selected} other {# items selected}}.\",\n  \"selectedAll\": \"All items selected.\",\n  \"selectedItem\": \"{item} selected.\",\n  \"longPressToSelect\": \"Long press to enter selection mode.\"\n}\n","{\n  \"deselectedItem\": \"{item} no seleccionado.\",\n  \"longPressToSelect\": \"Mantenga pulsado para abrir el modo de selección.\",\n  \"select\": \"Seleccionar\",\n  \"selectedAll\": \"Todos los elementos seleccionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Ningún elemento seleccionado} one {# elemento seleccionado} other {# elementos seleccionados}}.\",\n  \"selectedItem\": \"{item} seleccionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} pole valitud.\",\n  \"longPressToSelect\": \"Valikurežiimi sisenemiseks vajutage pikalt.\",\n  \"select\": \"Vali\",\n  \"selectedAll\": \"Kõik üksused valitud.\",\n  \"selectedCount\": \"{count, plural, =0 {Üksusi pole valitud} one {# üksus valitud} other {# üksust valitud}}.\",\n  \"selectedItem\": \"{item} valitud.\"\n}\n","{\n  \"deselectedItem\": \"Kohdetta {item} ei valittu.\",\n  \"longPressToSelect\": \"Siirry valintatilaan painamalla pitkään.\",\n  \"select\": \"Valitse\",\n  \"selectedAll\": \"Kaikki kohteet valittu.\",\n  \"selectedCount\": \"{count, plural, =0 {Ei yhtään kohdetta valittu} one {# kohde valittu} other {# kohdetta valittu}}.\",\n  \"selectedItem\": \"{item} valittu.\"\n}\n","{\n  \"deselectedItem\": \"{item} non sélectionné.\",\n  \"longPressToSelect\": \"Appuyez de manière prolongée pour passer en mode de sélection.\",\n  \"select\": \"Sélectionner\",\n  \"selectedAll\": \"Tous les éléments sélectionnés.\",\n  \"selectedCount\": \"{count, plural, =0 {Aucun élément sélectionné} one {# élément sélectionné} other {# éléments sélectionnés}}.\",\n  \"selectedItem\": \"{item} sélectionné.\"\n}\n","{\n  \"deselectedItem\": \"{item} לא נבחר.\",\n  \"longPressToSelect\": \"הקשה ארוכה לכניסה למצב בחירה.\",\n  \"select\": \"בחר\",\n  \"selectedAll\": \"כל הפריטים נבחרו.\",\n  \"selectedCount\": \"{count, plural, =0 {לא נבחרו פריטים} one {פריט # נבחר} other {# פריטים נבחרו}}.\",\n  \"selectedItem\": \"{item} נבחר.\"\n}\n","{\n  \"deselectedItem\": \"Stavka {item} nije odabrana.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u način odabira.\",\n  \"select\": \"Odaberite\",\n  \"selectedAll\": \"Odabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije odabrana nijedna stavka} one {Odabrana je # stavka} other {Odabrano je # stavki}}.\",\n  \"selectedItem\": \"Stavka {item} je odabrana.\"\n}\n","{\n  \"deselectedItem\": \"{item} nincs kijelölve.\",\n  \"longPressToSelect\": \"Nyomja hosszan a kijelöléshez.\",\n  \"select\": \"Kijelölés\",\n  \"selectedAll\": \"Az összes elem kijelölve.\",\n  \"selectedCount\": \"{count, plural, =0 {Egy elem sincs kijelölve} one {# elem kijelölve} other {# elem kijelölve}}.\",\n  \"selectedItem\": \"{item} kijelölve.\"\n}\n","{\n  \"deselectedItem\": \"{item} non selezionato.\",\n  \"longPressToSelect\": \"Premi a lungo per passare alla modalità di selezione.\",\n  \"select\": \"Seleziona\",\n  \"selectedAll\": \"Tutti gli elementi selezionati.\",\n  \"selectedCount\": \"{count, plural, =0 {Nessun elemento selezionato} one {# elemento selezionato} other {# elementi selezionati}}.\",\n  \"selectedItem\": \"{item} selezionato.\"\n}\n","{\n  \"deselectedItem\": \"{item} が選択されていません。\",\n  \"longPressToSelect\": \"長押しして選択モードを開きます。\",\n  \"select\": \"選択\",\n  \"selectedAll\": \"すべての項目を選択しました。\",\n  \"selectedCount\": \"{count, plural, =0 {項目が選択されていません} one {# 項目を選択しました} other {# 項目を選択しました}}。\",\n  \"selectedItem\": \"{item} を選択しました。\"\n}\n","{\n  \"deselectedItem\": \"{item}이(가) 선택되지 않았습니다.\",\n  \"longPressToSelect\": \"선택 모드로 들어가려면 길게 누르십시오.\",\n  \"select\": \"선택\",\n  \"selectedAll\": \"모든 항목이 선택되었습니다.\",\n  \"selectedCount\": \"{count, plural, =0 {선택된 항목이 없습니다} one {#개 항목이 선택되었습니다} other {#개 항목이 선택되었습니다}}.\",\n  \"selectedItem\": \"{item}이(가) 선택되었습니다.\"\n}\n","{\n  \"deselectedItem\": \"{item} nepasirinkta.\",\n  \"longPressToSelect\": \"Norėdami įjungti pasirinkimo režimą, paspauskite ir palaikykite.\",\n  \"select\": \"Pasirinkti\",\n  \"selectedAll\": \"Pasirinkti visi elementai.\",\n  \"selectedCount\": \"{count, plural, =0 {Nepasirinktas nė vienas elementas} one {Pasirinktas # elementas} other {Pasirinkta elementų: #}}.\",\n  \"selectedItem\": \"Pasirinkta: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Vienums {item} nav atlasīts.\",\n  \"longPressToSelect\": \"Ilgi turiet nospiestu. lai ieslēgtu atlases režīmu.\",\n  \"select\": \"Atlasīt\",\n  \"selectedAll\": \"Atlasīti visi vienumi.\",\n  \"selectedCount\": \"{count, plural, =0 {Nav atlasīts neviens vienums} one {Atlasīto vienumu skaits: #} other {Atlasīto vienumu skaits: #}}.\",\n  \"selectedItem\": \"Atlasīts vienums {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} er ikke valgt.\",\n  \"longPressToSelect\": \"Bruk et langt trykk for å gå inn i valgmodus.\",\n  \"select\": \"Velg\",\n  \"selectedAll\": \"Alle elementer er valgt.\",\n  \"selectedCount\": \"{count, plural, =0 {Ingen elementer er valgt} one {# element er valgt} other {# elementer er valgt}}.\",\n  \"selectedItem\": \"{item} er valgt.\"\n}\n","{\n  \"deselectedItem\": \"{item} niet geselecteerd.\",\n  \"longPressToSelect\": \"Druk lang om de selectiemodus te openen.\",\n  \"select\": \"Selecteren\",\n  \"selectedAll\": \"Alle items geselecteerd.\",\n  \"selectedCount\": \"{count, plural, =0 {Geen items geselecteerd} one {# item geselecteerd} other {# items geselecteerd}}.\",\n  \"selectedItem\": \"{item} geselecteerd.\"\n}\n","{\n  \"deselectedItem\": \"Nie zaznaczono {item}.\",\n  \"longPressToSelect\": \"Naciśnij i przytrzymaj, aby wejść do trybu wyboru.\",\n  \"select\": \"Zaznacz\",\n  \"selectedAll\": \"Wszystkie zaznaczone elementy.\",\n  \"selectedCount\": \"{count, plural, =0 {Nie zaznaczono żadnych elementów} one {# zaznaczony element} other {# zaznaczonych elementów}}.\",\n  \"selectedItem\": \"Zaznaczono {item}.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Mantenha pressionado para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} não selecionado.\",\n  \"longPressToSelect\": \"Prima continuamente para entrar no modo de seleção.\",\n  \"select\": \"Selecionar\",\n  \"selectedAll\": \"Todos os itens selecionados.\",\n  \"selectedCount\": \"{count, plural, =0 {Nenhum item selecionado} one {# item selecionado} other {# itens selecionados}}.\",\n  \"selectedItem\": \"{item} selecionado.\"\n}\n","{\n  \"deselectedItem\": \"{item} neselectat.\",\n  \"longPressToSelect\": \"Apăsați lung pentru a intra în modul de selectare.\",\n  \"select\": \"Selectare\",\n  \"selectedAll\": \"Toate elementele selectate.\",\n  \"selectedCount\": \"{count, plural, =0 {Niciun element selectat} one {# element selectat} other {# elemente selectate}}.\",\n  \"selectedItem\": \"{item} selectat.\"\n}\n","{\n  \"deselectedItem\": \"{item} не выбрано.\",\n  \"longPressToSelect\": \"Нажмите и удерживайте для входа в режим выбора.\",\n  \"select\": \"Выбрать\",\n  \"selectedAll\": \"Выбраны все элементы.\",\n  \"selectedCount\": \"{count, plural, =0 {Нет выбранных элементов} one {# элемент выбран} other {# элементов выбрано}}.\",\n  \"selectedItem\": \"{item} выбрано.\"\n}\n","{\n  \"deselectedItem\": \"Nevybraté položky: {item}.\",\n  \"longPressToSelect\": \"Dlhším stlačením prejdite do režimu výberu.\",\n  \"select\": \"Vybrať\",\n  \"selectedAll\": \"Všetky vybraté položky.\",\n  \"selectedCount\": \"{count, plural, =0 {Žiadne vybraté položky} one {# vybratá položka} other {Počet vybratých položiek:#}}.\",\n  \"selectedItem\": \"Vybraté položky: {item}.\"\n}\n","{\n  \"deselectedItem\": \"Element {item} ni izbran.\",\n  \"longPressToSelect\": \"Za izbirni način pritisnite in dlje časa držite.\",\n  \"select\": \"Izberite\",\n  \"selectedAll\": \"Vsi elementi so izbrani.\",\n  \"selectedCount\": \"{count, plural, =0 {Noben element ni izbran} one {# element je izbran} other {# elementov je izbranih}}.\",\n  \"selectedItem\": \"Element {item} je izbran.\"\n}\n","{\n  \"deselectedItem\": \"{item} nije izabrano.\",\n  \"longPressToSelect\": \"Dugo pritisnite za ulazak u režim biranja.\",\n  \"select\": \"Izaberite\",\n  \"selectedAll\": \"Izabrane su sve stavke.\",\n  \"selectedCount\": \"{count, plural, =0 {Nije izabrana nijedna stavka} one {Izabrana je # stavka} other {Izabrano je # stavki}}.\",\n  \"selectedItem\": \"{item} je izabrano.\"\n}\n","{\n  \"deselectedItem\": \"{item} ej markerat.\",\n  \"longPressToSelect\": \"Tryck länge när du vill öppna väljarläge.\",\n  \"select\": \"Markera\",\n  \"selectedAll\": \"Alla markerade objekt.\",\n  \"selectedCount\": \"{count, plural, =0 {Inga markerade objekt} one {# markerat objekt} other {# markerade objekt}}.\",\n  \"selectedItem\": \"{item} markerat.\"\n}\n","{\n  \"deselectedItem\": \"{item} seçilmedi.\",\n  \"longPressToSelect\": \"Seçim moduna girmek için uzun basın.\",\n  \"select\": \"Seç\",\n  \"selectedAll\": \"Tüm ögeler seçildi.\",\n  \"selectedCount\": \"{count, plural, =0 {Hiçbir öge seçilmedi} one {# öge seçildi} other {# öge seçildi}}.\",\n  \"selectedItem\": \"{item} seçildi.\"\n}\n","{\n  \"deselectedItem\": \"{item} не вибрано.\",\n  \"longPressToSelect\": \"Виконайте довге натиснення, щоб перейти в режим вибору.\",\n  \"select\": \"Вибрати\",\n  \"selectedAll\": \"Усі елементи вибрано.\",\n  \"selectedCount\": \"{count, plural, =0 {Жодних елементів не вибрано} one {# елемент вибрано} other {Вибрано елементів: #}}.\",\n  \"selectedItem\": \"{item} вибрано.\"\n}\n","{\n  \"deselectedItem\": \"未选择 {item}。\",\n  \"longPressToSelect\": \"长按以进入选择模式。\",\n  \"select\": \"选择\",\n  \"selectedAll\": \"已选择所有项目。\",\n  \"selectedCount\": \"{count, plural, =0 {未选择项目} one {已选择 # 个项目} other {已选择 # 个项目}}。\",\n  \"selectedItem\": \"已选择 {item}。\"\n}\n","{\n  \"deselectedItem\": \"未選取「{item}」。\",\n  \"longPressToSelect\": \"長按以進入選擇模式。\",\n  \"select\": \"選取\",\n  \"selectedAll\": \"已選取所有項目。\",\n  \"selectedCount\": \"{count, plural, =0 {未選取任何項目} one {已選取 # 個項目} other {已選取 # 個項目}}。\",\n  \"selectedItem\": \"已選取「{item}」。\"\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps} from '@react-types/shared';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useDescription} from '@react-aria/utils';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface HighlightSelectionDescriptionProps {\n  selectionManager: MultipleSelectionManager,\n  hasItemActions?: boolean\n}\n\n/**\n * Computes the description for a grid selectable collection.\n * @param props\n */\nexport function useHighlightSelectionDescription(props: HighlightSelectionDescriptionProps): AriaLabelingProps {\n  let stringFormatter = useLocalizedStringFormatter(intlMessages);\n  let modality = useInteractionModality();\n  // null is the default if the user hasn't interacted with the table at all yet or the rest of the page\n  let shouldLongPress = (modality === 'pointer' || modality === 'virtual' || modality == null)\n    && typeof window !== 'undefined' && 'ontouchstart' in window;\n\n  let interactionDescription = useMemo(() => {\n    let selectionMode = props.selectionManager.selectionMode;\n    let selectionBehavior = props.selectionManager.selectionBehavior;\n\n    let message = undefined;\n    if (shouldLongPress) {\n      message = stringFormatter.format('longPressToSelect');\n    }\n\n    return selectionBehavior === 'replace' && selectionMode !== 'none' && props.hasItemActions ? message : undefined;\n  }, [props.selectionManager.selectionMode, props.selectionManager.selectionBehavior, props.hasItemActions, stringFormatter, shouldLongPress]);\n\n  let descriptionProps = useDescription(interactionDescription);\n  return descriptionProps;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\n\nexport interface GridRowGroupAria {\n  /** Props for the row group element. */\n  rowGroupProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for a row group in a grid.\n */\nexport function useGridRowGroup(): GridRowGroupAria {\n  return {\n    rowGroupProps: {\n      role: 'rowgroup'\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Node} from '@react-types/shared';\nimport {GridCollection} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {RefObject} from 'react';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridRowProps<T> {\n  /** An object representing the grid row. Contains all the relevant information that makes up the grid row. */\n  node: Node<T>,\n  /** Whether the grid row is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the row.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridRowAria {\n  /** Props for the grid row element. */\n  rowProps: DOMAttributes,\n  /** Whether the row is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a row in a grid.\n * @param props - Props for the row.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridRow<T, C extends GridCollection<T>, S extends GridState<T, C>>(props: GridRowProps<T>, state: S, ref: RefObject<FocusableElement>): GridRowAria {\n  let {\n    node,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {actions: {onRowAction}} = gridMap.get(state);\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    shouldSelectOnPressUp,\n    onAction: onRowAction ? () => onRowAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let isSelected = state.selectionManager.isSelected(node.key);\n\n  let rowProps: DOMAttributes = {\n    role: 'row',\n    'aria-selected': state.selectionManager.selectionMode !== 'none' ? isSelected : undefined,\n    ...itemProps\n  };\n\n  if (isVirtualized) {\n    rowProps['aria-rowindex'] = node.index + 1; // aria-rowindex is 1 based\n  }\n\n  return {\n    rowProps,\n    isPressed\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {getScrollParent, mergeProps, scrollIntoViewport} from '@react-aria/utils';\nimport {GridCollection, GridNode} from '@react-types/grid';\nimport {gridMap} from './utils';\nimport {GridState} from '@react-stately/grid';\nimport {isFocusVisible} from '@react-aria/interactions';\nimport {KeyboardEvent as ReactKeyboardEvent, RefObject} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSelectableItem} from '@react-aria/selection';\n\nexport interface GridCellProps {\n  /** An object representing the grid cell. Contains all the relevant information that makes up the grid cell. */\n  node: GridNode<unknown>,\n  /** Whether the grid cell is contained in a virtual scroller. */\n  isVirtualized?: boolean,\n  /** Whether the cell or its first focusable child element should be focused when the grid cell is focused. */\n  focusMode?: 'child' | 'cell',\n  /** Whether selection should occur on press up instead of press down. */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the cell.\n   * Please use onCellAction at the collection level instead.\n   * @deprecated\n   **/\n  onAction?: () => void\n}\n\nexport interface GridCellAria {\n  /** Props for the grid cell element. */\n  gridCellProps: DOMAttributes,\n  /** Whether the cell is currently in a pressed state. */\n  isPressed: boolean\n}\n\n/**\n * Provides the behavior and accessibility implementation for a cell in a grid.\n * @param props - Props for the cell.\n * @param state - State of the parent grid, as returned by `useGridState`.\n */\nexport function useGridCell<T, C extends GridCollection<T>>(props: GridCellProps, state: GridState<T, C>, ref: RefObject<FocusableElement>): GridCellAria {\n  let {\n    node,\n    isVirtualized,\n    focusMode = 'child',\n    shouldSelectOnPressUp,\n    onAction\n  } = props;\n\n  let {direction} = useLocale();\n  let {keyboardDelegate, actions: {onCellAction}} = gridMap.get(state);\n\n  // Handles focusing the cell. If there is a focusable child,\n  // it is focused, otherwise the cell itself is focused.\n  let focus = () => {\n    let treeWalker = getFocusableTreeWalker(ref.current);\n    if (focusMode === 'child') {\n      // If focus is already on a focusable child within the cell, early return so we don't shift focus\n      if (ref.current.contains(document.activeElement) && ref.current !== document.activeElement) {\n        return;\n      }\n\n      let focusable = state.selectionManager.childFocusStrategy === 'last'\n        ? last(treeWalker)\n        : treeWalker.firstChild() as FocusableElement;\n      if (focusable) {\n        focusSafely(focusable);\n        return;\n      }\n    }\n\n    if (!ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n    }\n  };\n\n  let {itemProps, isPressed} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: node.key,\n    ref,\n    isVirtualized,\n    focus,\n    shouldSelectOnPressUp,\n    onAction: onCellAction ? () => onCellAction(node.key) : onAction,\n    isDisabled: state.collection.size === 0\n  });\n\n  let onKeyDownCapture = (e: ReactKeyboardEvent) => {\n    if (!e.currentTarget.contains(e.target as Element) || state.isKeyboardNavigationDisabled) {\n      return;\n    }\n\n    let walker = getFocusableTreeWalker(ref.current);\n    walker.currentNode = document.activeElement;\n\n    switch (e.key) {\n      case 'ArrowLeft': {\n        // Find the next focusable element within the cell.\n        let focusable = direction === 'rtl'\n          ? walker.nextNode() as FocusableElement\n          : walker.previousNode() as FocusableElement;\n\n        // Don't focus the cell itself if focusMode is \"child\"\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          // If there is no next focusable child, then move to the next cell to the left of this one.\n          // This will be handled by useSelectableCollection. However, if there is no cell to the left\n          // of this one, only one column, and the grid doesn't focus rows, then the next key will be the\n          // same as this one. In that case we need to handle focusing either the cell or the first/last\n          // child, depending on the focus mode.\n          let prev = keyboardDelegate.getKeyLeftOf(node.key);\n          if (prev !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'rtl') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? walker.firstChild() as FocusableElement\n              : last(walker);\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        let focusable = direction === 'rtl'\n          ? walker.previousNode() as FocusableElement\n          : walker.nextNode() as FocusableElement;\n\n        if (focusMode === 'child' && focusable === ref.current) {\n          focusable = null;\n        }\n\n        if (focusable) {\n          e.preventDefault();\n          e.stopPropagation();\n          focusSafely(focusable);\n          scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n        } else {\n          let next = keyboardDelegate.getKeyRightOf(node.key);\n          if (next !== node.key) {\n            break;\n          }\n\n          e.preventDefault();\n          e.stopPropagation();\n          if (focusMode === 'cell' && direction === 'ltr') {\n            focusSafely(ref.current);\n            scrollIntoViewport(ref.current, {containingElement: getScrollParent(ref.current)});\n          } else {\n            walker.currentNode = ref.current;\n            focusable = direction === 'rtl'\n              ? last(walker)\n              : walker.firstChild() as FocusableElement;\n            if (focusable) {\n              focusSafely(focusable);\n              scrollIntoViewport(focusable, {containingElement: getScrollParent(ref.current)});\n            }\n          }\n        }\n        break;\n      }\n      case 'ArrowUp':\n      case 'ArrowDown':\n        // Prevent this event from reaching cell children, e.g. menu buttons. We want arrow keys to navigate\n        // to the cell above/below instead. We need to re-dispatch the event from a higher parent so it still\n        // bubbles and gets handled by useSelectableCollection.\n        if (!e.altKey && ref.current.contains(e.target as Element)) {\n          e.stopPropagation();\n          e.preventDefault();\n          ref.current.parentElement.dispatchEvent(\n            new KeyboardEvent(e.nativeEvent.type, e.nativeEvent)\n          );\n        }\n        break;\n    }\n  };\n\n  // Grid cells can have focusable elements inside them. In this case, focus should\n  // be marshalled to that element rather than focusing the cell itself.\n  let onFocus = (e) => {\n    if (e.target !== ref.current) {\n      // useSelectableItem only handles setting the focused key when\n      // the focused element is the gridcell itself. We also want to\n      // set the focused key when a child element receives focus.\n      // If focus is currently visible (e.g. the user is navigating with the keyboard),\n      // then skip this. We want to restore focus to the previously focused row/cell\n      // in that case since the table should act like a single tab stop.\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocusedKey(node.key);\n      }\n      return;\n    }\n\n    // If the cell itself is focused, wait a frame so that focus finishes propagatating\n    // up to the tree, and move focus to a focusable child if possible.\n    requestAnimationFrame(() => {\n      if (focusMode === 'child' && document.activeElement === ref.current) {\n        focus();\n      }\n    });\n  };\n\n  let gridCellProps: DOMAttributes = mergeProps(itemProps, {\n    role: 'gridcell',\n    onKeyDownCapture,\n    onFocus\n  });\n\n  if (isVirtualized) {\n    gridCellProps['aria-colindex'] = (node.colIndex ?? node.index) + 1; // aria-colindex is 1-based\n  }\n\n  return {\n    gridCellProps,\n    isPressed\n  };\n}\n\nfunction last(walker: TreeWalker) {\n  let next: FocusableElement;\n  let last: FocusableElement;\n  do {\n    last = walker.lastChild() as FocusableElement;\n    if (last) {\n      next = last;\n    }\n  } while (last);\n  return next;\n}\n","import {AriaCheckboxProps} from '@react-types/checkbox';\nimport {GridCollection} from '@react-types/grid';\nimport {GridState} from '@react-stately/grid';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {Key} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\n\nexport interface AriaGridSelectionCheckboxProps {\n  /** A unique key for the checkbox. */\n  key: Key\n}\n\nexport interface GridSelectionCheckboxAria {\n  /** Props for the row selection checkbox element. */\n  checkboxProps: AriaCheckboxProps\n}\n\n\n/**\n * Provides the behavior and accessibility implementation for a selection checkbox in a grid.\n * @param props - Props for the selection checkbox.\n * @param state - State of the grid, as returned by `useGridState`.\n */\nexport function useGridSelectionCheckbox<T, C extends GridCollection<T>>(props: AriaGridSelectionCheckboxProps, state: GridState<T, C>): GridSelectionCheckboxAria {\n  let {key} = props;\n\n  let manager = state.selectionManager;\n  let checkboxId = useId();\n  let isDisabled = !state.selectionManager.canSelectItem(key);\n  let isSelected = state.selectionManager.isSelected(key);\n\n  let onChange = () => manager.select(key);\n\n  const stringFormatter = useLocalizedStringFormatter(intlMessages);\n\n  return {\n    checkboxProps: {\n      id: checkboxId,\n      'aria-label': stringFormatter.format('select'),\n      isSelected,\n      isDisabled,\n      onChange\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}