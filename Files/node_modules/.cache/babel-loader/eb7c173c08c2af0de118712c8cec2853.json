{"ast":null,"code":"import React, { useMemo } from \"react\";\n\n// The table\nconst peopleColumns = useMemo(() => [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Birth Date\",\n  accessor: \"birth_year\"\n}, {\n  Header: \"Gender\",\n  accessor: \"gender\"\n}, {\n  Header: \"Hair Color\",\n  accessor: \"hair_color\"\n}, {\n  Header: \"Height\",\n  accessor: \"height\"\n}, {\n  Header: \"Weight (Kilo)\",\n  accessor: \"mass\"\n}], []);\nconst planetColumns = useMemo(() => [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Climate\",\n  accessor: \"climate\"\n}, {\n  Header: \"Diameter (Kilometers)\",\n  accessor: \"diameter\"\n}, {\n  Header: \"Gravity\",\n  accessor: \"gravity\"\n}, {\n  Header: \"Orbital Period (days)\",\n  accessor: \"orbital_period\"\n}, {\n  Header: \"Population\",\n  accessor: \"population\"\n}, {\n  Header: \"Rotation Period (hrs)\",\n  accessor: \"rotation_period\"\n}, {\n  Header: \"Surface Water (%)\",\n  accessor: \"surface_water\"\n}, {\n  Header: \"Terrain\",\n  accessor: \"terrain\"\n}], []);\nconst starshipColumns = useMemo(() => [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Model\",\n  accessor: \"model\"\n}, {\n  Header: \"Manufacturer\",\n  accessor: \"manufacturer\"\n}, {\n  Header: \"Starship Class\",\n  accessor: \"starship_class\"\n}, {\n  Header: \"Speed (# of Megalights/Hr)\",\n  accessor: \"MGLT\"\n}, {\n  Header: \"Length (meters)\",\n  accessor: \"length\"\n}, {\n  Header: \"Passenger Capacity (non-essential)\",\n  accessor: \"passengers\"\n}, {\n  Header: \"Max Atmosphering Speed (n/a if not possible)\",\n  accessor: \"max_atmosphering_speed\"\n}, {\n  Header: \"Cargo Capacity (Kilo)\",\n  accessor: \"cargo_capacity\"\n}, {\n  Header: \"Cost (galactic credits)\",\n  accessor: \"cost_in_credits\"\n}, {\n  Header: \"Crew\",\n  accessor: \"crew\"\n}, {\n  Header: \"Hyperdrive Rating\",\n  accessor: \"hyperdrive_rating\"\n}], []);\nconst filmColumns = useMemo(() => [{\n  Header: \"Title\",\n  accessor: \"title\"\n}, {\n  Header: \"Director\",\n  accessor: \"director\"\n}, {\n  Header: \"Producer\",\n  accessor: \"producer\"\n}, {\n  Header: \"Release Date\",\n  accessor: \"release_date\"\n}], []);\nconst speciesColumns = useMemo(() => [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Skin Color\",\n  accessor: \"skin_colors\"\n}, {\n  Header: \"Eye Colors\",\n  accessor: \"eye_colors\"\n}, {\n  Header: \"Hair Colors\",\n  accessor: \"hair_colors\"\n}, {\n  Header: \"Language\",\n  accessor: \"language\"\n}, {\n  Header: \"Designation\",\n  accessor: \"designation\"\n}, {\n  Header: \"Classification\",\n  accessor: \"classification\"\n}, {\n  Header: \"Average Height (centimeters)\",\n  accessor: \"average_height\"\n}, {\n  Header: \"Average Lifespan (years)\",\n  accessor: \"average_lifespan\"\n}], []);\nconst vehicleColumns = useMemo(() => [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Model\",\n  accessor: \"model\"\n}, {\n  Header: \"Manufacturer\",\n  accessor: \"manufacturer\"\n}, {\n  Header: \"Vehicle Class\",\n  accessor: \"vehicle_class\"\n}, {\n  Header: \"Cargo Capacity (kilos)\",\n  accessor: \"cargo_capacity\"\n}, {\n  Header: \"Consumable Capacity\",\n  accessor: \"consumables\"\n}, {\n  Header: \"Crew Size\",\n  accessor: \"crew\"\n}, {\n  Header: \"Passenger Capacity\",\n  accessor: \"passengers\"\n}, {\n  Header: \"Length (meters)\",\n  accessor: \"length\"\n}], []);\nexport { peopleColumns, planetColumns, starshipColumns, filmColumns, speciesColumns, vehicleColumns };","map":{"version":3,"names":["React","useMemo","peopleColumns","Header","accessor","planetColumns","starshipColumns","filmColumns","speciesColumns","vehicleColumns"],"sources":["/Users/seung/Documents/work code/Files/src/tableData.js"],"sourcesContent":["import React, { useMemo } from \"react\";\n\n\n// The table\nconst peopleColumns = useMemo(\n    () => [\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n            },\n            {\n                Header: \"Birth Date\",\n                accessor: \"birth_year\",\n            },\n            {\n                Header: \"Gender\",\n                accessor: \"gender\",\n            },\n            {\n                Header: \"Hair Color\",\n                accessor: \"hair_color\",\n            },\n            {\n                Header: \"Height\",\n                accessor: \"height\",\n            },\n            {\n                Header: \"Weight (Kilo)\",\n                accessor: \"mass\",\n            },\n        ], []\n);\n\nconst planetColumns = useMemo(\n    () => [\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n            },\n            {\n                Header: \"Climate\",\n                accessor: \"climate\",\n            },\n            {\n                Header: \"Diameter (Kilometers)\",\n                accessor: \"diameter\",\n            },\n            {\n                Header: \"Gravity\",\n                accessor: \"gravity\",\n            },\n            {\n                Header: \"Orbital Period (days)\",\n                accessor: \"orbital_period\",\n            },\n            {\n                Header: \"Population\",\n                accessor: \"population\",\n            },\n            {\n                Header: \"Rotation Period (hrs)\",\n                accessor: \"rotation_period\",\n            },\n            {\n                Header: \"Surface Water (%)\",\n                accessor: \"surface_water\",\n            },\n            {\n                Header: \"Terrain\",\n                accessor: \"terrain\",\n            },\n        ], []\n);\n\nconst starshipColumns = useMemo(\n    () => [\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n            },\n            {\n                Header: \"Model\",\n                accessor: \"model\",\n            },\n            {\n                Header: \"Manufacturer\",\n                accessor: \"manufacturer\",\n            },\n            {\n                Header: \"Starship Class\",\n                accessor: \"starship_class\",\n            },\n            {\n                Header: \"Speed (# of Megalights/Hr)\",\n                accessor: \"MGLT\",\n            },\n            {\n                Header: \"Length (meters)\",\n                accessor: \"length\",\n            },\n            {\n                Header: \"Passenger Capacity (non-essential)\",\n                accessor: \"passengers\",\n            },\n            {\n                Header: \"Max Atmosphering Speed (n/a if not possible)\",\n                accessor: \"max_atmosphering_speed\",\n            },\n            {\n                Header: \"Cargo Capacity (Kilo)\",\n                accessor: \"cargo_capacity\",\n            },\n            {\n                Header: \"Cost (galactic credits)\",\n                accessor: \"cost_in_credits\",\n            },\n            {\n                Header: \"Crew\",\n                accessor: \"crew\",\n            },\n            {\n                Header: \"Hyperdrive Rating\",\n                accessor: \"hyperdrive_rating\",\n            },\n        ], []\n);\n\nconst filmColumns = useMemo(\n    () => [\n            {\n                Header: \"Title\",\n                accessor: \"title\",\n            },\n            {\n                Header: \"Director\",\n                accessor: \"director\",\n            },\n            {\n                Header: \"Producer\",\n                accessor: \"producer\",\n            },\n            {\n                Header: \"Release Date\",\n                accessor: \"release_date\",\n            },\n        ], []\n);\n\nconst speciesColumns = useMemo(\n    () => [\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n            },\n            {\n                Header: \"Skin Color\",\n                accessor: \"skin_colors\",\n            },\n            {\n                Header: \"Eye Colors\",\n                accessor: \"eye_colors\",\n            },\n            {\n                Header: \"Hair Colors\",\n                accessor: \"hair_colors\",\n            },\n            {\n                Header: \"Language\",\n                accessor: \"language\",\n            },\n            {\n                Header: \"Designation\",\n                accessor: \"designation\",\n            },\n            {\n                Header: \"Classification\",\n                accessor: \"classification\",\n            },\n            {\n                Header: \"Average Height (centimeters)\",\n                accessor: \"average_height\",\n            },\n            {\n                Header: \"Average Lifespan (years)\",\n                accessor: \"average_lifespan\",\n            },\n        ], []\n);\n\nconst vehicleColumns = useMemo(\n    () => [\n            {\n                Header: \"Name\",\n                accessor: \"name\",\n            },\n            {\n                Header: \"Model\",\n                accessor: \"model\",\n            },\n            {\n                Header: \"Manufacturer\",\n                accessor: \"manufacturer\",\n            },\n            {\n                Header: \"Vehicle Class\",\n                accessor: \"vehicle_class\",\n            },\n            {\n                Header: \"Cargo Capacity (kilos)\",\n                accessor: \"cargo_capacity\",\n            },\n            {\n                Header: \"Consumable Capacity\",\n                accessor: \"consumables\",\n            },\n            {\n                Header: \"Crew Size\",\n                accessor: \"crew\",\n            },\n            {\n                Header: \"Passenger Capacity\",\n                accessor: \"passengers\",\n            },\n            {\n                Header: \"Length (meters)\",\n                accessor: \"length\",\n            },\n        ], []\n);\n\nexport {peopleColumns, planetColumns, starshipColumns, filmColumns, speciesColumns, vehicleColumns}"],"mappings":"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"},"metadata":{},"sourceType":"module"}