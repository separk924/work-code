{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst TableSearch = _ref => {\n  _s();\n  let {\n    searchVal,\n    retrieve\n  } = _ref;\n  const [filteredData, setFilteredData] = useState([]);\n  const [origData, setOrigData] = useState([]);\n  const [searchIndex, setSearchIndex] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    setLoading(true);\n    const crawl = (user, allValues) => {\n      if (!allValues) allValues = [];\n      for (var key in user) {\n        if (typeof user[key] === \"object\") crawl(user[key], allValues);else allValues.push(user[key] + \" \");\n      }\n      return allValues;\n    };\n    const fetchData = async () => {\n      const {\n        data: users\n      } = await retrieve();\n      setOrigData(users);\n      setFilteredData(users);\n      const searchInd = users.map(user => {\n        const allValues = crawl(user);\n        return {\n          allValues: allValues.toString()\n        };\n      });\n      setSearchIndex(searchInd);\n      if (users) setLoading(false);\n    };\n    fetchData();\n  }, [retrieve]);\n  useEffect(() => {\n    if (searchVal) {\n      const reqData = searchIndex.map((user, index) => {\n        if (user.allValues.toLowerCase().indexOf(searchVal.toLowerCase()) >= 0) return origData[index];\n        return null;\n      });\n      setFilteredData(reqData.filter(user => {\n        if (user) return true;\n        return false;\n      }));\n    } else setFilteredData(origData);\n  }, [searchVal, origData, searchIndex]);\n  return {\n    filteredData,\n    loading\n  };\n};\n_s(TableSearch, \"XI07xObxu7AEENAc+GVbS9bW4qc=\");\n_c = TableSearch;\nexport default TableSearch;\nvar _c;\n$RefreshReg$(_c, \"TableSearch\");","map":{"version":3,"names":["useState","useEffect","TableSearch","searchVal","retrieve","filteredData","setFilteredData","origData","setOrigData","searchIndex","setSearchIndex","loading","setLoading","crawl","user","allValues","key","push","fetchData","data","users","searchInd","map","toString","reqData","index","toLowerCase","indexOf","filter"],"sources":["/Users/seung/Documents/work-code/Files/src/TableSearch.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst TableSearch = ({ searchVal, retrieve }) => {\n  const [filteredData, setFilteredData] = useState([]);\n  const [origData, setOrigData] = useState([]);\n  const [searchIndex, setSearchIndex] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const crawl = (user, allValues) => {\n      if (!allValues) allValues = [];\n      for (var key in user) {\n        if (typeof user[key] === \"object\") crawl(user[key], allValues);\n        else allValues.push(user[key] + \" \");\n      }\n      return allValues;\n    };\n    const fetchData = async () => {\n      const { data: users } = await retrieve();\n      setOrigData(users);\n      setFilteredData(users);\n      const searchInd = users.map(user => {\n        const allValues = crawl(user);\n        return { allValues: allValues.toString() };\n      });\n      setSearchIndex(searchInd);\n      if (users) setLoading(false);\n    };\n    fetchData();\n  }, [retrieve]);\n\n  useEffect(() => {\n    if (searchVal) {\n      const reqData = searchIndex.map((user, index) => {\n        if (user.allValues.toLowerCase().indexOf(searchVal.toLowerCase()) >= 0)\n          return origData[index];\n        return null;\n      });\n      setFilteredData(\n        reqData.filter(user => {\n          if (user) return true;\n          return false;\n        })\n      );\n    } else setFilteredData(origData);\n  }, [searchVal, origData, searchIndex]);\n\n  return { filteredData, loading };\n};\n\nexport default TableSearch;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAAEC,SAAS;IAAEC;EAAS,CAAC;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMC,KAAK,GAAG,CAACC,IAAI,EAAEC,SAAS,KAAK;MACjC,IAAI,CAACA,SAAS,EAAEA,SAAS,GAAG,EAAE;MAC9B,KAAK,IAAIC,GAAG,IAAIF,IAAI,EAAE;QACpB,IAAI,OAAOA,IAAI,CAACE,GAAG,CAAC,KAAK,QAAQ,EAAEH,KAAK,CAACC,IAAI,CAACE,GAAG,CAAC,EAAED,SAAS,CAAC,CAAC,KAC1DA,SAAS,CAACE,IAAI,CAACH,IAAI,CAACE,GAAG,CAAC,GAAG,GAAG,CAAC;MACtC;MACA,OAAOD,SAAS;IAClB,CAAC;IACD,MAAMG,SAAS,GAAG,YAAY;MAC5B,MAAM;QAAEC,IAAI,EAAEC;MAAM,CAAC,GAAG,MAAMhB,QAAQ,EAAE;MACxCI,WAAW,CAACY,KAAK,CAAC;MAClBd,eAAe,CAACc,KAAK,CAAC;MACtB,MAAMC,SAAS,GAAGD,KAAK,CAACE,GAAG,CAACR,IAAI,IAAI;QAClC,MAAMC,SAAS,GAAGF,KAAK,CAACC,IAAI,CAAC;QAC7B,OAAO;UAAEC,SAAS,EAAEA,SAAS,CAACQ,QAAQ;QAAG,CAAC;MAC5C,CAAC,CAAC;MACFb,cAAc,CAACW,SAAS,CAAC;MACzB,IAAID,KAAK,EAAER,UAAU,CAAC,KAAK,CAAC;IAC9B,CAAC;IACDM,SAAS,EAAE;EACb,CAAC,EAAE,CAACd,QAAQ,CAAC,CAAC;EAEdH,SAAS,CAAC,MAAM;IACd,IAAIE,SAAS,EAAE;MACb,MAAMqB,OAAO,GAAGf,WAAW,CAACa,GAAG,CAAC,CAACR,IAAI,EAAEW,KAAK,KAAK;QAC/C,IAAIX,IAAI,CAACC,SAAS,CAACW,WAAW,EAAE,CAACC,OAAO,CAACxB,SAAS,CAACuB,WAAW,EAAE,CAAC,IAAI,CAAC,EACpE,OAAOnB,QAAQ,CAACkB,KAAK,CAAC;QACxB,OAAO,IAAI;MACb,CAAC,CAAC;MACFnB,eAAe,CACbkB,OAAO,CAACI,MAAM,CAACd,IAAI,IAAI;QACrB,IAAIA,IAAI,EAAE,OAAO,IAAI;QACrB,OAAO,KAAK;MACd,CAAC,CAAC,CACH;IACH,CAAC,MAAMR,eAAe,CAACC,QAAQ,CAAC;EAClC,CAAC,EAAE,CAACJ,SAAS,EAAEI,QAAQ,EAAEE,WAAW,CAAC,CAAC;EAEtC,OAAO;IAAEJ,YAAY;IAAEM;EAAQ,CAAC;AAClC,CAAC;AAAC,GA/CIT,WAAW;AAAA,KAAXA,WAAW;AAiDjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}